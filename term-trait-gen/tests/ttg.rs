/// generated by [term_trait_gen::generate]
#[rustfmt::skip]
pub mod extension_of {
    /// generated by [term_trait_gen::heap_trait]
    #[rustfmt::skip]
    pub trait Heap: Sized {
        type Plus: crate::extension_of::owned::Plus<Heap = Self>;
        type LeftOperand: crate::extension_of::owned::LeftOperand<Heap = Self>;
        type RightOperand: crate::extension_of::owned::RightOperand<Heap = Self>;
        type F: crate::extension_of::owned::F<Heap = Self>;
        type Sum: crate::extension_of::owned::Sum<Heap = Self>;
        type Nat: crate::extension_of::owned::Nat<Heap = Self>;
    }
    /// generated by [term_trait_gen::owned::generate]
    #[rustfmt::skip]
    pub mod owned {
        pub trait Plus: term::Heaped + term::CanonicallyConstructibleFrom<
                <Self as term::Heaped>::Heap,
                (
                    <<Self as term::Heaped>::Heap as crate::extension_of::Heap>::LeftOperand,
                    (
                        <<Self as term::Heaped>::Heap as crate::extension_of::Heap>::RightOperand,
                        (),
                    ),
                ),
            >
        where
            <Self as term::Heaped>::Heap: crate::extension_of::Heap,
        {}
        pub trait LeftOperand: term::Heaped + term::CanonicallyConstructibleFrom<
                <Self as term::Heaped>::Heap,
                (<<Self as term::Heaped>::Heap as crate::extension_of::Heap>::Nat, ()),
            >
        where
            <Self as term::Heaped>::Heap: crate::extension_of::Heap,
        {}
        pub trait RightOperand: term::Heaped + term::CanonicallyConstructibleFrom<
                <Self as term::Heaped>::Heap,
                (<<Self as term::Heaped>::Heap as crate::extension_of::Heap>::Nat, ()),
            >
        where
            <Self as term::Heaped>::Heap: crate::extension_of::Heap,
        {}
        pub trait F: term::Heaped + term::CanonicallyConstructibleFrom<
                <Self as term::Heaped>::Heap,
                (<<Self as term::Heaped>::Heap as crate::extension_of::Heap>::Nat, ()),
            >
        where
            <Self as term::Heaped>::Heap: crate::extension_of::Heap,
        {}
        pub trait Sum: term::Heaped + term::CanonicallyConstructibleFrom<
                <Self as term::Heaped>::Heap,
                (
                    tymetafuncspec_core::Set<
                        <Self as term::Heaped>::Heap,
                        <<Self as term::Heaped>::Heap as crate::extension_of::Heap>::Nat,
                    >,
                    (),
                ),
            >
        where
            <Self as term::Heaped>::Heap: crate::extension_of::Heap,
        {}
        pub trait Nat: term::Heaped + term::CanonicallyConstructibleFrom<
                <Self as term::Heaped>::Heap,
                (tymetafuncspec_core::BoundedNat<<Self as term::Heaped>::Heap>, ()),
            > + term::CanonicallyConstructibleFrom<
                <Self as term::Heaped>::Heap,
                (
                    tymetafuncspec_core::IdxBox<
                        <Self as term::Heaped>::Heap,
                        <<Self as term::Heaped>::Heap as crate::extension_of::Heap>::F,
                    >,
                    (),
                ),
            > + term::CanonicallyConstructibleFrom<
                <Self as term::Heaped>::Heap,
                (
                    tymetafuncspec_core::IdxBox<
                        <Self as term::Heaped>::Heap,
                        <<Self as term::Heaped>::Heap as crate::extension_of::Heap>::Plus,
                    >,
                    (),
                ),
            > + term::CanonicallyConstructibleFrom<
                <Self as term::Heaped>::Heap,
                (
                    tymetafuncspec_core::IdxBox<
                        <Self as term::Heaped>::Heap,
                        <<Self as term::Heaped>::Heap as crate::extension_of::Heap>::Sum,
                    >,
                    (),
                ),
            >
        where
            <Self as term::Heaped>::Heap: crate::extension_of::Heap,
        {}
    }
    /// generated by [term_trait_gen::reference::generate]
    #[rustfmt::skip]
    pub mod reference {}
}
