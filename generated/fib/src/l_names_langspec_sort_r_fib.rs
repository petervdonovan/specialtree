#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [names_langspec_sort_gen::generate]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::BoundedNat;
use crate::l_words_mod_r_fib as lwmrf;
use crate::l_words_mod_r_fib::sorts as lwmrfs;
impl names_langspec_sort::NamesLangspecSort<lwmrf::L> for lwmrfs::F {
    fn sort_idx() -> u32 {
        0u32
    }
}
impl names_langspec_sort::NamesLangspecSort<lwmrf::L> for lwmrfs::Left_operand {
    fn sort_idx() -> u32 {
        1u32
    }
}
impl names_langspec_sort::NamesLangspecSort<lwmrf::L> for lwmrfs::Plus {
    fn sort_idx() -> u32 {
        2u32
    }
}
impl names_langspec_sort::NamesLangspecSort<lwmrf::L> for lwmrfs::Right_operand {
    fn sort_idx() -> u32 {
        3u32
    }
}
impl names_langspec_sort::NamesLangspecSort<lwmrf::L> for lwmrfs::Sum {
    fn sort_idx() -> u32 {
        4u32
    }
}
impl names_langspec_sort::NamesLangspecSort<lwmrf::L> for lwmrfs::Nat {
    fn sort_idx() -> u32 {
        5u32
    }
}
impl names_langspec_sort::NamesLangspecSort<lwmrf::L> for Set<(), lwmrfs::Nat> {
    fn sort_idx() -> u32 {
        6u32
    }
}
impl names_langspec_sort::NamesLangspecSort<lwmrf::L> for BoundedNat<()> {
    fn sort_idx() -> u32 {
        7u32
    }
}
