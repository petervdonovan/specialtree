#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [term_pattern_match_strategy_provider_gen::generate]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::BoundedNat;
use crate::l_words_mod_r_fib as lwmrf;
use crate::l_words_mod_r_fib::sorts as lwmrfs;
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl pmsp::NamesPatternMatchStrategy<lwmrf::L> for lwmrfs::F {
    type Strategy = ((lwmrfs::Nat, ()), ());
}
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl pmsp::NamesPatternMatchStrategy<lwmrf::L> for lwmrfs::Left_operand {
    type Strategy = ((lwmrfs::Nat, ()), ());
}
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl pmsp::NamesPatternMatchStrategy<lwmrf::L> for lwmrfs::Plus {
    type Strategy = ((lwmrfs::Left_operand, (lwmrfs::Right_operand, ())), ());
}
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl pmsp::NamesPatternMatchStrategy<lwmrf::L> for lwmrfs::Right_operand {
    type Strategy = ((lwmrfs::Nat, ()), ());
}
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl pmsp::NamesPatternMatchStrategy<lwmrf::L> for lwmrfs::Sum {
    type Strategy = ((Set<(), lwmrfs::Nat>, ()), ());
}
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl pmsp::NamesPatternMatchStrategy<lwmrf::L> for lwmrfs::Nat {
    type Strategy = (
        (BoundedNat<()>, ()),
        ((lwmrfs::F, ()), ((lwmrfs::Plus, ()), ((lwmrfs::Sum, ()), ()))),
    );
}
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl pmsp::NamesPatternMatchStrategy<lwmrf::L> for Set<(), lwmrfs::Nat> {
    type Strategy = ();
}
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl pmsp::NamesPatternMatchStrategy<lwmrf::L> for BoundedNat<()> {
    type Strategy = ();
}
