#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [parse_gen::targets::parsells]
use parse::KeywordSequence;
use crate::words_mod_fib::sorts as wmfs;
/// @generated by [parse_gen::generate_parsell]
impl parse_adt::NamesParseLL for wmfs::Plus {
    const START: KeywordSequence = parse::KeywordSequence(
        &[parse::Keyword::new(stringify!(plus))],
    );
    const PROCEED: &'static [KeywordSequence] = &[];
    const END: KeywordSequence = parse::KeywordSequence(&[]);
}
/// @generated by [parse_gen::generate_parsell]
impl parse_adt::NamesParseLL for wmfs::LeftOperand {
    const START: KeywordSequence = parse::KeywordSequence(
        &[parse::Keyword::new(stringify!(left_operand))],
    );
    const PROCEED: &'static [KeywordSequence] = &[];
    const END: KeywordSequence = parse::KeywordSequence(&[]);
}
/// @generated by [parse_gen::generate_parsell]
impl parse_adt::NamesParseLL for wmfs::RightOperand {
    const START: KeywordSequence = parse::KeywordSequence(
        &[parse::Keyword::new(stringify!(right_operand))],
    );
    const PROCEED: &'static [KeywordSequence] = &[];
    const END: KeywordSequence = parse::KeywordSequence(&[]);
}
/// @generated by [parse_gen::generate_parsell]
impl parse_adt::NamesParseLL for wmfs::F {
    const START: KeywordSequence = parse::KeywordSequence(
        &[parse::Keyword::new(stringify!(f))],
    );
    const PROCEED: &'static [KeywordSequence] = &[];
    const END: KeywordSequence = parse::KeywordSequence(&[]);
}
/// @generated by [parse_gen::generate_parsell]
impl parse_adt::NamesParseLL for wmfs::Sum {
    const START: KeywordSequence = parse::KeywordSequence(
        &[parse::Keyword::new(stringify!(sum))],
    );
    const PROCEED: &'static [KeywordSequence] = &[];
    const END: KeywordSequence = parse::KeywordSequence(&[]);
}
/// @generated by [parse_gen::generate_parsell]
impl parse_adt::NamesParseLL for wmfs::Nat {
    const START: KeywordSequence = parse::KeywordSequence(
        &[parse::Keyword::new(stringify!(nat))],
    );
    const PROCEED: &'static [KeywordSequence] = &[];
    const END: KeywordSequence = parse::KeywordSequence(&[]);
}
