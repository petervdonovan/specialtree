#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [term_specialized_gen::generate]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::IdxBox;
use tymetafuncspec_core::BoundedNat;
use crate::term_specialized_fib as tsf;
use crate::term_specialized_fib::heap::set as tsfhs;
use crate::term_specialized_fib::heap::nat_lit as tsfhnl;
use crate::term_specialized_fib::heap::idx_box as tsfhib;
/// @generated by [term_specialized_gen::gen_heap]
#[derive(Default)]
pub struct Heap {
    set: tsfhs::Bak,
    nat_lit: tsfhnl::Bak,
    idx_box: tsfhib::Bak,
}
/// @generated by [term_specialized_gen::gen_heap]
pub mod heap {
    use crate::term_specialized_fib::heap::set as tsfhs;
    use crate::term_specialized_fib::heap::nat_lit as tsfhnl;
    use crate::term_specialized_fib::heap::idx_box as tsfhib;
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    #[derive(Default)]
    pub struct Bak {
        pub set: tsfhs::Bak,
        pub nat_lit: tsfhnl::Bak,
        pub idx_box: tsfhib::Bak,
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod set {
        use crate::term_specialized_fib::heap::set::nat as tsfhsn;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub nat: tsfhsn::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod nat {
            use tymetafuncspec_core::SetHeapBak;
            use crate::term_specialized_fib as tsf;
            /// @generated by [term_specialized_gen::gen_heapbak_module]
            #[derive(Default)]
            pub struct Bak(pub SetHeapBak<tsf::Heap, tsf::Nat>);
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod nat_lit {
        use tymetafuncspec_core::BoundedNatHeapBak;
        use crate::term_specialized_fib as tsf;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub BoundedNatHeapBak<tsf::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod idx_box {
        use crate::term_specialized_fib::heap::idx_box::plus as tsfhibp;
        use crate::term_specialized_fib::heap::idx_box::f as tsfhibf;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub f: tsfhibf::Bak,
            pub plus: tsfhibp::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod f {
            use tymetafuncspec_core::IdxBoxHeapBak;
            use crate::term_specialized_fib as tsf;
            /// @generated by [term_specialized_gen::gen_heapbak_module]
            #[derive(Default)]
            pub struct Bak(pub IdxBoxHeapBak<tsf::Heap, tsf::F>);
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod plus {
            use tymetafuncspec_core::IdxBoxHeapBak;
            use crate::term_specialized_fib as tsf;
            /// @generated by [term_specialized_gen::gen_heapbak_module]
            #[derive(Default)]
            pub struct Bak(pub IdxBoxHeapBak<tsf::Heap, tsf::Plus>);
        }
    }
}
/// @generated by [term_specialized_gen::gen_heap]
pub mod superheap {
    term::impl_superheap!(
        crate ::term_specialized_fib::Heap; tymetafuncspec_core::SetHeapBak < crate
        ::term_specialized_fib::Heap, crate ::term_specialized_fib::Nat, >; set nat
    );
    term::impl_superheap!(
        crate ::term_specialized_fib::Heap; tymetafuncspec_core::BoundedNatHeapBak <
        crate ::term_specialized_fib::Heap, >; nat_lit
    );
    term::impl_superheap!(
        crate ::term_specialized_fib::Heap; tymetafuncspec_core::IdxBoxHeapBak < crate
        ::term_specialized_fib::Heap, crate ::term_specialized_fib::F, >; idx_box f
    );
    term::impl_superheap!(
        crate ::term_specialized_fib::Heap; tymetafuncspec_core::IdxBoxHeapBak < crate
        ::term_specialized_fib::Heap, crate ::term_specialized_fib::Plus, >; idx_box plus
    );
}
#[derive(Clone, Copy)]
pub struct Plus {
    pub left_operand: tsf::LeftOperand,
    pub right_operand: tsf::RightOperand,
}
#[derive(Clone, Copy)]
pub struct LeftOperand {
    pub nat: tsf::Nat,
}
#[derive(Clone, Copy)]
pub struct RightOperand {
    pub nat: tsf::Nat,
}
#[derive(Clone, Copy)]
pub struct F {
    pub nat: tsf::Nat,
}
#[derive(Clone, Copy)]
pub struct Sum {
    pub set: Set<tsf::Heap, tsf::Nat>,
}
#[derive(Clone, Copy)]
pub enum Nat {
    NatLit(BoundedNat<tsf::Heap>),
    F(IdxBox<tsf::Heap, tsf::F>),
    Plus(IdxBox<tsf::Heap, tsf::Plus>),
    Sum(tsf::Sum),
}
/// @generated by [term_specialized_gen::gen_heaped_impls]
pub mod heaped {
    use crate::term_specialized_fib as tsf;
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsf::Plus {
        type Heap = tsf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsf::LeftOperand {
        type Heap = tsf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsf::RightOperand {
        type Heap = tsf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsf::F {
        type Heap = tsf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsf::Sum {
        type Heap = tsf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsf::Nat {
        type Heap = tsf::Heap;
    }
}
