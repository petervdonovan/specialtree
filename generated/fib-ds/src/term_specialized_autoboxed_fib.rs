#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [term_specialized_gen::generate]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::IdxBox;
use tymetafuncspec_core::BoundedNat;
use crate::term_specialized_autoboxed_fib as tsaf;
use crate::term_specialized_autoboxed_fib::heap::set as tsafhs;
use crate::term_specialized_autoboxed_fib::heap::nat_lit as tsafhnl;
use crate::term_specialized_autoboxed_fib::heap::idx_box as tsafhib;
#[derive(Clone, Copy)]
pub struct Plus {
    pub left_operand: tsaf::LeftOperand,
    pub right_operand: tsaf::RightOperand,
}
#[derive(Clone, Copy)]
pub struct LeftOperand {
    pub nat: tsaf::Nat,
}
#[derive(Clone, Copy)]
pub struct RightOperand {
    pub nat: tsaf::Nat,
}
#[derive(Clone, Copy)]
pub struct F {
    pub nat: tsaf::Nat,
}
#[derive(Clone, Copy)]
pub struct Sum {
    pub set: Set<tsaf::Heap, tsaf::Nat>,
}
#[derive(Clone, Copy)]
pub enum Nat {
    NatLit(BoundedNat<tsaf::Heap>),
    F(IdxBox<tsaf::Heap, tsaf::F>),
    Plus(IdxBox<tsaf::Heap, tsaf::Plus>),
    Sum(tsaf::Sum),
}
/// @generated by [term_specialized_gen::gen_heaped_impls]
pub mod heaped {
    use crate::term_specialized_autoboxed_fib as tsaf;
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsaf::Plus {
        type Heap = tsaf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsaf::LeftOperand {
        type Heap = tsaf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsaf::RightOperand {
        type Heap = tsaf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsaf::F {
        type Heap = tsaf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsaf::Sum {
        type Heap = tsaf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsaf::Nat {
        type Heap = tsaf::Heap;
    }
}
/// @generated by [term_specialized_gen::gen_heap]
#[derive(Default)]
pub struct Heap {
    set: tsafhs::Bak,
    nat_lit: tsafhnl::Bak,
    idx_box: tsafhib::Bak,
}
/// @generated by [term_specialized_gen::gen_heap]
pub mod heap {
    use crate::term_specialized_autoboxed_fib::heap::set as tsafhs;
    use crate::term_specialized_autoboxed_fib::heap::nat_lit as tsafhnl;
    use crate::term_specialized_autoboxed_fib::heap::idx_box as tsafhib;
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    #[derive(Default)]
    pub struct Bak {
        pub set: tsafhs::Bak,
        pub nat_lit: tsafhnl::Bak,
        pub idx_box: tsafhib::Bak,
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod set {
        use crate::term_specialized_autoboxed_fib::heap::set::nat as tsafhsn;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub nat: tsafhsn::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod nat {
            use tymetafuncspec_core::SetHeapBak;
            use crate::term_specialized_autoboxed_fib as tsaf;
            /// @generated by [term_specialized_gen::gen_heapbak_module]
            #[derive(Default)]
            pub struct Bak(pub SetHeapBak<tsaf::Heap, tsaf::Nat>);
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod nat_lit {
        use tymetafuncspec_core::BoundedNatHeapBak;
        use crate::term_specialized_autoboxed_fib as tsaf;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub BoundedNatHeapBak<tsaf::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod idx_box {
        use crate::term_specialized_autoboxed_fib::heap::idx_box::plus as tsafhibp;
        use crate::term_specialized_autoboxed_fib::heap::idx_box::f as tsafhibf;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub f: tsafhibf::Bak,
            pub plus: tsafhibp::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod f {
            use tymetafuncspec_core::IdxBoxHeapBak;
            use crate::term_specialized_autoboxed_fib as tsaf;
            /// @generated by [term_specialized_gen::gen_heapbak_module]
            #[derive(Default)]
            pub struct Bak(pub IdxBoxHeapBak<tsaf::Heap, tsaf::F>);
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod plus {
            use tymetafuncspec_core::IdxBoxHeapBak;
            use crate::term_specialized_autoboxed_fib as tsaf;
            /// @generated by [term_specialized_gen::gen_heapbak_module]
            #[derive(Default)]
            pub struct Bak(pub IdxBoxHeapBak<tsaf::Heap, tsaf::Plus>);
        }
    }
}
/// @generated by [term_specialized_gen::gen_heap]
pub mod superheap {
    term::impl_superheap!(
        crate ::term_specialized_autoboxed_fib::Heap; tymetafuncspec_core::SetHeapBak <
        crate ::term_specialized_autoboxed_fib::Heap, crate
        ::term_specialized_autoboxed_fib::Nat, >; set nat
    );
    term::impl_superheap!(
        crate ::term_specialized_autoboxed_fib::Heap;
        tymetafuncspec_core::BoundedNatHeapBak < crate
        ::term_specialized_autoboxed_fib::Heap, >; nat_lit
    );
    term::impl_superheap!(
        crate ::term_specialized_autoboxed_fib::Heap; tymetafuncspec_core::IdxBoxHeapBak
        < crate ::term_specialized_autoboxed_fib::Heap, crate
        ::term_specialized_autoboxed_fib::F, >; idx_box f
    );
    term::impl_superheap!(
        crate ::term_specialized_autoboxed_fib::Heap; tymetafuncspec_core::IdxBoxHeapBak
        < crate ::term_specialized_autoboxed_fib::Heap, crate
        ::term_specialized_autoboxed_fib::Plus, >; idx_box plus
    );
}
