#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [has_own_sort_id_gen::generate]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::BoundedNat;
use fib::words_mod_fib::L;
use crate::term_specialized_fib as tsf;
impl has_own_sort_id::HasOwnSortId<tsf::Heap, L> for tsf::Plus {
    fn own_sort_id() -> u32 {
        0u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsf::Heap, L> for tsf::LeftOperand {
    fn own_sort_id() -> u32 {
        1u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsf::Heap, L> for tsf::RightOperand {
    fn own_sort_id() -> u32 {
        2u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsf::Heap, L> for tsf::F {
    fn own_sort_id() -> u32 {
        3u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsf::Heap, L> for tsf::Sum {
    fn own_sort_id() -> u32 {
        4u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsf::Heap, L> for tsf::Nat {
    fn own_sort_id() -> u32 {
        5u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsf::Heap, L> for Set<tsf::Heap, tsf::Nat> {
    fn own_sort_id() -> u32 {
        6u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsf::Heap, L> for BoundedNat<tsf::Heap> {
    fn own_sort_id() -> u32 {
        7u32
    }
}
