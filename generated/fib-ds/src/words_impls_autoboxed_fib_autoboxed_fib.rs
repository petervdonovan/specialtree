#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [words::words_impls]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::IdxBox;
use tymetafuncspec_core::BoundedNat;
use crate::words_mod_autoboxed_fib as wmaf;
use crate::words_mod_autoboxed_fib::sorts as wmafs;
use crate::term_specialized_autoboxed_fib as tsaf;
impl words::Implements<tsaf::Heap, wmaf::L> for tsaf::Plus {
    type LWord = wmafs::Plus;
}
impl words::Implements<tsaf::Heap, wmaf::L> for tsaf::LeftOperand {
    type LWord = wmafs::LeftOperand;
}
impl words::Implements<tsaf::Heap, wmaf::L> for tsaf::RightOperand {
    type LWord = wmafs::RightOperand;
}
impl words::Implements<tsaf::Heap, wmaf::L> for tsaf::F {
    type LWord = wmafs::F;
}
impl words::Implements<tsaf::Heap, wmaf::L> for tsaf::Sum {
    type LWord = wmafs::Sum;
}
impl words::Implements<tsaf::Heap, wmaf::L> for tsaf::Nat {
    type LWord = wmafs::Nat;
}
impl words::Implements<tsaf::Heap, wmaf::L> for Set<tsaf::Heap, tsaf::Nat> {
    type LWord = Set<(), wmafs::Nat>;
}
impl words::Implements<tsaf::Heap, wmaf::L> for BoundedNat<tsaf::Heap> {
    type LWord = BoundedNat<()>;
}
impl words::Implements<tsaf::Heap, wmaf::L> for IdxBox<tsaf::Heap, tsaf::F> {
    type LWord = IdxBox<(), wmafs::F>;
}
impl words::Implements<tsaf::Heap, wmaf::L> for IdxBox<tsaf::Heap, tsaf::Plus> {
    type LWord = IdxBox<(), wmafs::Plus>;
}
