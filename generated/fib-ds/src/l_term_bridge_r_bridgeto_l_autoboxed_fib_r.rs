#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
use crate::l_term_specialized_r_l_autoboxed_fib_r as ltsrlafr;
/// @generated by [term_bridge_gen::generate_heap]
impl crate::l_term_trait_r_l_autoboxed_fib_r::Heap for ltsrlafr::Heap {}
/// @generated by [words::words_inverse_impls]
pub mod words_inverse_impls {
    use tymetafuncspec_core::Set;
    use tymetafuncspec_core::IdxBox;
    use tymetafuncspec_core::BoundedNat;
    use crate::l_words_mod_r_l_autoboxed_fib_r as lwmrlafr;
    use crate::l_words_mod_r_l_autoboxed_fib_r::sorts as lwmrlafrs;
    use crate::l_term_specialized_r_l_autoboxed_fib_r as ltsrlafr;
    impl words::InverseImplements<lwmrlafr::L, lwmrlafrs::F> for ltsrlafr::Heap {
        type ExternBehavioralImplementor = ltsrlafr::F;
        type StructuralImplementor = ltsrlafr::F;
    }
    impl words::InverseImplements<lwmrlafr::L, lwmrlafrs::Left_operand>
    for ltsrlafr::Heap {
        type ExternBehavioralImplementor = ltsrlafr::Left_operand;
        type StructuralImplementor = ltsrlafr::Left_operand;
    }
    impl words::InverseImplements<lwmrlafr::L, lwmrlafrs::Plus> for ltsrlafr::Heap {
        type ExternBehavioralImplementor = ltsrlafr::Plus;
        type StructuralImplementor = ltsrlafr::Plus;
    }
    impl words::InverseImplements<lwmrlafr::L, lwmrlafrs::Right_operand>
    for ltsrlafr::Heap {
        type ExternBehavioralImplementor = ltsrlafr::Right_operand;
        type StructuralImplementor = ltsrlafr::Right_operand;
    }
    impl words::InverseImplements<lwmrlafr::L, lwmrlafrs::Sum> for ltsrlafr::Heap {
        type ExternBehavioralImplementor = ltsrlafr::Sum;
        type StructuralImplementor = ltsrlafr::Sum;
    }
    impl words::InverseImplements<lwmrlafr::L, lwmrlafrs::Nat> for ltsrlafr::Heap {
        type ExternBehavioralImplementor = ltsrlafr::Nat;
        type StructuralImplementor = ltsrlafr::Nat;
    }
    impl words::InverseImplements<lwmrlafr::L, Set<(), lwmrlafrs::Nat>>
    for ltsrlafr::Heap {
        type ExternBehavioralImplementor = Set<ltsrlafr::Heap, ltsrlafr::Nat>;
        type StructuralImplementor = Set<ltsrlafr::Heap, ltsrlafr::Nat>;
    }
    impl words::InverseImplements<lwmrlafr::L, BoundedNat<()>> for ltsrlafr::Heap {
        type ExternBehavioralImplementor = BoundedNat<ltsrlafr::Heap>;
        type StructuralImplementor = BoundedNat<ltsrlafr::Heap>;
    }
    impl words::InverseImplements<lwmrlafr::L, IdxBox<(), lwmrlafrs::F>>
    for ltsrlafr::Heap {
        type ExternBehavioralImplementor = IdxBox<ltsrlafr::Heap, ltsrlafr::F>;
        type StructuralImplementor = IdxBox<ltsrlafr::Heap, ltsrlafr::F>;
    }
    impl words::InverseImplements<lwmrlafr::L, IdxBox<(), lwmrlafrs::Plus>>
    for ltsrlafr::Heap {
        type ExternBehavioralImplementor = IdxBox<ltsrlafr::Heap, ltsrlafr::Plus>;
        type StructuralImplementor = IdxBox<ltsrlafr::Heap, ltsrlafr::Plus>;
    }
}
