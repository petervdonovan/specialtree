#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [has_own_sort_id_gen::generate]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::BoundedNat;
use pattern_tmf::OrVariable;
use crate::term_specialized_pattern as tsp;
impl has_own_sort_id::HasOwnSortId<tsp::Heap> for tsp::Plus {
    fn own_sort_id() -> u32 {
        0u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsp::Heap> for tsp::LeftOperand {
    fn own_sort_id() -> u32 {
        1u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsp::Heap> for tsp::RightOperand {
    fn own_sort_id() -> u32 {
        2u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsp::Heap> for tsp::F {
    fn own_sort_id() -> u32 {
        3u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsp::Heap> for tsp::Sum {
    fn own_sort_id() -> u32 {
        4u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsp::Heap> for tsp::Nat {
    fn own_sort_id() -> u32 {
        5u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsp::Heap>
for OrVariable<tsp::Heap, tsp::LeftOperand> {
    fn own_sort_id() -> u32 {
        6u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsp::Heap>
for OrVariable<tsp::Heap, tsp::RightOperand> {
    fn own_sort_id() -> u32 {
        7u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsp::Heap> for OrVariable<tsp::Heap, tsp::Nat> {
    fn own_sort_id() -> u32 {
        8u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsp::Heap>
for OrVariable<tsp::Heap, Set<tsp::Heap, OrVariable<tsp::Heap, tsp::Nat>>> {
    fn own_sort_id() -> u32 {
        9u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsp::Heap>
for Set<tsp::Heap, OrVariable<tsp::Heap, tsp::Nat>> {
    fn own_sort_id() -> u32 {
        10u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsp::Heap> for OrVariable<tsp::Heap, tsp::Nat> {
    fn own_sort_id() -> u32 {
        11u32
    }
}
impl has_own_sort_id::HasOwnSortId<tsp::Heap> for BoundedNat<tsp::Heap> {
    fn own_sort_id() -> u32 {
        12u32
    }
}
