#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
use crate::l_term_specialized_r_l_autoboxed_l_file_l_pattern_fib_r_r_r as ltsrlalflpfrrr;
/// @generated by [term_bridge_gen::generate_heap]
impl crate::l_term_trait_r_l_autoboxed_l_file_l_pattern_fib_r_r_r::Heap
for ltsrlalflpfrrr::Heap {}
/// @generated by [words::words_inverse_impls]
pub mod words_inverse_impls {
    use tymetafuncspec_core::Set;
    use tymetafuncspec_core::IdxBox;
    use tymetafuncspec_core::BoundedNat;
    use pattern_tmf::OrVariableZeroOrMore;
    use pattern_tmf::OrVariable;
    use pattern_tmf::NamedPattern;
    use file_tmf::File;
    use crate::l_words_mod_r_l_autoboxed_l_file_l_pattern_fib_r_r_r as lwmrlalflpfrrr;
    use crate::l_words_mod_r_l_autoboxed_l_file_l_pattern_fib_r_r_r::sorts as lwmrlalflpfrrrs;
    use crate::l_term_specialized_r_l_autoboxed_l_file_l_pattern_fib_r_r_r as ltsrlalflpfrrr;
    impl words::InverseImplements<lwmrlalflpfrrr::L, lwmrlalflpfrrrs::F>
    for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = ltsrlalflpfrrr::F;
        type StructuralImplementor = ltsrlalflpfrrr::F;
    }
    impl words::InverseImplements<lwmrlalflpfrrr::L, lwmrlalflpfrrrs::Left_operand>
    for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = ltsrlalflpfrrr::Left_operand;
        type StructuralImplementor = ltsrlalflpfrrr::Left_operand;
    }
    impl words::InverseImplements<lwmrlalflpfrrr::L, lwmrlalflpfrrrs::Plus>
    for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = ltsrlalflpfrrr::Plus;
        type StructuralImplementor = ltsrlalflpfrrr::Plus;
    }
    impl words::InverseImplements<lwmrlalflpfrrr::L, lwmrlalflpfrrrs::Right_operand>
    for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = ltsrlalflpfrrr::Right_operand;
        type StructuralImplementor = ltsrlalflpfrrr::Right_operand;
    }
    impl words::InverseImplements<lwmrlalflpfrrr::L, lwmrlalflpfrrrs::Sum>
    for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = ltsrlalflpfrrr::Sum;
        type StructuralImplementor = ltsrlalflpfrrr::Sum;
    }
    impl words::InverseImplements<lwmrlalflpfrrr::L, lwmrlalflpfrrrs::Nat>
    for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = ltsrlalflpfrrr::Nat;
        type StructuralImplementor = ltsrlalflpfrrr::Nat;
    }
    impl words::InverseImplements<lwmrlalflpfrrr::L, lwmrlalflpfrrrs::FileItem>
    for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = ltsrlalflpfrrr::FileItem;
        type StructuralImplementor = ltsrlalflpfrrr::FileItem;
    }
    impl words::InverseImplements<
        lwmrlalflpfrrr::L,
        OrVariable<(), lwmrlalflpfrrrs::Nat>,
    > for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = OrVariable<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Nat,
        >;
        type StructuralImplementor = OrVariable<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Nat,
        >;
    }
    impl words::InverseImplements<
        lwmrlalflpfrrr::L,
        OrVariable<(), lwmrlalflpfrrrs::Left_operand>,
    > for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = OrVariable<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Left_operand,
        >;
        type StructuralImplementor = OrVariable<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Left_operand,
        >;
    }
    impl words::InverseImplements<
        lwmrlalflpfrrr::L,
        OrVariable<(), lwmrlalflpfrrrs::Right_operand>,
    > for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = OrVariable<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Right_operand,
        >;
        type StructuralImplementor = OrVariable<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Right_operand,
        >;
    }
    impl words::InverseImplements<
        lwmrlalflpfrrr::L,
        OrVariable<(), Set<(), OrVariableZeroOrMore<(), lwmrlalflpfrrrs::Nat>>>,
    > for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = OrVariable<
            ltsrlalflpfrrr::Heap,
            Set<
                ltsrlalflpfrrr::Heap,
                OrVariableZeroOrMore<ltsrlalflpfrrr::Heap, ltsrlalflpfrrr::Nat>,
            >,
        >;
        type StructuralImplementor = OrVariable<
            ltsrlalflpfrrr::Heap,
            Set<
                ltsrlalflpfrrr::Heap,
                OrVariableZeroOrMore<ltsrlalflpfrrr::Heap, ltsrlalflpfrrr::Nat>,
            >,
        >;
    }
    impl words::InverseImplements<
        lwmrlalflpfrrr::L,
        Set<(), OrVariableZeroOrMore<(), lwmrlalflpfrrrs::Nat>>,
    > for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = Set<
            ltsrlalflpfrrr::Heap,
            OrVariableZeroOrMore<ltsrlalflpfrrr::Heap, ltsrlalflpfrrr::Nat>,
        >;
        type StructuralImplementor = Set<
            ltsrlalflpfrrr::Heap,
            OrVariableZeroOrMore<ltsrlalflpfrrr::Heap, ltsrlalflpfrrr::Nat>,
        >;
    }
    impl words::InverseImplements<
        lwmrlalflpfrrr::L,
        OrVariableZeroOrMore<(), lwmrlalflpfrrrs::Nat>,
    > for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = OrVariableZeroOrMore<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Nat,
        >;
        type StructuralImplementor = OrVariableZeroOrMore<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Nat,
        >;
    }
    impl words::InverseImplements<lwmrlalflpfrrr::L, BoundedNat<()>>
    for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = BoundedNat<ltsrlalflpfrrr::Heap>;
        type StructuralImplementor = BoundedNat<ltsrlalflpfrrr::Heap>;
    }
    impl words::InverseImplements<lwmrlalflpfrrr::L, IdxBox<(), lwmrlalflpfrrrs::F>>
    for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = IdxBox<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::F,
        >;
        type StructuralImplementor = IdxBox<ltsrlalflpfrrr::Heap, ltsrlalflpfrrr::F>;
    }
    impl words::InverseImplements<lwmrlalflpfrrr::L, IdxBox<(), lwmrlalflpfrrrs::Plus>>
    for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = IdxBox<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Plus,
        >;
        type StructuralImplementor = IdxBox<ltsrlalflpfrrr::Heap, ltsrlalflpfrrr::Plus>;
    }
    impl words::InverseImplements<
        lwmrlalflpfrrr::L,
        NamedPattern<(), lwmrlalflpfrrrs::F>,
    > for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = NamedPattern<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::F,
        >;
        type StructuralImplementor = NamedPattern<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::F,
        >;
    }
    impl words::InverseImplements<
        lwmrlalflpfrrr::L,
        NamedPattern<(), lwmrlalflpfrrrs::Left_operand>,
    > for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = NamedPattern<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Left_operand,
        >;
        type StructuralImplementor = NamedPattern<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Left_operand,
        >;
    }
    impl words::InverseImplements<
        lwmrlalflpfrrr::L,
        NamedPattern<(), lwmrlalflpfrrrs::Plus>,
    > for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = NamedPattern<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Plus,
        >;
        type StructuralImplementor = NamedPattern<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Plus,
        >;
    }
    impl words::InverseImplements<
        lwmrlalflpfrrr::L,
        NamedPattern<(), lwmrlalflpfrrrs::Right_operand>,
    > for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = NamedPattern<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Right_operand,
        >;
        type StructuralImplementor = NamedPattern<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Right_operand,
        >;
    }
    impl words::InverseImplements<
        lwmrlalflpfrrr::L,
        NamedPattern<(), lwmrlalflpfrrrs::Sum>,
    > for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = NamedPattern<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Sum,
        >;
        type StructuralImplementor = NamedPattern<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::Sum,
        >;
    }
    impl words::InverseImplements<lwmrlalflpfrrr::L, File<(), lwmrlalflpfrrrs::FileItem>>
    for ltsrlalflpfrrr::Heap {
        type ExternBehavioralImplementor = File<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::FileItem,
        >;
        type StructuralImplementor = File<
            ltsrlalflpfrrr::Heap,
            ltsrlalflpfrrr::FileItem,
        >;
    }
}
