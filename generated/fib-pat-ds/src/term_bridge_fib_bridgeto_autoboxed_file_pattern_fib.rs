#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
use crate::term_specialized_autoboxed_file_pattern_fib as tsafpf;
/// @generated by [term_bridge_gen::generate_heap]
impl fib::term_trait_fib::Heap for tsafpf::Heap {}
/// @generated by [term_bridge_gen::generate_owned_impls]
pub mod owned_impls {
    use crate::term_specialized_autoboxed_file_pattern_fib as tsafpf;
    impl fib::term_trait_fib::owned::Plus<tsafpf::Heap> for tsafpf::Plus {}
    impl fib::term_trait_fib::owned::LeftOperand<tsafpf::Heap> for tsafpf::LeftOperand {}
    impl fib::term_trait_fib::owned::RightOperand<tsafpf::Heap>
    for tsafpf::RightOperand {}
    impl fib::term_trait_fib::owned::F<tsafpf::Heap> for tsafpf::F {}
    impl fib::term_trait_fib::owned::Sum<tsafpf::Heap> for tsafpf::Sum {}
    impl fib::term_trait_fib::owned::Nat<tsafpf::Heap> for tsafpf::Nat {}
}
/// @generated by [words::words_inverse_impls]
pub mod words_inverse_impls {
    use tymetafuncspec_core::Set;
    use tymetafuncspec_core::BoundedNat;
    use pattern_tmf::OrVariableZeroOrMore;
    use fib::words_mod_fib::sorts::Sum;
    use fib::words_mod_fib::sorts::RightOperand;
    use fib::words_mod_fib::sorts::Plus;
    use fib::words_mod_fib::sorts::Nat;
    use fib::words_mod_fib::sorts::LeftOperand;
    use fib::words_mod_fib::sorts::F;
    use fib::words_mod_fib::L;
    use crate::term_specialized_autoboxed_file_pattern_fib as tsafpf;
    impl words::InverseImplements<L, Plus> for tsafpf::Heap {
        type ExternBehavioralImplementor = tsafpf::Plus;
        type StructuralImplementor = tsafpf::Plus;
    }
    impl words::InverseImplements<L, LeftOperand> for tsafpf::Heap {
        type ExternBehavioralImplementor = tsafpf::LeftOperand;
        type StructuralImplementor = tsafpf::LeftOperand;
    }
    impl words::InverseImplements<L, RightOperand> for tsafpf::Heap {
        type ExternBehavioralImplementor = tsafpf::RightOperand;
        type StructuralImplementor = tsafpf::RightOperand;
    }
    impl words::InverseImplements<L, F> for tsafpf::Heap {
        type ExternBehavioralImplementor = tsafpf::F;
        type StructuralImplementor = tsafpf::F;
    }
    impl words::InverseImplements<L, Sum> for tsafpf::Heap {
        type ExternBehavioralImplementor = tsafpf::Sum;
        type StructuralImplementor = tsafpf::Sum;
    }
    impl words::InverseImplements<L, Nat> for tsafpf::Heap {
        type ExternBehavioralImplementor = tsafpf::Nat;
        type StructuralImplementor = tsafpf::Nat;
    }
    impl words::InverseImplements<L, Set<(), Nat>> for tsafpf::Heap {
        type ExternBehavioralImplementor = Set<
            tsafpf::Heap,
            OrVariableZeroOrMore<tsafpf::Heap, tsafpf::Nat>,
        >;
        type StructuralImplementor = Set<
            tsafpf::Heap,
            OrVariableZeroOrMore<tsafpf::Heap, tsafpf::Nat>,
        >;
    }
    impl words::InverseImplements<L, BoundedNat<()>> for tsafpf::Heap {
        type ExternBehavioralImplementor = BoundedNat<tsafpf::Heap>;
        type StructuralImplementor = BoundedNat<tsafpf::Heap>;
    }
}
