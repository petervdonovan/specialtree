#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [term_specialized_gen::generate]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::Pair;
use tymetafuncspec_core::Maybe;
use tymetafuncspec_core::IdxBox;
use tymetafuncspec_core::Either;
use tymetafuncspec_core::BoundedNat;
use std_parse_metadata::ParseMetadata;
use std_parse_error::ParseError;
use crate::term_specialized_cst as tsc;
use crate::term_specialized_cst::heap::set as tschs;
use crate::term_specialized_cst::heap::parse_metadata as tschpm;
use crate::term_specialized_cst::heap::parse_error as tschpe;
use crate::term_specialized_cst::heap::pair as tschp;
use crate::term_specialized_cst::heap::nat_lit as tschnl;
use crate::term_specialized_cst::heap::maybe as tschm;
use crate::term_specialized_cst::heap::idx_box as tschib;
use crate::term_specialized_cst::heap::either as tsche;
/// @generated by [term_specialized_gen::gen_heap]
#[derive(Default)]
pub struct Heap {
    either: tsche::Bak,
    pair: tschp::Bak,
    maybe: tschm::Bak,
    parse_metadata: tschpm::Bak,
    parse_error: tschpe::Bak,
    set: tschs::Bak,
    nat_lit: tschnl::Bak,
    idx_box: tschib::Bak,
}
/// @generated by [term_specialized_gen::gen_heap]
pub mod heap {
    use crate::term_specialized_cst::heap::set as tschs;
    use crate::term_specialized_cst::heap::parse_metadata as tschpm;
    use crate::term_specialized_cst::heap::parse_error as tschpe;
    use crate::term_specialized_cst::heap::pair as tschp;
    use crate::term_specialized_cst::heap::nat_lit as tschnl;
    use crate::term_specialized_cst::heap::maybe as tschm;
    use crate::term_specialized_cst::heap::idx_box as tschib;
    use crate::term_specialized_cst::heap::either as tsche;
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    #[derive(Default)]
    pub struct Bak {
        pub either: tsche::Bak,
        pub pair: tschp::Bak,
        pub maybe: tschm::Bak,
        pub parse_metadata: tschpm::Bak,
        pub parse_error: tschpe::Bak,
        pub set: tschs::Bak,
        pub nat_lit: tschnl::Bak,
        pub idx_box: tschib::Bak,
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod either {
        use crate::term_specialized_cst::heap::either::pair as tschep;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub pair: tschep::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod pair {
            use crate::term_specialized_cst::heap::either::pair::set as tscheps;
            use crate::term_specialized_cst::heap::either::pair::right_operand as tschepro;
            use crate::term_specialized_cst::heap::either::pair::plus as tschepp;
            use crate::term_specialized_cst::heap::either::pair::nat_lit as tschepnl;
            use crate::term_specialized_cst::heap::either::pair::nat as tschepn;
            use crate::term_specialized_cst::heap::either::pair::left_operand as tscheplo;
            use crate::term_specialized_cst::heap::either::pair::idx_box as tschepib;
            use crate::term_specialized_cst::heap::either::pair::f as tschepf;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub left_operand: tscheplo::Bak,
                pub right_operand: tschepro::Bak,
                pub nat: tschepn::Bak,
                pub set: tscheps::Bak,
                pub nat_lit: tschepnl::Bak,
                pub idx_box: tschepib::Bak,
                pub f: tschepf::Bak,
                pub plus: tschepp::Bak,
                pub sum: crate::term_specialized_cst::heap::either::pair::sum::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod left_operand {
                use crate::term_specialized_cst::heap::either::pair::left_operand::maybe as tscheplom;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscheplom::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst::heap::either::pair::left_operand::maybe::parse_metadata as tscheplompm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscheplompm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst::heap::either::pair::left_operand::maybe::parse_metadata::parse_error as tscheplompmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscheplompmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst as tsc;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tsc::Heap,
                                    Pair<
                                        tsc::Heap,
                                        tsc::LeftOperand,
                                        Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                    >,
                                    ParseError<tsc::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod right_operand {
                use crate::term_specialized_cst::heap::either::pair::right_operand::maybe as tscheprom;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscheprom::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst::heap::either::pair::right_operand::maybe::parse_metadata as tscheprompm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscheprompm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst::heap::either::pair::right_operand::maybe::parse_metadata::parse_error as tscheprompmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscheprompmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst as tsc;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tsc::Heap,
                                    Pair<
                                        tsc::Heap,
                                        tsc::RightOperand,
                                        Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                    >,
                                    ParseError<tsc::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod nat {
                use crate::term_specialized_cst::heap::either::pair::nat::maybe as tschepnm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tschepnm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst::heap::either::pair::nat::maybe::parse_metadata as tschepnmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tschepnmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst::heap::either::pair::nat::maybe::parse_metadata::parse_error as tschepnmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tschepnmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst as tsc;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tsc::Heap,
                                    Pair<
                                        tsc::Heap,
                                        tsc::Nat,
                                        Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                    >,
                                    ParseError<tsc::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod set {
                use crate::term_specialized_cst::heap::either::pair::set::either as tschepse;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub either: tschepse::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod either {
                    use crate::term_specialized_cst::heap::either::pair::set::either::pair as tschepsep;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub pair: tschepsep::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod pair {
                        use crate::term_specialized_cst::heap::either::pair::set::either::pair::nat as tschepsepn;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub nat: tschepsepn::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod nat {
                            use crate::term_specialized_cst::heap::either::pair::set::either::pair::nat::maybe as tschepsepnm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tschepsepnm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_cst::heap::either::pair::set::either::pair::nat::maybe::parse_metadata as tschepsepnmpm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tschepsepnmpm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_cst::heap::either::pair::set::either::pair::nat::maybe::parse_metadata::parse_error as tschepsepnmpmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tschepsepnmpmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_cst::heap::either::pair::set::either::pair::nat::maybe::parse_metadata::parse_error::maybe as tschepsepnmpmpem;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tschepsepnmpmpem::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_cst::heap::either::pair::set::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata as tschepsepnmpmpempm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tschepsepnmpmpempm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_cst::heap::either::pair::set::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tschepsepnmpmpempmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tschepsepnmpmpempmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use tymetafuncspec_core::Set;
                                                    use tymetafuncspec_core::Pair;
                                                    use tymetafuncspec_core::Maybe;
                                                    use tymetafuncspec_core::EitherHeapBak;
                                                    use tymetafuncspec_core::Either;
                                                    use std_parse_metadata::ParseMetadata;
                                                    use std_parse_error::ParseError;
                                                    use crate::term_specialized_cst as tsc;
                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                    #[derive(Default)]
                                                    pub struct Bak(
                                                        pub EitherHeapBak<
                                                            tsc::Heap,
                                                            Pair<
                                                                tsc::Heap,
                                                                Set<
                                                                    tsc::Heap,
                                                                    Either<
                                                                        tsc::Heap,
                                                                        Pair<
                                                                            tsc::Heap,
                                                                            tsc::Nat,
                                                                            Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                                                        >,
                                                                        ParseError<tsc::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                                            >,
                                                            ParseError<tsc::Heap>,
                                                        >,
                                                    );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod nat_lit {
                use crate::term_specialized_cst::heap::either::pair::nat_lit::maybe as tschepnlm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tschepnlm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst::heap::either::pair::nat_lit::maybe::parse_metadata as tschepnlmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tschepnlmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst::heap::either::pair::nat_lit::maybe::parse_metadata::parse_error as tschepnlmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tschepnlmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use tymetafuncspec_core::BoundedNat;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst as tsc;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tsc::Heap,
                                    Pair<
                                        tsc::Heap,
                                        BoundedNat<tsc::Heap>,
                                        Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                    >,
                                    ParseError<tsc::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod idx_box {
                use crate::term_specialized_cst::heap::either::pair::idx_box::either as tschepibe;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub either: tschepibe::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod either {
                    use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair as tschepibep;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub pair: tschepibep::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod pair {
                        use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::plus as tschepibepp;
                        use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::f as tschepibepf;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub f: tschepibepf::Bak,
                            pub plus: tschepibepp::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod f {
                            use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::f::maybe as tschepibepfm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tschepibepfm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata as tschepibepfmpm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tschepibepfmpm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error as tschepibepfmpmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tschepibepfmpmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe as tschepibepfmpmpem;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tschepibepfmpmpem::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe::parse_metadata as tschepibepfmpmpempm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tschepibepfmpmpempm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tschepibepfmpmpempmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tschepibepfmpmpempmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use tymetafuncspec_core::Pair;
                                                    use tymetafuncspec_core::Maybe;
                                                    use tymetafuncspec_core::IdxBox;
                                                    use tymetafuncspec_core::EitherHeapBak;
                                                    use tymetafuncspec_core::Either;
                                                    use std_parse_metadata::ParseMetadata;
                                                    use std_parse_error::ParseError;
                                                    use crate::term_specialized_cst as tsc;
                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                    #[derive(Default)]
                                                    pub struct Bak(
                                                        pub EitherHeapBak<
                                                            tsc::Heap,
                                                            Pair<
                                                                tsc::Heap,
                                                                IdxBox<
                                                                    tsc::Heap,
                                                                    Either<
                                                                        tsc::Heap,
                                                                        Pair<
                                                                            tsc::Heap,
                                                                            tsc::F,
                                                                            Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                                                        >,
                                                                        ParseError<tsc::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                                            >,
                                                            ParseError<tsc::Heap>,
                                                        >,
                                                    );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod plus {
                            use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::plus::maybe as tschepibeppm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tschepibeppm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata as tschepibeppmpm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tschepibeppmpm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error as tschepibeppmpmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tschepibeppmpmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe as tschepibeppmpmpem;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tschepibeppmpmpem::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe::parse_metadata as tschepibeppmpmpempm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tschepibeppmpmpempm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_cst::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tschepibeppmpmpempmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tschepibeppmpmpempmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use tymetafuncspec_core::Pair;
                                                    use tymetafuncspec_core::Maybe;
                                                    use tymetafuncspec_core::IdxBox;
                                                    use tymetafuncspec_core::EitherHeapBak;
                                                    use tymetafuncspec_core::Either;
                                                    use std_parse_metadata::ParseMetadata;
                                                    use std_parse_error::ParseError;
                                                    use crate::term_specialized_cst as tsc;
                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                    #[derive(Default)]
                                                    pub struct Bak(
                                                        pub EitherHeapBak<
                                                            tsc::Heap,
                                                            Pair<
                                                                tsc::Heap,
                                                                IdxBox<
                                                                    tsc::Heap,
                                                                    Either<
                                                                        tsc::Heap,
                                                                        Pair<
                                                                            tsc::Heap,
                                                                            tsc::Plus,
                                                                            Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                                                        >,
                                                                        ParseError<tsc::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                                            >,
                                                            ParseError<tsc::Heap>,
                                                        >,
                                                    );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod f {
                use crate::term_specialized_cst::heap::either::pair::f::maybe as tschepfm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tschepfm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst::heap::either::pair::f::maybe::parse_metadata as tschepfmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tschepfmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst::heap::either::pair::f::maybe::parse_metadata::parse_error as tschepfmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tschepfmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst as tsc;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tsc::Heap,
                                    Pair<
                                        tsc::Heap,
                                        tsc::F,
                                        Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                    >,
                                    ParseError<tsc::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod plus {
                use crate::term_specialized_cst::heap::either::pair::plus::maybe as tscheppm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscheppm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst::heap::either::pair::plus::maybe::parse_metadata as tscheppmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscheppmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst::heap::either::pair::plus::maybe::parse_metadata::parse_error as tscheppmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscheppmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst as tsc;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tsc::Heap,
                                    Pair<
                                        tsc::Heap,
                                        tsc::Plus,
                                        Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                    >,
                                    ParseError<tsc::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod sum {
                use crate::term_specialized_cst::heap::either::pair::sum::maybe as tschepsm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tschepsm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst::heap::either::pair::sum::maybe::parse_metadata as tschepsmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tschepsmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst::heap::either::pair::sum::maybe::parse_metadata::parse_error as tschepsmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tschepsmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst as tsc;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tsc::Heap,
                                    Pair<
                                        tsc::Heap,
                                        tsc::Sum,
                                        Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                    >,
                                    ParseError<tsc::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod pair {
        use crate::term_specialized_cst::heap::pair::set as tschps;
        use crate::term_specialized_cst::heap::pair::right_operand as tschpro;
        use crate::term_specialized_cst::heap::pair::plus as tschpp;
        use crate::term_specialized_cst::heap::pair::nat_lit as tschpnl;
        use crate::term_specialized_cst::heap::pair::nat as tschpn;
        use crate::term_specialized_cst::heap::pair::left_operand as tschplo;
        use crate::term_specialized_cst::heap::pair::idx_box as tschpib;
        use crate::term_specialized_cst::heap::pair::f as tschpf;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub left_operand: tschplo::Bak,
            pub right_operand: tschpro::Bak,
            pub nat: tschpn::Bak,
            pub set: tschps::Bak,
            pub nat_lit: tschpnl::Bak,
            pub idx_box: tschpib::Bak,
            pub f: tschpf::Bak,
            pub plus: tschpp::Bak,
            pub sum: crate::term_specialized_cst::heap::pair::sum::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod left_operand {
            use crate::term_specialized_cst::heap::pair::left_operand::maybe as tschplom;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tschplom::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst::heap::pair::left_operand::maybe::parse_metadata as tschplompm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tschplompm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst as tsc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tsc::Heap,
                            tsc::LeftOperand,
                            Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod right_operand {
            use crate::term_specialized_cst::heap::pair::right_operand::maybe as tschprom;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tschprom::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst::heap::pair::right_operand::maybe::parse_metadata as tschprompm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tschprompm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst as tsc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tsc::Heap,
                            tsc::RightOperand,
                            Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod nat {
            use crate::term_specialized_cst::heap::pair::nat::maybe as tschpnm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tschpnm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst::heap::pair::nat::maybe::parse_metadata as tschpnmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tschpnmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst as tsc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tsc::Heap,
                            tsc::Nat,
                            Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod set {
            use crate::term_specialized_cst::heap::pair::set::either as tschpse;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub either: tschpse::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod either {
                use crate::term_specialized_cst::heap::pair::set::either::pair as tschpsep;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub pair: tschpsep::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod pair {
                    use crate::term_specialized_cst::heap::pair::set::either::pair::nat as tschpsepn;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub nat: tschpsepn::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod nat {
                        use crate::term_specialized_cst::heap::pair::set::either::pair::nat::maybe as tschpsepnm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tschpsepnm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst::heap::pair::set::either::pair::nat::maybe::parse_metadata as tschpsepnmpm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tschpsepnmpm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst::heap::pair::set::either::pair::nat::maybe::parse_metadata::parse_error as tschpsepnmpmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tschpsepnmpmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst::heap::pair::set::either::pair::nat::maybe::parse_metadata::parse_error::maybe as tschpsepnmpmpem;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tschpsepnmpmpem::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_cst::heap::pair::set::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata as tschpsepnmpmpempm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tschpsepnmpmpempm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use tymetafuncspec_core::Set;
                                            use tymetafuncspec_core::PairHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use crate::term_specialized_cst as tsc;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub PairHeapBak<
                                                    tsc::Heap,
                                                    Set<
                                                        tsc::Heap,
                                                        Either<
                                                            tsc::Heap,
                                                            Pair<
                                                                tsc::Heap,
                                                                tsc::Nat,
                                                                Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                                            >,
                                                            ParseError<tsc::Heap>,
                                                        >,
                                                    >,
                                                    Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod nat_lit {
            use crate::term_specialized_cst::heap::pair::nat_lit::maybe as tschpnlm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tschpnlm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst::heap::pair::nat_lit::maybe::parse_metadata as tschpnlmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tschpnlmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use tymetafuncspec_core::BoundedNat;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst as tsc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tsc::Heap,
                            BoundedNat<tsc::Heap>,
                            Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod idx_box {
            use crate::term_specialized_cst::heap::pair::idx_box::either as tschpibe;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub either: tschpibe::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod either {
                use crate::term_specialized_cst::heap::pair::idx_box::either::pair as tschpibep;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub pair: tschpibep::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod pair {
                    use crate::term_specialized_cst::heap::pair::idx_box::either::pair::plus as tschpibepp;
                    use crate::term_specialized_cst::heap::pair::idx_box::either::pair::f as tschpibepf;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub f: tschpibepf::Bak,
                        pub plus: tschpibepp::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod f {
                        use crate::term_specialized_cst::heap::pair::idx_box::either::pair::f::maybe as tschpibepfm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tschpibepfm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst::heap::pair::idx_box::either::pair::f::maybe::parse_metadata as tschpibepfmpm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tschpibepfmpm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst::heap::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error as tschpibepfmpmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tschpibepfmpmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst::heap::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe as tschpibepfmpmpem;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tschpibepfmpmpem::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_cst::heap::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe::parse_metadata as tschpibepfmpmpempm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tschpibepfmpmpempm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use tymetafuncspec_core::PairHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::IdxBox;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use crate::term_specialized_cst as tsc;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub PairHeapBak<
                                                    tsc::Heap,
                                                    IdxBox<
                                                        tsc::Heap,
                                                        Either<
                                                            tsc::Heap,
                                                            Pair<
                                                                tsc::Heap,
                                                                tsc::F,
                                                                Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                                            >,
                                                            ParseError<tsc::Heap>,
                                                        >,
                                                    >,
                                                    Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod plus {
                        use crate::term_specialized_cst::heap::pair::idx_box::either::pair::plus::maybe as tschpibeppm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tschpibeppm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata as tschpibeppmpm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tschpibeppmpm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error as tschpibeppmpmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tschpibeppmpmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe as tschpibeppmpmpem;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tschpibeppmpmpem::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_cst::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe::parse_metadata as tschpibeppmpmpempm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tschpibeppmpmpempm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use tymetafuncspec_core::PairHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::IdxBox;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use crate::term_specialized_cst as tsc;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub PairHeapBak<
                                                    tsc::Heap,
                                                    IdxBox<
                                                        tsc::Heap,
                                                        Either<
                                                            tsc::Heap,
                                                            Pair<
                                                                tsc::Heap,
                                                                tsc::Plus,
                                                                Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                                            >,
                                                            ParseError<tsc::Heap>,
                                                        >,
                                                    >,
                                                    Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod f {
            use crate::term_specialized_cst::heap::pair::f::maybe as tschpfm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tschpfm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst::heap::pair::f::maybe::parse_metadata as tschpfmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tschpfmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst as tsc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tsc::Heap,
                            tsc::F,
                            Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod plus {
            use crate::term_specialized_cst::heap::pair::plus::maybe as tschppm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tschppm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst::heap::pair::plus::maybe::parse_metadata as tschppmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tschppmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst as tsc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tsc::Heap,
                            tsc::Plus,
                            Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod sum {
            use crate::term_specialized_cst::heap::pair::sum::maybe as tschpsm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tschpsm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst::heap::pair::sum::maybe::parse_metadata as tschpsmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tschpsmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst as tsc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tsc::Heap,
                            tsc::Sum,
                            Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                        >,
                    );
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod maybe {
        use crate::term_specialized_cst::heap::maybe::parse_metadata as tschmpm;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub parse_metadata: tschmpm::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod parse_metadata {
            use tymetafuncspec_core::MaybeHeapBak;
            use std_parse_metadata::ParseMetadata;
            use crate::term_specialized_cst as tsc;
            /// @generated by [term_specialized_gen::gen_heapbak_module]
            #[derive(Default)]
            pub struct Bak(pub MaybeHeapBak<tsc::Heap, ParseMetadata<tsc::Heap>>);
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod parse_metadata {
        use std_parse_metadata::ParseMetadataBak;
        use crate::term_specialized_cst as tsc;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub ParseMetadataBak<tsc::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod parse_error {
        use std_parse_error::ParseErrorBak;
        use crate::term_specialized_cst as tsc;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub ParseErrorBak<tsc::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod set {
        use crate::term_specialized_cst::heap::set::either as tschse;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub either: tschse::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod either {
            use crate::term_specialized_cst::heap::set::either::pair as tschsep;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub pair: tschsep::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod pair {
                use crate::term_specialized_cst::heap::set::either::pair::nat as tschsepn;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub nat: tschsepn::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod nat {
                    use crate::term_specialized_cst::heap::set::either::pair::nat::maybe as tschsepnm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tschsepnm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst::heap::set::either::pair::nat::maybe::parse_metadata as tschsepnmpm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tschsepnmpm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst::heap::set::either::pair::nat::maybe::parse_metadata::parse_error as tschsepnmpmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tschsepnmpmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::SetHeapBak;
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use crate::term_specialized_cst as tsc;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub SetHeapBak<
                                        tsc::Heap,
                                        Either<
                                            tsc::Heap,
                                            Pair<
                                                tsc::Heap,
                                                tsc::Nat,
                                                Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                            >,
                                            ParseError<tsc::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod nat_lit {
        use tymetafuncspec_core::BoundedNatHeapBak;
        use crate::term_specialized_cst as tsc;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub BoundedNatHeapBak<tsc::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod idx_box {
        use crate::term_specialized_cst::heap::idx_box::either as tschibe;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub either: tschibe::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod either {
            use crate::term_specialized_cst::heap::idx_box::either::pair as tschibep;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub pair: tschibep::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod pair {
                use crate::term_specialized_cst::heap::idx_box::either::pair::plus as tschibepp;
                use crate::term_specialized_cst::heap::idx_box::either::pair::f as tschibepf;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub f: tschibepf::Bak,
                    pub plus: tschibepp::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod f {
                    use crate::term_specialized_cst::heap::idx_box::either::pair::f::maybe as tschibepfm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tschibepfm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst::heap::idx_box::either::pair::f::maybe::parse_metadata as tschibepfmpm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tschibepfmpm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst::heap::idx_box::either::pair::f::maybe::parse_metadata::parse_error as tschibepfmpmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tschibepfmpmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::IdxBoxHeapBak;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use crate::term_specialized_cst as tsc;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub IdxBoxHeapBak<
                                        tsc::Heap,
                                        Either<
                                            tsc::Heap,
                                            Pair<
                                                tsc::Heap,
                                                tsc::F,
                                                Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                            >,
                                            ParseError<tsc::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod plus {
                    use crate::term_specialized_cst::heap::idx_box::either::pair::plus::maybe as tschibeppm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tschibeppm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst::heap::idx_box::either::pair::plus::maybe::parse_metadata as tschibeppmpm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tschibeppmpm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst::heap::idx_box::either::pair::plus::maybe::parse_metadata::parse_error as tschibeppmpmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tschibeppmpmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::IdxBoxHeapBak;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use crate::term_specialized_cst as tsc;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub IdxBoxHeapBak<
                                        tsc::Heap,
                                        Either<
                                            tsc::Heap,
                                            Pair<
                                                tsc::Heap,
                                                tsc::Plus,
                                                Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                                            >,
                                            ParseError<tsc::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
            }
        }
    }
}
/// @generated by [term_specialized_gen::gen_heap]
pub mod superheap {
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::LeftOperand,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, > >; either
        pair left_operand maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::LeftOperand,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, > >;
        pair left_operand maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::MaybeHeapBak < crate
        ::term_specialized_cst::Heap, std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst::Heap, > >; maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; std_parse_metadata::ParseMetadataBak < crate
        ::term_specialized_cst::Heap, >; parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; std_parse_error::ParseErrorBak < crate
        ::term_specialized_cst::Heap, >; parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::RightOperand,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, > >; either
        pair right_operand maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::RightOperand,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, > >;
        pair right_operand maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::Nat,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, > >; either
        pair nat maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::Nat,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, > >;
        pair nat maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Set < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::Nat,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, > >; either
        pair set either pair nat maybe parse_metadata parse_error maybe parse_metadata
        parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Set < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::Nat,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, > >;
        pair set either pair nat maybe parse_metadata parse_error maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::SetHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::Nat,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, >, > >; set
        either pair nat maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::BoundedNat < crate
        ::term_specialized_cst::Heap, >, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst::Heap, std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst::Heap, >, >, >, std_parse_error::ParseError < crate
        ::term_specialized_cst::Heap, > >; either pair nat_lit maybe parse_metadata
        parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::BoundedNat < crate
        ::term_specialized_cst::Heap, >, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst::Heap, std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst::Heap, >, > >; pair nat_lit maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::BoundedNatHeapBak <
        crate ::term_specialized_cst::Heap, >; nat_lit
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::IdxBox < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::F,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, > >; either
        pair idx_box either pair f maybe parse_metadata parse_error maybe parse_metadata
        parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::IdxBox < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::F,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, > >;
        pair idx_box either pair f maybe parse_metadata parse_error maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::IdxBoxHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::F,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, >, > >; idx_box
        either pair f maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::F,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, > >; either
        pair f maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::F,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, > >;
        pair f maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::IdxBox < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::Plus,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, > >; either
        pair idx_box either pair plus maybe parse_metadata parse_error maybe
        parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::IdxBox < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::Plus,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, > >;
        pair idx_box either pair plus maybe parse_metadata parse_error maybe
        parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::IdxBoxHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::Plus,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, >, > >; idx_box
        either pair plus maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::Plus,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, > >; either
        pair plus maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::Plus,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, > >;
        pair plus maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::Sum,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst::Heap, > >; either
        pair sum maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst::Heap, crate ::term_specialized_cst::Sum,
        tymetafuncspec_core::Maybe < crate ::term_specialized_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_cst::Heap, >, > >;
        pair sum maybe parse_metadata
    );
}
#[derive(Clone, Copy)]
pub struct Plus {
    pub left_operand: Either<
        tsc::Heap,
        Pair<tsc::Heap, tsc::LeftOperand, Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>>,
        ParseError<tsc::Heap>,
    >,
    pub right_operand: Either<
        tsc::Heap,
        Pair<tsc::Heap, tsc::RightOperand, Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>>,
        ParseError<tsc::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub struct LeftOperand {
    pub nat: Either<
        tsc::Heap,
        Pair<tsc::Heap, tsc::Nat, Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>>,
        ParseError<tsc::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub struct RightOperand {
    pub nat: Either<
        tsc::Heap,
        Pair<tsc::Heap, tsc::Nat, Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>>,
        ParseError<tsc::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub struct F {
    pub nat: Either<
        tsc::Heap,
        Pair<tsc::Heap, tsc::Nat, Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>>,
        ParseError<tsc::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub struct Sum {
    pub set: Either<
        tsc::Heap,
        Pair<
            tsc::Heap,
            Set<
                tsc::Heap,
                Either<
                    tsc::Heap,
                    Pair<
                        tsc::Heap,
                        tsc::Nat,
                        Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                    >,
                    ParseError<tsc::Heap>,
                >,
            >,
            Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
        >,
        ParseError<tsc::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub enum Nat {
    NatLit(
        Either<
            tsc::Heap,
            Pair<
                tsc::Heap,
                BoundedNat<tsc::Heap>,
                Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
            >,
            ParseError<tsc::Heap>,
        >,
    ),
    F(
        Either<
            tsc::Heap,
            Pair<
                tsc::Heap,
                IdxBox<
                    tsc::Heap,
                    Either<
                        tsc::Heap,
                        Pair<
                            tsc::Heap,
                            tsc::F,
                            Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                        >,
                        ParseError<tsc::Heap>,
                    >,
                >,
                Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
            >,
            ParseError<tsc::Heap>,
        >,
    ),
    Plus(
        Either<
            tsc::Heap,
            Pair<
                tsc::Heap,
                IdxBox<
                    tsc::Heap,
                    Either<
                        tsc::Heap,
                        Pair<
                            tsc::Heap,
                            tsc::Plus,
                            Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
                        >,
                        ParseError<tsc::Heap>,
                    >,
                >,
                Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>,
            >,
            ParseError<tsc::Heap>,
        >,
    ),
    Sum(
        Either<
            tsc::Heap,
            Pair<tsc::Heap, tsc::Sum, Maybe<tsc::Heap, ParseMetadata<tsc::Heap>>>,
            ParseError<tsc::Heap>,
        >,
    ),
}
/// @generated by [term_specialized_gen::gen_heaped_impls]
pub mod heaped {
    use crate::term_specialized_cst as tsc;
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsc::Plus {
        type Heap = tsc::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsc::LeftOperand {
        type Heap = tsc::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsc::RightOperand {
        type Heap = tsc::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsc::F {
        type Heap = tsc::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsc::Sum {
        type Heap = tsc::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsc::Nat {
        type Heap = tsc::Heap;
    }
}
