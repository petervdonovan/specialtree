#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [term_pattern_match_strategy_provider_gen::generate]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::Pair;
use tymetafuncspec_core::Maybe;
use tymetafuncspec_core::IdxBox;
use tymetafuncspec_core::Either;
use tymetafuncspec_core::BoundedNat;
use term::MapsTmf;
use std_parse_metadata::ParseMetadata;
use std_parse_error::ParseError;
use crate::words_mod_cst as wmc;
use crate::words_mod_cst::sorts as wmcs;
use crate::term_trait_cst as ttc;
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl<Heap: crate::term_trait_cst::Heap> pmsp::NamesPatternMatchStrategyGivenContext<Heap>
for wmcs::Plus {
    type Strategy = (
        (
            <Heap as MapsTmf<
                wmc::L,
                Either<
                    Heap,
                    Pair<Heap, Heap::LeftOperand, Maybe<Heap, ParseMetadata<Heap>>>,
                    ParseError<Heap>,
                >,
            >>::Tmf,
            (
                <Heap as MapsTmf<
                    wmc::L,
                    Either<
                        Heap,
                        Pair<Heap, Heap::RightOperand, Maybe<Heap, ParseMetadata<Heap>>>,
                        ParseError<Heap>,
                    >,
                >>::Tmf,
                (),
            ),
        ),
        (),
    );
}
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl<Heap: crate::term_trait_cst::Heap> pmsp::NamesPatternMatchStrategyGivenContext<Heap>
for wmcs::LeftOperand {
    type Strategy = (
        (
            <Heap as MapsTmf<
                wmc::L,
                Either<
                    Heap,
                    Pair<Heap, Heap::Nat, Maybe<Heap, ParseMetadata<Heap>>>,
                    ParseError<Heap>,
                >,
            >>::Tmf,
            (),
        ),
        (),
    );
}
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl<Heap: crate::term_trait_cst::Heap> pmsp::NamesPatternMatchStrategyGivenContext<Heap>
for wmcs::RightOperand {
    type Strategy = (
        (
            <Heap as MapsTmf<
                wmc::L,
                Either<
                    Heap,
                    Pair<Heap, Heap::Nat, Maybe<Heap, ParseMetadata<Heap>>>,
                    ParseError<Heap>,
                >,
            >>::Tmf,
            (),
        ),
        (),
    );
}
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl<Heap: crate::term_trait_cst::Heap> pmsp::NamesPatternMatchStrategyGivenContext<Heap>
for wmcs::F {
    type Strategy = (
        (
            <Heap as MapsTmf<
                wmc::L,
                Either<
                    Heap,
                    Pair<Heap, Heap::Nat, Maybe<Heap, ParseMetadata<Heap>>>,
                    ParseError<Heap>,
                >,
            >>::Tmf,
            (),
        ),
        (),
    );
}
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl<Heap: crate::term_trait_cst::Heap> pmsp::NamesPatternMatchStrategyGivenContext<Heap>
for wmcs::Sum {
    type Strategy = (
        (
            <Heap as MapsTmf<
                wmc::L,
                Either<
                    Heap,
                    Pair<
                        Heap,
                        Set<
                            Heap,
                            Either<
                                Heap,
                                Pair<Heap, Heap::Nat, Maybe<Heap, ParseMetadata<Heap>>>,
                                ParseError<Heap>,
                            >,
                        >,
                        Maybe<Heap, ParseMetadata<Heap>>,
                    >,
                    ParseError<Heap>,
                >,
            >>::Tmf,
            (),
        ),
        (),
    );
}
/// @generated by [term_pattern_match_strategy_provider_gen::impl_has_pattern_match_strategy_for]
impl<Heap: crate::term_trait_cst::Heap> pmsp::NamesPatternMatchStrategyGivenContext<Heap>
for wmcs::Nat {
    type Strategy = (
        (
            <Heap as MapsTmf<
                wmc::L,
                Either<
                    Heap,
                    Pair<Heap, BoundedNat<Heap>, Maybe<Heap, ParseMetadata<Heap>>>,
                    ParseError<Heap>,
                >,
            >>::Tmf,
            (),
        ),
        (
            (
                <Heap as MapsTmf<
                    wmc::L,
                    Either<
                        Heap,
                        Pair<
                            Heap,
                            IdxBox<
                                Heap,
                                Either<
                                    Heap,
                                    Pair<Heap, Heap::F, Maybe<Heap, ParseMetadata<Heap>>>,
                                    ParseError<Heap>,
                                >,
                            >,
                            Maybe<Heap, ParseMetadata<Heap>>,
                        >,
                        ParseError<Heap>,
                    >,
                >>::Tmf,
                (),
            ),
            (
                (
                    <Heap as MapsTmf<
                        wmc::L,
                        Either<
                            Heap,
                            Pair<
                                Heap,
                                IdxBox<
                                    Heap,
                                    Either<
                                        Heap,
                                        Pair<Heap, Heap::Plus, Maybe<Heap, ParseMetadata<Heap>>>,
                                        ParseError<Heap>,
                                    >,
                                >,
                                Maybe<Heap, ParseMetadata<Heap>>,
                            >,
                            ParseError<Heap>,
                        >,
                    >>::Tmf,
                    (),
                ),
                (
                    (
                        <Heap as MapsTmf<
                            wmc::L,
                            Either<
                                Heap,
                                Pair<Heap, Heap::Sum, Maybe<Heap, ParseMetadata<Heap>>>,
                                ParseError<Heap>,
                            >,
                        >>::Tmf,
                        (),
                    ),
                    (),
                ),
            ),
        ),
    );
}
