#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [words::words_impls]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::Pair;
use tymetafuncspec_core::Maybe;
use tymetafuncspec_core::IdxBox;
use tymetafuncspec_core::Either;
use tymetafuncspec_core::BoundedNat;
use std_parse_metadata::ParseMetadata;
use std_parse_error::ParseError;
use crate::l_words_mod_r_l_cst_l_autoboxed_fib_r_r as lwmrlclafrr;
use crate::l_words_mod_r_l_cst_l_autoboxed_fib_r_r::sorts as lwmrlclafrrs;
use crate::l_term_specialized_r_l_cst_l_autoboxed_fib_r_r as ltsrlclafrr;
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L> for ltsrlclafrr::F {
    type LWord = lwmrlclafrrs::F;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L> for ltsrlclafrr::Left_operand {
    type LWord = lwmrlclafrrs::Left_operand;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L> for ltsrlclafrr::Plus {
    type LWord = lwmrlclafrrs::Plus;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for ltsrlclafrr::Right_operand {
    type LWord = lwmrlclafrrs::Right_operand;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L> for ltsrlclafrr::Sum {
    type LWord = lwmrlclafrrs::Sum;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L> for ltsrlclafrr::Nat {
    type LWord = lwmrlclafrrs::Nat;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Either<
    ltsrlclafrr::Heap,
    Pair<
        ltsrlclafrr::Heap,
        ltsrlclafrr::Nat,
        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
    >,
    ParseError<ltsrlclafrr::Heap>,
> {
    type LWord = Either<
        (),
        Pair<(), lwmrlclafrrs::Nat, Maybe<(), ParseMetadata<()>>>,
        ParseError<()>,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Pair<
    ltsrlclafrr::Heap,
    ltsrlclafrr::Nat,
    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
> {
    type LWord = Pair<(), lwmrlclafrrs::Nat, Maybe<(), ParseMetadata<()>>>;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>> {
    type LWord = Maybe<(), ParseMetadata<()>>;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for ParseMetadata<ltsrlclafrr::Heap> {
    type LWord = ParseMetadata<()>;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for ParseError<ltsrlclafrr::Heap> {
    type LWord = ParseError<()>;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Either<
    ltsrlclafrr::Heap,
    Pair<
        ltsrlclafrr::Heap,
        ltsrlclafrr::Left_operand,
        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
    >,
    ParseError<ltsrlclafrr::Heap>,
> {
    type LWord = Either<
        (),
        Pair<(), lwmrlclafrrs::Left_operand, Maybe<(), ParseMetadata<()>>>,
        ParseError<()>,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Pair<
    ltsrlclafrr::Heap,
    ltsrlclafrr::Left_operand,
    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
> {
    type LWord = Pair<(), lwmrlclafrrs::Left_operand, Maybe<(), ParseMetadata<()>>>;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Either<
    ltsrlclafrr::Heap,
    Pair<
        ltsrlclafrr::Heap,
        ltsrlclafrr::Right_operand,
        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
    >,
    ParseError<ltsrlclafrr::Heap>,
> {
    type LWord = Either<
        (),
        Pair<(), lwmrlclafrrs::Right_operand, Maybe<(), ParseMetadata<()>>>,
        ParseError<()>,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Pair<
    ltsrlclafrr::Heap,
    ltsrlclafrr::Right_operand,
    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
> {
    type LWord = Pair<(), lwmrlclafrrs::Right_operand, Maybe<(), ParseMetadata<()>>>;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Either<
    ltsrlclafrr::Heap,
    Pair<
        ltsrlclafrr::Heap,
        Set<
            ltsrlclafrr::Heap,
            Either<
                ltsrlclafrr::Heap,
                Pair<
                    ltsrlclafrr::Heap,
                    ltsrlclafrr::Nat,
                    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                >,
                ParseError<ltsrlclafrr::Heap>,
            >,
        >,
        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
    >,
    ParseError<ltsrlclafrr::Heap>,
> {
    type LWord = Either<
        (),
        Pair<
            (),
            Set<
                (),
                Either<
                    (),
                    Pair<(), lwmrlclafrrs::Nat, Maybe<(), ParseMetadata<()>>>,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >,
        ParseError<()>,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Pair<
    ltsrlclafrr::Heap,
    Set<
        ltsrlclafrr::Heap,
        Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::Nat,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >,
    >,
    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
> {
    type LWord = Pair<
        (),
        Set<
            (),
            Either<
                (),
                Pair<(), lwmrlclafrrs::Nat, Maybe<(), ParseMetadata<()>>>,
                ParseError<()>,
            >,
        >,
        Maybe<(), ParseMetadata<()>>,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Set<
    ltsrlclafrr::Heap,
    Either<
        ltsrlclafrr::Heap,
        Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::Nat,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >,
        ParseError<ltsrlclafrr::Heap>,
    >,
> {
    type LWord = Set<
        (),
        Either<
            (),
            Pair<(), lwmrlclafrrs::Nat, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Either<
    ltsrlclafrr::Heap,
    Pair<
        ltsrlclafrr::Heap,
        BoundedNat<ltsrlclafrr::Heap>,
        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
    >,
    ParseError<ltsrlclafrr::Heap>,
> {
    type LWord = Either<
        (),
        Pair<(), BoundedNat<()>, Maybe<(), ParseMetadata<()>>>,
        ParseError<()>,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Pair<
    ltsrlclafrr::Heap,
    BoundedNat<ltsrlclafrr::Heap>,
    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
> {
    type LWord = Pair<(), BoundedNat<()>, Maybe<(), ParseMetadata<()>>>;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for BoundedNat<ltsrlclafrr::Heap> {
    type LWord = BoundedNat<()>;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Either<
    ltsrlclafrr::Heap,
    Pair<
        ltsrlclafrr::Heap,
        IdxBox<
            ltsrlclafrr::Heap,
            Either<
                ltsrlclafrr::Heap,
                Pair<
                    ltsrlclafrr::Heap,
                    ltsrlclafrr::F,
                    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                >,
                ParseError<ltsrlclafrr::Heap>,
            >,
        >,
        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
    >,
    ParseError<ltsrlclafrr::Heap>,
> {
    type LWord = Either<
        (),
        Pair<
            (),
            IdxBox<
                (),
                Either<
                    (),
                    Pair<(), lwmrlclafrrs::F, Maybe<(), ParseMetadata<()>>>,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >,
        ParseError<()>,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Pair<
    ltsrlclafrr::Heap,
    IdxBox<
        ltsrlclafrr::Heap,
        Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::F,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >,
    >,
    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
> {
    type LWord = Pair<
        (),
        IdxBox<
            (),
            Either<
                (),
                Pair<(), lwmrlclafrrs::F, Maybe<(), ParseMetadata<()>>>,
                ParseError<()>,
            >,
        >,
        Maybe<(), ParseMetadata<()>>,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for IdxBox<
    ltsrlclafrr::Heap,
    Either<
        ltsrlclafrr::Heap,
        Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::F,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >,
        ParseError<ltsrlclafrr::Heap>,
    >,
> {
    type LWord = IdxBox<
        (),
        Either<
            (),
            Pair<(), lwmrlclafrrs::F, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Either<
    ltsrlclafrr::Heap,
    Pair<
        ltsrlclafrr::Heap,
        ltsrlclafrr::F,
        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
    >,
    ParseError<ltsrlclafrr::Heap>,
> {
    type LWord = Either<
        (),
        Pair<(), lwmrlclafrrs::F, Maybe<(), ParseMetadata<()>>>,
        ParseError<()>,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Pair<
    ltsrlclafrr::Heap,
    ltsrlclafrr::F,
    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
> {
    type LWord = Pair<(), lwmrlclafrrs::F, Maybe<(), ParseMetadata<()>>>;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Either<
    ltsrlclafrr::Heap,
    Pair<
        ltsrlclafrr::Heap,
        IdxBox<
            ltsrlclafrr::Heap,
            Either<
                ltsrlclafrr::Heap,
                Pair<
                    ltsrlclafrr::Heap,
                    ltsrlclafrr::Plus,
                    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                >,
                ParseError<ltsrlclafrr::Heap>,
            >,
        >,
        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
    >,
    ParseError<ltsrlclafrr::Heap>,
> {
    type LWord = Either<
        (),
        Pair<
            (),
            IdxBox<
                (),
                Either<
                    (),
                    Pair<(), lwmrlclafrrs::Plus, Maybe<(), ParseMetadata<()>>>,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >,
        ParseError<()>,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Pair<
    ltsrlclafrr::Heap,
    IdxBox<
        ltsrlclafrr::Heap,
        Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::Plus,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >,
    >,
    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
> {
    type LWord = Pair<
        (),
        IdxBox<
            (),
            Either<
                (),
                Pair<(), lwmrlclafrrs::Plus, Maybe<(), ParseMetadata<()>>>,
                ParseError<()>,
            >,
        >,
        Maybe<(), ParseMetadata<()>>,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for IdxBox<
    ltsrlclafrr::Heap,
    Either<
        ltsrlclafrr::Heap,
        Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::Plus,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >,
        ParseError<ltsrlclafrr::Heap>,
    >,
> {
    type LWord = IdxBox<
        (),
        Either<
            (),
            Pair<(), lwmrlclafrrs::Plus, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Either<
    ltsrlclafrr::Heap,
    Pair<
        ltsrlclafrr::Heap,
        ltsrlclafrr::Plus,
        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
    >,
    ParseError<ltsrlclafrr::Heap>,
> {
    type LWord = Either<
        (),
        Pair<(), lwmrlclafrrs::Plus, Maybe<(), ParseMetadata<()>>>,
        ParseError<()>,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Pair<
    ltsrlclafrr::Heap,
    ltsrlclafrr::Plus,
    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
> {
    type LWord = Pair<(), lwmrlclafrrs::Plus, Maybe<(), ParseMetadata<()>>>;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Either<
    ltsrlclafrr::Heap,
    Pair<
        ltsrlclafrr::Heap,
        ltsrlclafrr::Sum,
        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
    >,
    ParseError<ltsrlclafrr::Heap>,
> {
    type LWord = Either<
        (),
        Pair<(), lwmrlclafrrs::Sum, Maybe<(), ParseMetadata<()>>>,
        ParseError<()>,
    >;
}
impl words::Implements<ltsrlclafrr::Heap, lwmrlclafrr::L>
for Pair<
    ltsrlclafrr::Heap,
    ltsrlclafrr::Sum,
    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
> {
    type LWord = Pair<(), lwmrlclafrrs::Sum, Maybe<(), ParseMetadata<()>>>;
}
