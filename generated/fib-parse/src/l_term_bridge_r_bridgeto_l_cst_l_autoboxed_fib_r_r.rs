#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
use crate::l_term_specialized_r_l_cst_l_autoboxed_fib_r_r as ltsrlclafrr;
/// @generated by [term_bridge_gen::generate_heap]
impl crate::l_term_trait_r_l_cst_l_autoboxed_fib_r_r::Heap for ltsrlclafrr::Heap {}
/// @generated by [words::words_inverse_impls]
pub mod words_inverse_impls {
    use tymetafuncspec_core::Set;
    use tymetafuncspec_core::Pair;
    use tymetafuncspec_core::Maybe;
    use tymetafuncspec_core::IdxBox;
    use tymetafuncspec_core::Either;
    use tymetafuncspec_core::BoundedNat;
    use std_parse_metadata::ParseMetadata;
    use std_parse_error::ParseError;
    use crate::l_words_mod_r_l_cst_l_autoboxed_fib_r_r as lwmrlclafrr;
    use crate::l_words_mod_r_l_cst_l_autoboxed_fib_r_r::sorts as lwmrlclafrrs;
    use crate::l_term_specialized_r_l_cst_l_autoboxed_fib_r_r as ltsrlclafrr;
    impl words::InverseImplements<lwmrlclafrr::L, lwmrlclafrrs::F>
    for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = ltsrlclafrr::F;
        type StructuralImplementor = ltsrlclafrr::F;
    }
    impl words::InverseImplements<lwmrlclafrr::L, lwmrlclafrrs::Left_operand>
    for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = ltsrlclafrr::Left_operand;
        type StructuralImplementor = ltsrlclafrr::Left_operand;
    }
    impl words::InverseImplements<lwmrlclafrr::L, lwmrlclafrrs::Plus>
    for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = ltsrlclafrr::Plus;
        type StructuralImplementor = ltsrlclafrr::Plus;
    }
    impl words::InverseImplements<lwmrlclafrr::L, lwmrlclafrrs::Right_operand>
    for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = ltsrlclafrr::Right_operand;
        type StructuralImplementor = ltsrlclafrr::Right_operand;
    }
    impl words::InverseImplements<lwmrlclafrr::L, lwmrlclafrrs::Sum>
    for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = ltsrlclafrr::Sum;
        type StructuralImplementor = ltsrlclafrr::Sum;
    }
    impl words::InverseImplements<lwmrlclafrr::L, lwmrlclafrrs::Nat>
    for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = ltsrlclafrr::Nat;
        type StructuralImplementor = ltsrlclafrr::Nat;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Either<
            (),
            Pair<(), lwmrlclafrrs::Nat, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::Nat,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
        type StructuralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::Nat,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Pair<(), lwmrlclafrrs::Nat, Maybe<(), ParseMetadata<()>>>,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::Nat,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
        type StructuralImplementor = Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::Nat,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
    }
    impl words::InverseImplements<lwmrlclafrr::L, Maybe<(), ParseMetadata<()>>>
    for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Maybe<
            ltsrlclafrr::Heap,
            ParseMetadata<ltsrlclafrr::Heap>,
        >;
        type StructuralImplementor = Maybe<
            ltsrlclafrr::Heap,
            ParseMetadata<ltsrlclafrr::Heap>,
        >;
    }
    impl words::InverseImplements<lwmrlclafrr::L, ParseMetadata<()>>
    for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = ParseMetadata<ltsrlclafrr::Heap>;
        type StructuralImplementor = ParseMetadata<ltsrlclafrr::Heap>;
    }
    impl words::InverseImplements<lwmrlclafrr::L, ParseError<()>> for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = ParseError<ltsrlclafrr::Heap>;
        type StructuralImplementor = ParseError<ltsrlclafrr::Heap>;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Either<
            (),
            Pair<(), lwmrlclafrrs::Left_operand, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::Left_operand,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
        type StructuralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::Left_operand,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Pair<(), lwmrlclafrrs::Left_operand, Maybe<(), ParseMetadata<()>>>,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::Left_operand,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
        type StructuralImplementor = Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::Left_operand,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Either<
            (),
            Pair<(), lwmrlclafrrs::Right_operand, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::Right_operand,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
        type StructuralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::Right_operand,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Pair<(), lwmrlclafrrs::Right_operand, Maybe<(), ParseMetadata<()>>>,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::Right_operand,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
        type StructuralImplementor = Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::Right_operand,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Either<
            (),
            Pair<
                (),
                Set<
                    (),
                    Either<
                        (),
                        Pair<(), lwmrlclafrrs::Nat, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                Set<
                    ltsrlclafrr::Heap,
                    Either<
                        ltsrlclafrr::Heap,
                        Pair<
                            ltsrlclafrr::Heap,
                            ltsrlclafrr::Nat,
                            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                        >,
                        ParseError<ltsrlclafrr::Heap>,
                    >,
                >,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
        type StructuralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                Set<
                    ltsrlclafrr::Heap,
                    Either<
                        ltsrlclafrr::Heap,
                        Pair<
                            ltsrlclafrr::Heap,
                            ltsrlclafrr::Nat,
                            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                        >,
                        ParseError<ltsrlclafrr::Heap>,
                    >,
                >,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Pair<
            (),
            Set<
                (),
                Either<
                    (),
                    Pair<(), lwmrlclafrrs::Nat, Maybe<(), ParseMetadata<()>>>,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Pair<
            ltsrlclafrr::Heap,
            Set<
                ltsrlclafrr::Heap,
                Either<
                    ltsrlclafrr::Heap,
                    Pair<
                        ltsrlclafrr::Heap,
                        ltsrlclafrr::Nat,
                        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                    >,
                    ParseError<ltsrlclafrr::Heap>,
                >,
            >,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
        type StructuralImplementor = Pair<
            ltsrlclafrr::Heap,
            Set<
                ltsrlclafrr::Heap,
                Either<
                    ltsrlclafrr::Heap,
                    Pair<
                        ltsrlclafrr::Heap,
                        ltsrlclafrr::Nat,
                        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                    >,
                    ParseError<ltsrlclafrr::Heap>,
                >,
            >,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Set<
            (),
            Either<
                (),
                Pair<(), lwmrlclafrrs::Nat, Maybe<(), ParseMetadata<()>>>,
                ParseError<()>,
            >,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Set<
            ltsrlclafrr::Heap,
            Either<
                ltsrlclafrr::Heap,
                Pair<
                    ltsrlclafrr::Heap,
                    ltsrlclafrr::Nat,
                    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                >,
                ParseError<ltsrlclafrr::Heap>,
            >,
        >;
        type StructuralImplementor = Set<
            ltsrlclafrr::Heap,
            Either<
                ltsrlclafrr::Heap,
                Pair<
                    ltsrlclafrr::Heap,
                    ltsrlclafrr::Nat,
                    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                >,
                ParseError<ltsrlclafrr::Heap>,
            >,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Either<
            (),
            Pair<(), BoundedNat<()>, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                BoundedNat<ltsrlclafrr::Heap>,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
        type StructuralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                BoundedNat<ltsrlclafrr::Heap>,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Pair<(), BoundedNat<()>, Maybe<(), ParseMetadata<()>>>,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Pair<
            ltsrlclafrr::Heap,
            BoundedNat<ltsrlclafrr::Heap>,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
        type StructuralImplementor = Pair<
            ltsrlclafrr::Heap,
            BoundedNat<ltsrlclafrr::Heap>,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
    }
    impl words::InverseImplements<lwmrlclafrr::L, BoundedNat<()>> for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = BoundedNat<ltsrlclafrr::Heap>;
        type StructuralImplementor = BoundedNat<ltsrlclafrr::Heap>;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Either<
            (),
            Pair<
                (),
                IdxBox<
                    (),
                    Either<
                        (),
                        Pair<(), lwmrlclafrrs::F, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                IdxBox<
                    ltsrlclafrr::Heap,
                    Either<
                        ltsrlclafrr::Heap,
                        Pair<
                            ltsrlclafrr::Heap,
                            ltsrlclafrr::F,
                            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                        >,
                        ParseError<ltsrlclafrr::Heap>,
                    >,
                >,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
        type StructuralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                IdxBox<
                    ltsrlclafrr::Heap,
                    Either<
                        ltsrlclafrr::Heap,
                        Pair<
                            ltsrlclafrr::Heap,
                            ltsrlclafrr::F,
                            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                        >,
                        ParseError<ltsrlclafrr::Heap>,
                    >,
                >,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Pair<
            (),
            IdxBox<
                (),
                Either<
                    (),
                    Pair<(), lwmrlclafrrs::F, Maybe<(), ParseMetadata<()>>>,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Pair<
            ltsrlclafrr::Heap,
            IdxBox<
                ltsrlclafrr::Heap,
                Either<
                    ltsrlclafrr::Heap,
                    Pair<
                        ltsrlclafrr::Heap,
                        ltsrlclafrr::F,
                        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                    >,
                    ParseError<ltsrlclafrr::Heap>,
                >,
            >,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
        type StructuralImplementor = Pair<
            ltsrlclafrr::Heap,
            IdxBox<
                ltsrlclafrr::Heap,
                Either<
                    ltsrlclafrr::Heap,
                    Pair<
                        ltsrlclafrr::Heap,
                        ltsrlclafrr::F,
                        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                    >,
                    ParseError<ltsrlclafrr::Heap>,
                >,
            >,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        IdxBox<
            (),
            Either<
                (),
                Pair<(), lwmrlclafrrs::F, Maybe<(), ParseMetadata<()>>>,
                ParseError<()>,
            >,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = IdxBox<
            ltsrlclafrr::Heap,
            Either<
                ltsrlclafrr::Heap,
                Pair<
                    ltsrlclafrr::Heap,
                    ltsrlclafrr::F,
                    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                >,
                ParseError<ltsrlclafrr::Heap>,
            >,
        >;
        type StructuralImplementor = IdxBox<
            ltsrlclafrr::Heap,
            Either<
                ltsrlclafrr::Heap,
                Pair<
                    ltsrlclafrr::Heap,
                    ltsrlclafrr::F,
                    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                >,
                ParseError<ltsrlclafrr::Heap>,
            >,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Either<
            (),
            Pair<(), lwmrlclafrrs::F, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::F,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
        type StructuralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::F,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Pair<(), lwmrlclafrrs::F, Maybe<(), ParseMetadata<()>>>,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::F,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
        type StructuralImplementor = Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::F,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Either<
            (),
            Pair<
                (),
                IdxBox<
                    (),
                    Either<
                        (),
                        Pair<(), lwmrlclafrrs::Plus, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                IdxBox<
                    ltsrlclafrr::Heap,
                    Either<
                        ltsrlclafrr::Heap,
                        Pair<
                            ltsrlclafrr::Heap,
                            ltsrlclafrr::Plus,
                            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                        >,
                        ParseError<ltsrlclafrr::Heap>,
                    >,
                >,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
        type StructuralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                IdxBox<
                    ltsrlclafrr::Heap,
                    Either<
                        ltsrlclafrr::Heap,
                        Pair<
                            ltsrlclafrr::Heap,
                            ltsrlclafrr::Plus,
                            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                        >,
                        ParseError<ltsrlclafrr::Heap>,
                    >,
                >,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Pair<
            (),
            IdxBox<
                (),
                Either<
                    (),
                    Pair<(), lwmrlclafrrs::Plus, Maybe<(), ParseMetadata<()>>>,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Pair<
            ltsrlclafrr::Heap,
            IdxBox<
                ltsrlclafrr::Heap,
                Either<
                    ltsrlclafrr::Heap,
                    Pair<
                        ltsrlclafrr::Heap,
                        ltsrlclafrr::Plus,
                        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                    >,
                    ParseError<ltsrlclafrr::Heap>,
                >,
            >,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
        type StructuralImplementor = Pair<
            ltsrlclafrr::Heap,
            IdxBox<
                ltsrlclafrr::Heap,
                Either<
                    ltsrlclafrr::Heap,
                    Pair<
                        ltsrlclafrr::Heap,
                        ltsrlclafrr::Plus,
                        Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                    >,
                    ParseError<ltsrlclafrr::Heap>,
                >,
            >,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        IdxBox<
            (),
            Either<
                (),
                Pair<(), lwmrlclafrrs::Plus, Maybe<(), ParseMetadata<()>>>,
                ParseError<()>,
            >,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = IdxBox<
            ltsrlclafrr::Heap,
            Either<
                ltsrlclafrr::Heap,
                Pair<
                    ltsrlclafrr::Heap,
                    ltsrlclafrr::Plus,
                    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                >,
                ParseError<ltsrlclafrr::Heap>,
            >,
        >;
        type StructuralImplementor = IdxBox<
            ltsrlclafrr::Heap,
            Either<
                ltsrlclafrr::Heap,
                Pair<
                    ltsrlclafrr::Heap,
                    ltsrlclafrr::Plus,
                    Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
                >,
                ParseError<ltsrlclafrr::Heap>,
            >,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Either<
            (),
            Pair<(), lwmrlclafrrs::Plus, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::Plus,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
        type StructuralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::Plus,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Pair<(), lwmrlclafrrs::Plus, Maybe<(), ParseMetadata<()>>>,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::Plus,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
        type StructuralImplementor = Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::Plus,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Either<
            (),
            Pair<(), lwmrlclafrrs::Sum, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::Sum,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
        type StructuralImplementor = Either<
            ltsrlclafrr::Heap,
            Pair<
                ltsrlclafrr::Heap,
                ltsrlclafrr::Sum,
                Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
            >,
            ParseError<ltsrlclafrr::Heap>,
        >;
    }
    impl words::InverseImplements<
        lwmrlclafrr::L,
        Pair<(), lwmrlclafrrs::Sum, Maybe<(), ParseMetadata<()>>>,
    > for ltsrlclafrr::Heap {
        type ExternBehavioralImplementor = Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::Sum,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
        type StructuralImplementor = Pair<
            ltsrlclafrr::Heap,
            ltsrlclafrr::Sum,
            Maybe<ltsrlclafrr::Heap, ParseMetadata<ltsrlclafrr::Heap>>,
        >;
    }
}
