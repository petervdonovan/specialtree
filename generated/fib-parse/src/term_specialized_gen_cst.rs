#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [term_specialized_gen::generate]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::Pair;
use tymetafuncspec_core::Maybe;
use tymetafuncspec_core::IdxBox;
use tymetafuncspec_core::Either;
use tymetafuncspec_core::BoundedNat;
use std_parse_metadata::ParseMetadata;
use std_parse_error::ParseError;
use crate::term_specialized_gen_cst as tsgc;
use crate::term_specialized_gen_cst::heap::set as tsgchs;
use crate::term_specialized_gen_cst::heap::parse_metadata as tsgchpm;
use crate::term_specialized_gen_cst::heap::parse_error as tsgchpe;
use crate::term_specialized_gen_cst::heap::pair as tsgchp;
use crate::term_specialized_gen_cst::heap::nat_lit as tsgchnl;
use crate::term_specialized_gen_cst::heap::maybe as tsgchm;
use crate::term_specialized_gen_cst::heap::idx_box as tsgchib;
use crate::term_specialized_gen_cst::heap::either as tsgche;
/// @generated by [term_specialized_gen::gen_heap]
#[derive(Default)]
pub struct Heap {
    either: tsgche::Bak,
    pair: tsgchp::Bak,
    maybe: tsgchm::Bak,
    parse_metadata: tsgchpm::Bak,
    parse_error: tsgchpe::Bak,
    set: tsgchs::Bak,
    nat_lit: tsgchnl::Bak,
    idx_box: tsgchib::Bak,
}
/// @generated by [term_specialized_gen::gen_heap]
pub mod heap {
    use crate::term_specialized_gen_cst::heap::set as tsgchs;
    use crate::term_specialized_gen_cst::heap::parse_metadata as tsgchpm;
    use crate::term_specialized_gen_cst::heap::parse_error as tsgchpe;
    use crate::term_specialized_gen_cst::heap::pair as tsgchp;
    use crate::term_specialized_gen_cst::heap::nat_lit as tsgchnl;
    use crate::term_specialized_gen_cst::heap::maybe as tsgchm;
    use crate::term_specialized_gen_cst::heap::idx_box as tsgchib;
    use crate::term_specialized_gen_cst::heap::either as tsgche;
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    #[derive(Default)]
    pub struct Bak {
        pub either: tsgche::Bak,
        pub pair: tsgchp::Bak,
        pub maybe: tsgchm::Bak,
        pub parse_metadata: tsgchpm::Bak,
        pub parse_error: tsgchpe::Bak,
        pub set: tsgchs::Bak,
        pub nat_lit: tsgchnl::Bak,
        pub idx_box: tsgchib::Bak,
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod either {
        use crate::term_specialized_gen_cst::heap::either::pair as tsgchep;
        use crate::term_specialized_gen_cst::heap::either::nat as tsgchen;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub pair: tsgchep::Bak,
            pub nat: tsgchen::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod pair {
            use crate::term_specialized_gen_cst::heap::either::pair::set as tsgcheps;
            use crate::term_specialized_gen_cst::heap::either::pair::right_operand as tsgchepro;
            use crate::term_specialized_gen_cst::heap::either::pair::plus as tsgchepp;
            use crate::term_specialized_gen_cst::heap::either::pair::nat_lit as tsgchepnl;
            use crate::term_specialized_gen_cst::heap::either::pair::left_operand as tsgcheplo;
            use crate::term_specialized_gen_cst::heap::either::pair::idx_box as tsgchepib;
            use crate::term_specialized_gen_cst::heap::either::pair::f as tsgchepf;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub left_operand: tsgcheplo::Bak,
                pub right_operand: tsgchepro::Bak,
                pub set: tsgcheps::Bak,
                pub nat_lit: tsgchepnl::Bak,
                pub idx_box: tsgchepib::Bak,
                pub f: tsgchepf::Bak,
                pub plus: tsgchepp::Bak,
                pub sum: crate::term_specialized_gen_cst::heap::either::pair::sum::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod left_operand {
                use crate::term_specialized_gen_cst::heap::either::pair::left_operand::maybe as tsgcheplom;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tsgcheplom::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_gen_cst::heap::either::pair::left_operand::maybe::parse_metadata as tsgcheplompm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tsgcheplompm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_gen_cst::heap::either::pair::left_operand::maybe::parse_metadata::parse_error as tsgcheplompmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tsgcheplompmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_gen_cst as tsgc;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tsgc::Heap,
                                    Pair<
                                        tsgc::Heap,
                                        tsgc::LeftOperand,
                                        Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                    >,
                                    ParseError<tsgc::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod right_operand {
                use crate::term_specialized_gen_cst::heap::either::pair::right_operand::maybe as tsgcheprom;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tsgcheprom::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_gen_cst::heap::either::pair::right_operand::maybe::parse_metadata as tsgcheprompm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tsgcheprompm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_gen_cst::heap::either::pair::right_operand::maybe::parse_metadata::parse_error as tsgcheprompmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tsgcheprompmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_gen_cst as tsgc;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tsgc::Heap,
                                    Pair<
                                        tsgc::Heap,
                                        tsgc::RightOperand,
                                        Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                    >,
                                    ParseError<tsgc::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod set {
                use crate::term_specialized_gen_cst::heap::either::pair::set::either as tsgchepse;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub either: tsgchepse::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod either {
                    use crate::term_specialized_gen_cst::heap::either::pair::set::either::nat as tsgchepsen;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub nat: tsgchepsen::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod nat {
                        use crate::term_specialized_gen_cst::heap::either::pair::set::either::nat::parse_error as tsgchepsenpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tsgchepsenpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use crate::term_specialized_gen_cst::heap::either::pair::set::either::nat::parse_error::maybe as tsgchepsenpem;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tsgchepsenpem::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_gen_cst::heap::either::pair::set::either::nat::parse_error::maybe::parse_metadata as tsgchepsenpempm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tsgchepsenpempm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_gen_cst::heap::either::pair::set::either::nat::parse_error::maybe::parse_metadata::parse_error as tsgchepsenpempmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tsgchepsenpempmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use tymetafuncspec_core::Set;
                                        use tymetafuncspec_core::Pair;
                                        use tymetafuncspec_core::Maybe;
                                        use tymetafuncspec_core::EitherHeapBak;
                                        use tymetafuncspec_core::Either;
                                        use std_parse_metadata::ParseMetadata;
                                        use std_parse_error::ParseError;
                                        use crate::term_specialized_gen_cst as tsgc;
                                        /// @generated by [term_specialized_gen::gen_heapbak_module]
                                        #[derive(Default)]
                                        pub struct Bak(
                                            pub EitherHeapBak<
                                                tsgc::Heap,
                                                Pair<
                                                    tsgc::Heap,
                                                    Set<
                                                        tsgc::Heap,
                                                        Either<tsgc::Heap, tsgc::Nat, ParseError<tsgc::Heap>>,
                                                    >,
                                                    Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                                >,
                                                ParseError<tsgc::Heap>,
                                            >,
                                        );
                                    }
                                }
                            }
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod nat_lit {
                use crate::term_specialized_gen_cst::heap::either::pair::nat_lit::maybe as tsgchepnlm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tsgchepnlm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_gen_cst::heap::either::pair::nat_lit::maybe::parse_metadata as tsgchepnlmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tsgchepnlmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_gen_cst::heap::either::pair::nat_lit::maybe::parse_metadata::parse_error as tsgchepnlmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tsgchepnlmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use tymetafuncspec_core::BoundedNat;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_gen_cst as tsgc;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tsgc::Heap,
                                    Pair<
                                        tsgc::Heap,
                                        BoundedNat<tsgc::Heap>,
                                        Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                    >,
                                    ParseError<tsgc::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod idx_box {
                use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either as tsgchepibe;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub either: tsgchepibe::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod either {
                    use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair as tsgchepibep;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub pair: tsgchepibep::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod pair {
                        use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::plus as tsgchepibepp;
                        use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::f as tsgchepibepf;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub f: tsgchepibepf::Bak,
                            pub plus: tsgchepibepp::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod f {
                            use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::f::maybe as tsgchepibepfm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tsgchepibepfm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata as tsgchepibepfmpm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tsgchepibepfmpm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error as tsgchepibepfmpmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tsgchepibepfmpmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe as tsgchepibepfmpmpem;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tsgchepibepfmpmpem::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe::parse_metadata as tsgchepibepfmpmpempm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tsgchepibepfmpmpempm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tsgchepibepfmpmpempmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tsgchepibepfmpmpempmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use tymetafuncspec_core::Pair;
                                                    use tymetafuncspec_core::Maybe;
                                                    use tymetafuncspec_core::IdxBox;
                                                    use tymetafuncspec_core::EitherHeapBak;
                                                    use tymetafuncspec_core::Either;
                                                    use std_parse_metadata::ParseMetadata;
                                                    use std_parse_error::ParseError;
                                                    use crate::term_specialized_gen_cst as tsgc;
                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                    #[derive(Default)]
                                                    pub struct Bak(
                                                        pub EitherHeapBak<
                                                            tsgc::Heap,
                                                            Pair<
                                                                tsgc::Heap,
                                                                IdxBox<
                                                                    tsgc::Heap,
                                                                    Either<
                                                                        tsgc::Heap,
                                                                        Pair<
                                                                            tsgc::Heap,
                                                                            tsgc::F,
                                                                            Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                                                        >,
                                                                        ParseError<tsgc::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                                            >,
                                                            ParseError<tsgc::Heap>,
                                                        >,
                                                    );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod plus {
                            use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::plus::maybe as tsgchepibeppm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tsgchepibeppm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata as tsgchepibeppmpm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tsgchepibeppmpm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error as tsgchepibeppmpmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tsgchepibeppmpmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe as tsgchepibeppmpmpem;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tsgchepibeppmpmpem::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe::parse_metadata as tsgchepibeppmpmpempm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tsgchepibeppmpmpempm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_gen_cst::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tsgchepibeppmpmpempmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tsgchepibeppmpmpempmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use tymetafuncspec_core::Pair;
                                                    use tymetafuncspec_core::Maybe;
                                                    use tymetafuncspec_core::IdxBox;
                                                    use tymetafuncspec_core::EitherHeapBak;
                                                    use tymetafuncspec_core::Either;
                                                    use std_parse_metadata::ParseMetadata;
                                                    use std_parse_error::ParseError;
                                                    use crate::term_specialized_gen_cst as tsgc;
                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                    #[derive(Default)]
                                                    pub struct Bak(
                                                        pub EitherHeapBak<
                                                            tsgc::Heap,
                                                            Pair<
                                                                tsgc::Heap,
                                                                IdxBox<
                                                                    tsgc::Heap,
                                                                    Either<
                                                                        tsgc::Heap,
                                                                        Pair<
                                                                            tsgc::Heap,
                                                                            tsgc::Plus,
                                                                            Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                                                        >,
                                                                        ParseError<tsgc::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                                            >,
                                                            ParseError<tsgc::Heap>,
                                                        >,
                                                    );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod f {
                use crate::term_specialized_gen_cst::heap::either::pair::f::maybe as tsgchepfm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tsgchepfm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_gen_cst::heap::either::pair::f::maybe::parse_metadata as tsgchepfmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tsgchepfmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_gen_cst::heap::either::pair::f::maybe::parse_metadata::parse_error as tsgchepfmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tsgchepfmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_gen_cst as tsgc;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tsgc::Heap,
                                    Pair<
                                        tsgc::Heap,
                                        tsgc::F,
                                        Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                    >,
                                    ParseError<tsgc::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod plus {
                use crate::term_specialized_gen_cst::heap::either::pair::plus::maybe as tsgcheppm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tsgcheppm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_gen_cst::heap::either::pair::plus::maybe::parse_metadata as tsgcheppmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tsgcheppmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_gen_cst::heap::either::pair::plus::maybe::parse_metadata::parse_error as tsgcheppmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tsgcheppmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_gen_cst as tsgc;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tsgc::Heap,
                                    Pair<
                                        tsgc::Heap,
                                        tsgc::Plus,
                                        Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                    >,
                                    ParseError<tsgc::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod sum {
                use crate::term_specialized_gen_cst::heap::either::pair::sum::maybe as tsgchepsm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tsgchepsm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_gen_cst::heap::either::pair::sum::maybe::parse_metadata as tsgchepsmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tsgchepsmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_gen_cst::heap::either::pair::sum::maybe::parse_metadata::parse_error as tsgchepsmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tsgchepsmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_gen_cst as tsgc;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tsgc::Heap,
                                    Pair<
                                        tsgc::Heap,
                                        tsgc::Sum,
                                        Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                    >,
                                    ParseError<tsgc::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod nat {
            use crate::term_specialized_gen_cst::heap::either::nat::parse_error as tsgchenpe;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub parse_error: tsgchenpe::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod parse_error {
                use tymetafuncspec_core::EitherHeapBak;
                use std_parse_error::ParseError;
                use crate::term_specialized_gen_cst as tsgc;
                /// @generated by [term_specialized_gen::gen_heapbak_module]
                #[derive(Default)]
                pub struct Bak(
                    pub EitherHeapBak<tsgc::Heap, tsgc::Nat, ParseError<tsgc::Heap>>,
                );
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod pair {
        use crate::term_specialized_gen_cst::heap::pair::set as tsgchps;
        use crate::term_specialized_gen_cst::heap::pair::right_operand as tsgchpro;
        use crate::term_specialized_gen_cst::heap::pair::plus as tsgchpp;
        use crate::term_specialized_gen_cst::heap::pair::nat_lit as tsgchpnl;
        use crate::term_specialized_gen_cst::heap::pair::left_operand as tsgchplo;
        use crate::term_specialized_gen_cst::heap::pair::idx_box as tsgchpib;
        use crate::term_specialized_gen_cst::heap::pair::f as tsgchpf;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub left_operand: tsgchplo::Bak,
            pub right_operand: tsgchpro::Bak,
            pub set: tsgchps::Bak,
            pub nat_lit: tsgchpnl::Bak,
            pub idx_box: tsgchpib::Bak,
            pub f: tsgchpf::Bak,
            pub plus: tsgchpp::Bak,
            pub sum: crate::term_specialized_gen_cst::heap::pair::sum::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod left_operand {
            use crate::term_specialized_gen_cst::heap::pair::left_operand::maybe as tsgchplom;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tsgchplom::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_gen_cst::heap::pair::left_operand::maybe::parse_metadata as tsgchplompm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tsgchplompm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_gen_cst as tsgc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tsgc::Heap,
                            tsgc::LeftOperand,
                            Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod right_operand {
            use crate::term_specialized_gen_cst::heap::pair::right_operand::maybe as tsgchprom;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tsgchprom::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_gen_cst::heap::pair::right_operand::maybe::parse_metadata as tsgchprompm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tsgchprompm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_gen_cst as tsgc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tsgc::Heap,
                            tsgc::RightOperand,
                            Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod set {
            use crate::term_specialized_gen_cst::heap::pair::set::either as tsgchpse;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub either: tsgchpse::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod either {
                use crate::term_specialized_gen_cst::heap::pair::set::either::nat as tsgchpsen;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub nat: tsgchpsen::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod nat {
                    use crate::term_specialized_gen_cst::heap::pair::set::either::nat::parse_error as tsgchpsenpe;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_error: tsgchpsenpe::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_error {
                        use crate::term_specialized_gen_cst::heap::pair::set::either::nat::parse_error::maybe as tsgchpsenpem;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tsgchpsenpem::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_gen_cst::heap::pair::set::either::nat::parse_error::maybe::parse_metadata as tsgchpsenpempm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tsgchpsenpempm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use tymetafuncspec_core::Set;
                                use tymetafuncspec_core::PairHeapBak;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use crate::term_specialized_gen_cst as tsgc;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub PairHeapBak<
                                        tsgc::Heap,
                                        Set<
                                            tsgc::Heap,
                                            Either<tsgc::Heap, tsgc::Nat, ParseError<tsgc::Heap>>,
                                        >,
                                        Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                    >,
                                );
                            }
                        }
                    }
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod nat_lit {
            use crate::term_specialized_gen_cst::heap::pair::nat_lit::maybe as tsgchpnlm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tsgchpnlm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_gen_cst::heap::pair::nat_lit::maybe::parse_metadata as tsgchpnlmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tsgchpnlmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use tymetafuncspec_core::BoundedNat;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_gen_cst as tsgc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tsgc::Heap,
                            BoundedNat<tsgc::Heap>,
                            Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod idx_box {
            use crate::term_specialized_gen_cst::heap::pair::idx_box::either as tsgchpibe;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub either: tsgchpibe::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod either {
                use crate::term_specialized_gen_cst::heap::pair::idx_box::either::pair as tsgchpibep;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub pair: tsgchpibep::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod pair {
                    use crate::term_specialized_gen_cst::heap::pair::idx_box::either::pair::plus as tsgchpibepp;
                    use crate::term_specialized_gen_cst::heap::pair::idx_box::either::pair::f as tsgchpibepf;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub f: tsgchpibepf::Bak,
                        pub plus: tsgchpibepp::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod f {
                        use crate::term_specialized_gen_cst::heap::pair::idx_box::either::pair::f::maybe as tsgchpibepfm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tsgchpibepfm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_gen_cst::heap::pair::idx_box::either::pair::f::maybe::parse_metadata as tsgchpibepfmpm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tsgchpibepfmpm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_gen_cst::heap::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error as tsgchpibepfmpmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tsgchpibepfmpmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_gen_cst::heap::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe as tsgchpibepfmpmpem;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tsgchpibepfmpmpem::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_gen_cst::heap::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe::parse_metadata as tsgchpibepfmpmpempm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tsgchpibepfmpmpempm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use tymetafuncspec_core::PairHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::IdxBox;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use crate::term_specialized_gen_cst as tsgc;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub PairHeapBak<
                                                    tsgc::Heap,
                                                    IdxBox<
                                                        tsgc::Heap,
                                                        Either<
                                                            tsgc::Heap,
                                                            Pair<
                                                                tsgc::Heap,
                                                                tsgc::F,
                                                                Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                                            >,
                                                            ParseError<tsgc::Heap>,
                                                        >,
                                                    >,
                                                    Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod plus {
                        use crate::term_specialized_gen_cst::heap::pair::idx_box::either::pair::plus::maybe as tsgchpibeppm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tsgchpibeppm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_gen_cst::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata as tsgchpibeppmpm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tsgchpibeppmpm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_gen_cst::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error as tsgchpibeppmpmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tsgchpibeppmpmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_gen_cst::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe as tsgchpibeppmpmpem;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tsgchpibeppmpmpem::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_gen_cst::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe::parse_metadata as tsgchpibeppmpmpempm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tsgchpibeppmpmpempm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use tymetafuncspec_core::PairHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::IdxBox;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use crate::term_specialized_gen_cst as tsgc;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub PairHeapBak<
                                                    tsgc::Heap,
                                                    IdxBox<
                                                        tsgc::Heap,
                                                        Either<
                                                            tsgc::Heap,
                                                            Pair<
                                                                tsgc::Heap,
                                                                tsgc::Plus,
                                                                Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                                            >,
                                                            ParseError<tsgc::Heap>,
                                                        >,
                                                    >,
                                                    Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod f {
            use crate::term_specialized_gen_cst::heap::pair::f::maybe as tsgchpfm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tsgchpfm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_gen_cst::heap::pair::f::maybe::parse_metadata as tsgchpfmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tsgchpfmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_gen_cst as tsgc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tsgc::Heap,
                            tsgc::F,
                            Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod plus {
            use crate::term_specialized_gen_cst::heap::pair::plus::maybe as tsgchppm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tsgchppm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_gen_cst::heap::pair::plus::maybe::parse_metadata as tsgchppmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tsgchppmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_gen_cst as tsgc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tsgc::Heap,
                            tsgc::Plus,
                            Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod sum {
            use crate::term_specialized_gen_cst::heap::pair::sum::maybe as tsgchpsm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tsgchpsm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_gen_cst::heap::pair::sum::maybe::parse_metadata as tsgchpsmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tsgchpsmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_gen_cst as tsgc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tsgc::Heap,
                            tsgc::Sum,
                            Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                        >,
                    );
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod maybe {
        use crate::term_specialized_gen_cst::heap::maybe::parse_metadata as tsgchmpm;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub parse_metadata: tsgchmpm::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod parse_metadata {
            use tymetafuncspec_core::MaybeHeapBak;
            use std_parse_metadata::ParseMetadata;
            use crate::term_specialized_gen_cst as tsgc;
            /// @generated by [term_specialized_gen::gen_heapbak_module]
            #[derive(Default)]
            pub struct Bak(pub MaybeHeapBak<tsgc::Heap, ParseMetadata<tsgc::Heap>>);
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod parse_metadata {
        use std_parse_metadata::ParseMetadataBak;
        use crate::term_specialized_gen_cst as tsgc;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub ParseMetadataBak<tsgc::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod parse_error {
        use std_parse_error::ParseErrorBak;
        use crate::term_specialized_gen_cst as tsgc;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub ParseErrorBak<tsgc::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod set {
        use crate::term_specialized_gen_cst::heap::set::either as tsgchse;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub either: tsgchse::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod either {
            use crate::term_specialized_gen_cst::heap::set::either::nat as tsgchsen;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub nat: tsgchsen::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod nat {
                use crate::term_specialized_gen_cst::heap::set::either::nat::parse_error as tsgchsenpe;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_error: tsgchsenpe::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_error {
                    use tymetafuncspec_core::SetHeapBak;
                    use tymetafuncspec_core::Either;
                    use std_parse_error::ParseError;
                    use crate::term_specialized_gen_cst as tsgc;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub SetHeapBak<
                            tsgc::Heap,
                            Either<tsgc::Heap, tsgc::Nat, ParseError<tsgc::Heap>>,
                        >,
                    );
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod nat_lit {
        use tymetafuncspec_core::BoundedNatHeapBak;
        use crate::term_specialized_gen_cst as tsgc;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub BoundedNatHeapBak<tsgc::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod idx_box {
        use crate::term_specialized_gen_cst::heap::idx_box::either as tsgchibe;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub either: tsgchibe::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod either {
            use crate::term_specialized_gen_cst::heap::idx_box::either::pair as tsgchibep;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub pair: tsgchibep::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod pair {
                use crate::term_specialized_gen_cst::heap::idx_box::either::pair::plus as tsgchibepp;
                use crate::term_specialized_gen_cst::heap::idx_box::either::pair::f as tsgchibepf;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub f: tsgchibepf::Bak,
                    pub plus: tsgchibepp::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod f {
                    use crate::term_specialized_gen_cst::heap::idx_box::either::pair::f::maybe as tsgchibepfm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tsgchibepfm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_gen_cst::heap::idx_box::either::pair::f::maybe::parse_metadata as tsgchibepfmpm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tsgchibepfmpm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_gen_cst::heap::idx_box::either::pair::f::maybe::parse_metadata::parse_error as tsgchibepfmpmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tsgchibepfmpmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::IdxBoxHeapBak;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use crate::term_specialized_gen_cst as tsgc;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub IdxBoxHeapBak<
                                        tsgc::Heap,
                                        Either<
                                            tsgc::Heap,
                                            Pair<
                                                tsgc::Heap,
                                                tsgc::F,
                                                Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                            >,
                                            ParseError<tsgc::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod plus {
                    use crate::term_specialized_gen_cst::heap::idx_box::either::pair::plus::maybe as tsgchibeppm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tsgchibeppm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_gen_cst::heap::idx_box::either::pair::plus::maybe::parse_metadata as tsgchibeppmpm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tsgchibeppmpm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_gen_cst::heap::idx_box::either::pair::plus::maybe::parse_metadata::parse_error as tsgchibeppmpmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tsgchibeppmpmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::IdxBoxHeapBak;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use crate::term_specialized_gen_cst as tsgc;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub IdxBoxHeapBak<
                                        tsgc::Heap,
                                        Either<
                                            tsgc::Heap,
                                            Pair<
                                                tsgc::Heap,
                                                tsgc::Plus,
                                                Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                                            >,
                                            ParseError<tsgc::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
            }
        }
    }
}
/// @generated by [term_specialized_gen::gen_heap]
pub mod superheap {
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::EitherHeapBak <
        crate ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::LeftOperand,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, > >;
        either pair left_operand maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::LeftOperand,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >
        >; pair left_operand maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::MaybeHeapBak < crate
        ::term_specialized_gen_cst::Heap, std_parse_metadata::ParseMetadata < crate
        ::term_specialized_gen_cst::Heap, > >; maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; std_parse_metadata::ParseMetadataBak <
        crate ::term_specialized_gen_cst::Heap, >; parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; std_parse_error::ParseErrorBak < crate
        ::term_specialized_gen_cst::Heap, >; parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::EitherHeapBak <
        crate ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::RightOperand,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, > >;
        either pair right_operand maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::RightOperand,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >
        >; pair right_operand maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::EitherHeapBak <
        crate ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::Nat,
        std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, > >; either
        nat parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::EitherHeapBak <
        crate ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Set < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::Nat,
        std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, > >;
        either pair set either nat parse_error maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Set < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::Nat,
        std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >
        >; pair set either nat parse_error maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::SetHeapBak < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::Nat,
        std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, >, > >; set
        either nat parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::EitherHeapBak <
        crate ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::BoundedNat < crate
        ::term_specialized_gen_cst::Heap, >, tymetafuncspec_core::Maybe < crate
        ::term_specialized_gen_cst::Heap, std_parse_metadata::ParseMetadata < crate
        ::term_specialized_gen_cst::Heap, >, >, >, std_parse_error::ParseError < crate
        ::term_specialized_gen_cst::Heap, > >; either pair nat_lit maybe parse_metadata
        parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::BoundedNat < crate
        ::term_specialized_gen_cst::Heap, >, tymetafuncspec_core::Maybe < crate
        ::term_specialized_gen_cst::Heap, std_parse_metadata::ParseMetadata < crate
        ::term_specialized_gen_cst::Heap, >, > >; pair nat_lit maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::BoundedNatHeapBak <
        crate ::term_specialized_gen_cst::Heap, >; nat_lit
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::EitherHeapBak <
        crate ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::IdxBox < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::F,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, > >;
        either pair idx_box either pair f maybe parse_metadata parse_error maybe
        parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::IdxBox < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::F,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >
        >; pair idx_box either pair f maybe parse_metadata parse_error maybe
        parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::IdxBoxHeapBak <
        crate ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::F,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, >, > >;
        idx_box either pair f maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::EitherHeapBak <
        crate ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::F,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, > >;
        either pair f maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::F,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >
        >; pair f maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::EitherHeapBak <
        crate ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::IdxBox < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::Plus,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, > >;
        either pair idx_box either pair plus maybe parse_metadata parse_error maybe
        parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::IdxBox < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::Plus,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >
        >; pair idx_box either pair plus maybe parse_metadata parse_error maybe
        parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::IdxBoxHeapBak <
        crate ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Either < crate
        ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::Plus,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, >, > >;
        idx_box either pair plus maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::EitherHeapBak <
        crate ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::Plus,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, > >;
        either pair plus maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::Plus,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >
        >; pair plus maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::EitherHeapBak <
        crate ::term_specialized_gen_cst::Heap, tymetafuncspec_core::Pair < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::Sum,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >,
        >, std_parse_error::ParseError < crate ::term_specialized_gen_cst::Heap, > >;
        either pair sum maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_gen_cst::Heap; tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_gen_cst::Heap, crate ::term_specialized_gen_cst::Sum,
        tymetafuncspec_core::Maybe < crate ::term_specialized_gen_cst::Heap,
        std_parse_metadata::ParseMetadata < crate ::term_specialized_gen_cst::Heap, >, >
        >; pair sum maybe parse_metadata
    );
}
#[derive(Clone, Copy)]
pub struct Plus {
    pub left_operand: Either<
        tsgc::Heap,
        Pair<
            tsgc::Heap,
            tsgc::LeftOperand,
            Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
        >,
        ParseError<tsgc::Heap>,
    >,
    pub right_operand: Either<
        tsgc::Heap,
        Pair<
            tsgc::Heap,
            tsgc::RightOperand,
            Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
        >,
        ParseError<tsgc::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub struct LeftOperand {
    pub nat: Either<tsgc::Heap, tsgc::Nat, ParseError<tsgc::Heap>>,
}
#[derive(Clone, Copy)]
pub struct RightOperand {
    pub nat: Either<tsgc::Heap, tsgc::Nat, ParseError<tsgc::Heap>>,
}
#[derive(Clone, Copy)]
pub struct F {
    pub nat: Either<tsgc::Heap, tsgc::Nat, ParseError<tsgc::Heap>>,
}
#[derive(Clone, Copy)]
pub struct Sum {
    pub set: Either<
        tsgc::Heap,
        Pair<
            tsgc::Heap,
            Set<tsgc::Heap, Either<tsgc::Heap, tsgc::Nat, ParseError<tsgc::Heap>>>,
            Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
        >,
        ParseError<tsgc::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub enum Nat {
    NatLit(
        Either<
            tsgc::Heap,
            Pair<
                tsgc::Heap,
                BoundedNat<tsgc::Heap>,
                Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
            >,
            ParseError<tsgc::Heap>,
        >,
    ),
    F(
        Either<
            tsgc::Heap,
            Pair<
                tsgc::Heap,
                IdxBox<
                    tsgc::Heap,
                    Either<
                        tsgc::Heap,
                        Pair<
                            tsgc::Heap,
                            tsgc::F,
                            Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                        >,
                        ParseError<tsgc::Heap>,
                    >,
                >,
                Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
            >,
            ParseError<tsgc::Heap>,
        >,
    ),
    Plus(
        Either<
            tsgc::Heap,
            Pair<
                tsgc::Heap,
                IdxBox<
                    tsgc::Heap,
                    Either<
                        tsgc::Heap,
                        Pair<
                            tsgc::Heap,
                            tsgc::Plus,
                            Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
                        >,
                        ParseError<tsgc::Heap>,
                    >,
                >,
                Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>,
            >,
            ParseError<tsgc::Heap>,
        >,
    ),
    Sum(
        Either<
            tsgc::Heap,
            Pair<tsgc::Heap, tsgc::Sum, Maybe<tsgc::Heap, ParseMetadata<tsgc::Heap>>>,
            ParseError<tsgc::Heap>,
        >,
    ),
}
/// @generated by [term_specialized_gen::gen_heaped_impls]
pub mod heaped {
    use crate::term_specialized_gen_cst as tsgc;
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsgc::Plus {
        type Heap = tsgc::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsgc::LeftOperand {
        type Heap = tsgc::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsgc::RightOperand {
        type Heap = tsgc::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsgc::F {
        type Heap = tsgc::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsgc::Sum {
        type Heap = tsgc::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tsgc::Nat {
        type Heap = tsgc::Heap;
    }
}
