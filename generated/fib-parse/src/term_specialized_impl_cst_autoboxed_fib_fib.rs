#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [term_specialized_impl_gen::generate]
use crate::term_specialized_cst_autoboxed_fib as tscaf;
/// @generated by [term_specialized_impl_gen::gen_heap_impl]
impl crate::term_trait_cst_autoboxed_fib::Heap for tscaf::Heap {}
/// @generated by [term_specialized_impl_gen::gen_owned_mod]
pub mod owned_impls {
    use crate::term_specialized_cst_autoboxed_fib as tscaf;
    impl crate::term_trait_cst_autoboxed_fib::owned::Plus<tscaf::Heap> for tscaf::Plus {}
    impl crate::term_trait_cst_autoboxed_fib::owned::LeftOperand<tscaf::Heap>
    for tscaf::LeftOperand {}
    impl crate::term_trait_cst_autoboxed_fib::owned::RightOperand<tscaf::Heap>
    for tscaf::RightOperand {}
    impl crate::term_trait_cst_autoboxed_fib::owned::F<tscaf::Heap> for tscaf::F {}
    impl crate::term_trait_cst_autoboxed_fib::owned::Sum<tscaf::Heap> for tscaf::Sum {}
    impl crate::term_trait_cst_autoboxed_fib::owned::Nat<tscaf::Heap> for tscaf::Nat {}
}
/// @generated by [term_specialized_impl_gen::gen_ccf_mod]
pub mod ccf_impls {
    /// @generated by [term_specialized_impl_gen::gen_ccf_impls]
    pub mod plus {
        use words::InverseImplements;
        use tymetafuncspec_core::Pair;
        use tymetafuncspec_core::Maybe;
        use tymetafuncspec_core::Either;
        use term::Heaped;
        use std_parse_metadata::ParseMetadata;
        use std_parse_error::ParseError;
        use crate::words_mod_cst_autoboxed_fib as wmcaf;
        use crate::words_mod_cst_autoboxed_fib::sorts as wmcafs;
        use crate::term_specialized_cst_autoboxed_fib as tscaf;
        /// @generated by [term_specialized_impl_gen::gen_ccf_impl_prod]
        impl ccf::DirectlyCanonicallyConstructibleFrom<
            <Self as Heaped>::Heap,
            (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<(), wmcafs::LeftOperand, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (
                    <<Self as Heaped>::Heap as InverseImplements<
                        wmcaf::L,
                        Either<
                            (),
                            Pair<(), wmcafs::RightOperand, Maybe<(), ParseMetadata<()>>>,
                            ParseError<()>,
                        >,
                    >>::StructuralImplementor,
                    (),
                ),
            ),
        > for tscaf::Plus {
            fn construct(
                heap: &mut <Self as Heaped>::Heap,
                t: (
                    <<Self as Heaped>::Heap as InverseImplements<
                        wmcaf::L,
                        Either<
                            (),
                            Pair<(), wmcafs::LeftOperand, Maybe<(), ParseMetadata<()>>>,
                            ParseError<()>,
                        >,
                    >>::StructuralImplementor,
                    (
                        <<Self as Heaped>::Heap as InverseImplements<
                            wmcaf::L,
                            Either<
                                (),
                                Pair<
                                    (),
                                    wmcafs::RightOperand,
                                    Maybe<(), ParseMetadata<()>>,
                                >,
                                ParseError<()>,
                            >,
                        >>::StructuralImplementor,
                        (),
                    ),
                ),
            ) -> Self {
                crate::term_specialized_cst_autoboxed_fib::Plus {
                    left_operand: t.0,
                    right_operand: t.1.0,
                }
            }
            fn deconstruct_succeeds(&self, heap: &<Self as Heaped>::Heap) -> bool {
                true
            }
            fn deconstruct(
                self,
                heap: &<Self as Heaped>::Heap,
            ) -> (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<(), wmcafs::LeftOperand, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (
                    <<Self as Heaped>::Heap as InverseImplements<
                        wmcaf::L,
                        Either<
                            (),
                            Pair<(), wmcafs::RightOperand, Maybe<(), ParseMetadata<()>>>,
                            ParseError<()>,
                        >,
                    >>::StructuralImplementor,
                    (),
                ),
            ) {
                (self.left_operand, (self.right_operand, ()))
            }
        }
    }
    /// @generated by [term_specialized_impl_gen::gen_ccf_impls]
    pub mod left_operand {
        use words::InverseImplements;
        use tymetafuncspec_core::Pair;
        use tymetafuncspec_core::Maybe;
        use tymetafuncspec_core::Either;
        use term::Heaped;
        use std_parse_metadata::ParseMetadata;
        use std_parse_error::ParseError;
        use crate::words_mod_cst_autoboxed_fib as wmcaf;
        use crate::words_mod_cst_autoboxed_fib::sorts as wmcafs;
        use crate::term_specialized_cst_autoboxed_fib as tscaf;
        /// @generated by [term_specialized_impl_gen::gen_ccf_impl_prod]
        impl ccf::DirectlyCanonicallyConstructibleFrom<
            <Self as Heaped>::Heap,
            (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ),
        > for tscaf::LeftOperand {
            fn construct(
                heap: &mut <Self as Heaped>::Heap,
                t: (
                    <<Self as Heaped>::Heap as InverseImplements<
                        wmcaf::L,
                        Either<
                            (),
                            Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                            ParseError<()>,
                        >,
                    >>::StructuralImplementor,
                    (),
                ),
            ) -> Self {
                crate::term_specialized_cst_autoboxed_fib::LeftOperand {
                    nat: t.0,
                }
            }
            fn deconstruct_succeeds(&self, heap: &<Self as Heaped>::Heap) -> bool {
                true
            }
            fn deconstruct(
                self,
                heap: &<Self as Heaped>::Heap,
            ) -> (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ) {
                (self.nat, ())
            }
        }
    }
    /// @generated by [term_specialized_impl_gen::gen_ccf_impls]
    pub mod right_operand {
        use words::InverseImplements;
        use tymetafuncspec_core::Pair;
        use tymetafuncspec_core::Maybe;
        use tymetafuncspec_core::Either;
        use term::Heaped;
        use std_parse_metadata::ParseMetadata;
        use std_parse_error::ParseError;
        use crate::words_mod_cst_autoboxed_fib as wmcaf;
        use crate::words_mod_cst_autoboxed_fib::sorts as wmcafs;
        use crate::term_specialized_cst_autoboxed_fib as tscaf;
        /// @generated by [term_specialized_impl_gen::gen_ccf_impl_prod]
        impl ccf::DirectlyCanonicallyConstructibleFrom<
            <Self as Heaped>::Heap,
            (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ),
        > for tscaf::RightOperand {
            fn construct(
                heap: &mut <Self as Heaped>::Heap,
                t: (
                    <<Self as Heaped>::Heap as InverseImplements<
                        wmcaf::L,
                        Either<
                            (),
                            Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                            ParseError<()>,
                        >,
                    >>::StructuralImplementor,
                    (),
                ),
            ) -> Self {
                crate::term_specialized_cst_autoboxed_fib::RightOperand {
                    nat: t.0,
                }
            }
            fn deconstruct_succeeds(&self, heap: &<Self as Heaped>::Heap) -> bool {
                true
            }
            fn deconstruct(
                self,
                heap: &<Self as Heaped>::Heap,
            ) -> (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ) {
                (self.nat, ())
            }
        }
    }
    /// @generated by [term_specialized_impl_gen::gen_ccf_impls]
    pub mod f {
        use words::InverseImplements;
        use tymetafuncspec_core::Pair;
        use tymetafuncspec_core::Maybe;
        use tymetafuncspec_core::Either;
        use term::Heaped;
        use std_parse_metadata::ParseMetadata;
        use std_parse_error::ParseError;
        use crate::words_mod_cst_autoboxed_fib as wmcaf;
        use crate::words_mod_cst_autoboxed_fib::sorts as wmcafs;
        use crate::term_specialized_cst_autoboxed_fib as tscaf;
        /// @generated by [term_specialized_impl_gen::gen_ccf_impl_prod]
        impl ccf::DirectlyCanonicallyConstructibleFrom<
            <Self as Heaped>::Heap,
            (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ),
        > for tscaf::F {
            fn construct(
                heap: &mut <Self as Heaped>::Heap,
                t: (
                    <<Self as Heaped>::Heap as InverseImplements<
                        wmcaf::L,
                        Either<
                            (),
                            Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                            ParseError<()>,
                        >,
                    >>::StructuralImplementor,
                    (),
                ),
            ) -> Self {
                crate::term_specialized_cst_autoboxed_fib::F {
                    nat: t.0,
                }
            }
            fn deconstruct_succeeds(&self, heap: &<Self as Heaped>::Heap) -> bool {
                true
            }
            fn deconstruct(
                self,
                heap: &<Self as Heaped>::Heap,
            ) -> (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ) {
                (self.nat, ())
            }
        }
    }
    /// @generated by [term_specialized_impl_gen::gen_ccf_impls]
    pub mod sum {
        use words::InverseImplements;
        use tymetafuncspec_core::Set;
        use tymetafuncspec_core::Pair;
        use tymetafuncspec_core::Maybe;
        use tymetafuncspec_core::Either;
        use term::Heaped;
        use std_parse_metadata::ParseMetadata;
        use std_parse_error::ParseError;
        use crate::words_mod_cst_autoboxed_fib as wmcaf;
        use crate::words_mod_cst_autoboxed_fib::sorts as wmcafs;
        use crate::term_specialized_cst_autoboxed_fib as tscaf;
        /// @generated by [term_specialized_impl_gen::gen_ccf_impl_prod]
        impl ccf::DirectlyCanonicallyConstructibleFrom<
            <Self as Heaped>::Heap,
            (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<
                            (),
                            Set<
                                (),
                                Either<
                                    (),
                                    Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                                    ParseError<()>,
                                >,
                            >,
                            Maybe<(), ParseMetadata<()>>,
                        >,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ),
        > for tscaf::Sum {
            fn construct(
                heap: &mut <Self as Heaped>::Heap,
                t: (
                    <<Self as Heaped>::Heap as InverseImplements<
                        wmcaf::L,
                        Either<
                            (),
                            Pair<
                                (),
                                Set<
                                    (),
                                    Either<
                                        (),
                                        Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                                        ParseError<()>,
                                    >,
                                >,
                                Maybe<(), ParseMetadata<()>>,
                            >,
                            ParseError<()>,
                        >,
                    >>::StructuralImplementor,
                    (),
                ),
            ) -> Self {
                crate::term_specialized_cst_autoboxed_fib::Sum {
                    set: t.0,
                }
            }
            fn deconstruct_succeeds(&self, heap: &<Self as Heaped>::Heap) -> bool {
                true
            }
            fn deconstruct(
                self,
                heap: &<Self as Heaped>::Heap,
            ) -> (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<
                            (),
                            Set<
                                (),
                                Either<
                                    (),
                                    Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                                    ParseError<()>,
                                >,
                            >,
                            Maybe<(), ParseMetadata<()>>,
                        >,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ) {
                (self.set, ())
            }
        }
    }
    /// @generated by [term_specialized_impl_gen::gen_ccf_impls]
    pub mod nat {
        use words::InverseImplements;
        use tymetafuncspec_core::Pair;
        use tymetafuncspec_core::Maybe;
        use tymetafuncspec_core::IdxBox;
        use tymetafuncspec_core::Either;
        use tymetafuncspec_core::BoundedNat;
        use term::Heaped;
        use std_parse_metadata::ParseMetadata;
        use std_parse_error::ParseError;
        use crate::words_mod_cst_autoboxed_fib as wmcaf;
        use crate::words_mod_cst_autoboxed_fib::sorts as wmcafs;
        use crate::term_specialized_cst_autoboxed_fib as tscaf;
        /// @generated by [term_specialized_impl_gen::gen_ccf_impl_sum]
        impl ccf::DirectlyCanonicallyConstructibleFrom<
            <Self as Heaped>::Heap,
            (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<(), BoundedNat<()>, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ),
        > for tscaf::Nat {
            fn construct(
                heap: &mut <Self as Heaped>::Heap,
                t: (
                    <<Self as Heaped>::Heap as InverseImplements<
                        wmcaf::L,
                        Either<
                            (),
                            Pair<(), BoundedNat<()>, Maybe<(), ParseMetadata<()>>>,
                            ParseError<()>,
                        >,
                    >>::StructuralImplementor,
                    (),
                ),
            ) -> Self {
                crate::term_specialized_cst_autoboxed_fib::Nat::NatLit(t.0)
            }
            fn deconstruct_succeeds(&self, heap: &<Self as Heaped>::Heap) -> bool {
                match self {
                    crate::term_specialized_cst_autoboxed_fib::Nat::NatLit(_) => true,
                    _ => false,
                }
            }
            fn deconstruct(
                self,
                heap: &<Self as Heaped>::Heap,
            ) -> (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<(), BoundedNat<()>, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ) {
                match self {
                    crate::term_specialized_cst_autoboxed_fib::Nat::NatLit(t) => (t, ()),
                    _ => panic!("conversion failure"),
                }
            }
        }
        /// @generated by [term_specialized_impl_gen::gen_ccf_impl_sum]
        impl ccf::DirectlyCanonicallyConstructibleFrom<
            <Self as Heaped>::Heap,
            (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<
                            (),
                            IdxBox<
                                (),
                                Either<
                                    (),
                                    Pair<(), wmcafs::F, Maybe<(), ParseMetadata<()>>>,
                                    ParseError<()>,
                                >,
                            >,
                            Maybe<(), ParseMetadata<()>>,
                        >,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ),
        > for tscaf::Nat {
            fn construct(
                heap: &mut <Self as Heaped>::Heap,
                t: (
                    <<Self as Heaped>::Heap as InverseImplements<
                        wmcaf::L,
                        Either<
                            (),
                            Pair<
                                (),
                                IdxBox<
                                    (),
                                    Either<
                                        (),
                                        Pair<(), wmcafs::F, Maybe<(), ParseMetadata<()>>>,
                                        ParseError<()>,
                                    >,
                                >,
                                Maybe<(), ParseMetadata<()>>,
                            >,
                            ParseError<()>,
                        >,
                    >>::StructuralImplementor,
                    (),
                ),
            ) -> Self {
                crate::term_specialized_cst_autoboxed_fib::Nat::F(t.0)
            }
            fn deconstruct_succeeds(&self, heap: &<Self as Heaped>::Heap) -> bool {
                match self {
                    crate::term_specialized_cst_autoboxed_fib::Nat::F(_) => true,
                    _ => false,
                }
            }
            fn deconstruct(
                self,
                heap: &<Self as Heaped>::Heap,
            ) -> (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<
                            (),
                            IdxBox<
                                (),
                                Either<
                                    (),
                                    Pair<(), wmcafs::F, Maybe<(), ParseMetadata<()>>>,
                                    ParseError<()>,
                                >,
                            >,
                            Maybe<(), ParseMetadata<()>>,
                        >,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ) {
                match self {
                    crate::term_specialized_cst_autoboxed_fib::Nat::F(t) => (t, ()),
                    _ => panic!("conversion failure"),
                }
            }
        }
        /// @generated by [term_specialized_impl_gen::gen_ccf_impl_sum]
        impl ccf::DirectlyCanonicallyConstructibleFrom<
            <Self as Heaped>::Heap,
            (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<
                            (),
                            IdxBox<
                                (),
                                Either<
                                    (),
                                    Pair<(), wmcafs::Plus, Maybe<(), ParseMetadata<()>>>,
                                    ParseError<()>,
                                >,
                            >,
                            Maybe<(), ParseMetadata<()>>,
                        >,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ),
        > for tscaf::Nat {
            fn construct(
                heap: &mut <Self as Heaped>::Heap,
                t: (
                    <<Self as Heaped>::Heap as InverseImplements<
                        wmcaf::L,
                        Either<
                            (),
                            Pair<
                                (),
                                IdxBox<
                                    (),
                                    Either<
                                        (),
                                        Pair<(), wmcafs::Plus, Maybe<(), ParseMetadata<()>>>,
                                        ParseError<()>,
                                    >,
                                >,
                                Maybe<(), ParseMetadata<()>>,
                            >,
                            ParseError<()>,
                        >,
                    >>::StructuralImplementor,
                    (),
                ),
            ) -> Self {
                crate::term_specialized_cst_autoboxed_fib::Nat::Plus(t.0)
            }
            fn deconstruct_succeeds(&self, heap: &<Self as Heaped>::Heap) -> bool {
                match self {
                    crate::term_specialized_cst_autoboxed_fib::Nat::Plus(_) => true,
                    _ => false,
                }
            }
            fn deconstruct(
                self,
                heap: &<Self as Heaped>::Heap,
            ) -> (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<
                            (),
                            IdxBox<
                                (),
                                Either<
                                    (),
                                    Pair<(), wmcafs::Plus, Maybe<(), ParseMetadata<()>>>,
                                    ParseError<()>,
                                >,
                            >,
                            Maybe<(), ParseMetadata<()>>,
                        >,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ) {
                match self {
                    crate::term_specialized_cst_autoboxed_fib::Nat::Plus(t) => (t, ()),
                    _ => panic!("conversion failure"),
                }
            }
        }
        /// @generated by [term_specialized_impl_gen::gen_ccf_impl_sum]
        impl ccf::DirectlyCanonicallyConstructibleFrom<
            <Self as Heaped>::Heap,
            (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<(), wmcafs::Sum, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ),
        > for tscaf::Nat {
            fn construct(
                heap: &mut <Self as Heaped>::Heap,
                t: (
                    <<Self as Heaped>::Heap as InverseImplements<
                        wmcaf::L,
                        Either<
                            (),
                            Pair<(), wmcafs::Sum, Maybe<(), ParseMetadata<()>>>,
                            ParseError<()>,
                        >,
                    >>::StructuralImplementor,
                    (),
                ),
            ) -> Self {
                crate::term_specialized_cst_autoboxed_fib::Nat::Sum(t.0)
            }
            fn deconstruct_succeeds(&self, heap: &<Self as Heaped>::Heap) -> bool {
                match self {
                    crate::term_specialized_cst_autoboxed_fib::Nat::Sum(_) => true,
                    _ => false,
                }
            }
            fn deconstruct(
                self,
                heap: &<Self as Heaped>::Heap,
            ) -> (
                <<Self as Heaped>::Heap as InverseImplements<
                    wmcaf::L,
                    Either<
                        (),
                        Pair<(), wmcafs::Sum, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >>::StructuralImplementor,
                (),
            ) {
                match self {
                    crate::term_specialized_cst_autoboxed_fib::Nat::Sum(t) => (t, ()),
                    _ => panic!("conversion failure"),
                }
            }
        }
    }
}
/// @generated by [term_specialized_impl_gen::gen_transitive_ccf_mod]
pub mod transitive_ccf {
    use tymetafuncspec_core::Set;
    use tymetafuncspec_core::Pair;
    use tymetafuncspec_core::Maybe;
    use tymetafuncspec_core::IdxBox;
    use tymetafuncspec_core::Either;
    use tymetafuncspec_core::BoundedNat;
    use std_parse_metadata::ParseMetadata;
    use std_parse_error::ParseError;
    use crate::term_specialized_cst_autoboxed_fib as tscaf;
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::LeftOperand {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::LeftOperand {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Sum,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::LeftOperand {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::LeftOperand {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                BoundedNat<tscaf::Heap>,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::LeftOperand {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::RightOperand {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::RightOperand {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Sum,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::RightOperand {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::RightOperand {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                BoundedNat<tscaf::Heap>,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::RightOperand {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::F {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::F {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Sum,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::F {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::F {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                BoundedNat<tscaf::Heap>,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::F {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                Set<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Nat,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::Sum {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                Set<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Nat,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, tscaf::Plus>
    for tscaf::Nat {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                IdxBox<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Plus,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::Nat {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                IdxBox<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Plus,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::Nat {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                IdxBox<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::F,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Sum,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::Nat {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Sum,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::Nat {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                IdxBox<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::F,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                BoundedNat<tscaf::Heap>,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::Nat {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                BoundedNat<tscaf::Heap>,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                Set<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Nat,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::Nat {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Sum,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                IdxBox<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Plus,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::Nat {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                IdxBox<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Plus,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                IdxBox<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::F,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for tscaf::Nat {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                IdxBox<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::F,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, tscaf::Plus>
    for IdxBox<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for IdxBox<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    >
    for IdxBox<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    > {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for IdxBox<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    > {
        type Intermediary = Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, tscaf::Plus>
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::Plus,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, ParseError<tscaf::Heap>>
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = ParseError<tscaf::Heap>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::Plus,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, ParseError<tscaf::Heap>>
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            tscaf::LeftOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = ParseError<tscaf::Heap>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            tscaf::LeftOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::LeftOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            tscaf::LeftOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            tscaf::LeftOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::LeftOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, ParseError<tscaf::Heap>>
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            tscaf::RightOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = ParseError<tscaf::Heap>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            tscaf::RightOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::RightOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            tscaf::RightOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            tscaf::RightOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::RightOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, ParseError<tscaf::Heap>>
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = ParseError<tscaf::Heap>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::F,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::F,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, ParseError<tscaf::Heap>>
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Sum, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = ParseError<tscaf::Heap>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                Set<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Nat,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Sum, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::Sum,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Sum, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Sum, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::Sum,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, ParseError<tscaf::Heap>>
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = ParseError<tscaf::Heap>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::Nat,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::Nat,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Sum,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::Nat,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                BoundedNat<tscaf::Heap>,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::Nat,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            tscaf::Nat,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, BoundedNat<tscaf::Heap>>
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            BoundedNat<tscaf::Heap>,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            BoundedNat<tscaf::Heap>,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, ParseError<tscaf::Heap>>
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            BoundedNat<tscaf::Heap>,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = ParseError<tscaf::Heap>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            BoundedNat<tscaf::Heap>,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            BoundedNat<tscaf::Heap>,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            BoundedNat<tscaf::Heap>,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Set<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Nat,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            Set<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Nat,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            Set<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Nat,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, ParseError<tscaf::Heap>>
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            Set<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Nat,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = ParseError<tscaf::Heap>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            Set<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Nat,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            Set<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Nat,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            Set<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Nat,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, tscaf::Plus>
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Plus,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Plus,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, ParseError<tscaf::Heap>>
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Plus,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = ParseError<tscaf::Heap>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Plus,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Plus,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Plus,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Plus,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Plus,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, ParseError<tscaf::Heap>>
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::F,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = ParseError<tscaf::Heap>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::F,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::F,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::F,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::F,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::F,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
    >
    for Either<
        tscaf::Heap,
        Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::F,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::F,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, ParseMetadata<tscaf::Heap>>
    for Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>> {
        type Intermediary = ParseMetadata<tscaf::Heap>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, tscaf::Plus>
    for Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Plus;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    >
    for Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, tscaf::LeftOperand>
    for Pair<
        tscaf::Heap,
        tscaf::LeftOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = tscaf::LeftOperand;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Pair<
        tscaf::Heap,
        tscaf::LeftOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = tscaf::LeftOperand;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    >
    for Pair<
        tscaf::Heap,
        tscaf::LeftOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = tscaf::LeftOperand;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Sum,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Pair<
        tscaf::Heap,
        tscaf::LeftOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = tscaf::LeftOperand;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Pair<
        tscaf::Heap,
        tscaf::LeftOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = tscaf::LeftOperand;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                BoundedNat<tscaf::Heap>,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Pair<
        tscaf::Heap,
        tscaf::LeftOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = tscaf::LeftOperand;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    >
    for Pair<
        tscaf::Heap,
        tscaf::LeftOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, tscaf::RightOperand>
    for Pair<
        tscaf::Heap,
        tscaf::RightOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = tscaf::RightOperand;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Pair<
        tscaf::Heap,
        tscaf::RightOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = tscaf::RightOperand;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    >
    for Pair<
        tscaf::Heap,
        tscaf::RightOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = tscaf::RightOperand;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Sum,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Pair<
        tscaf::Heap,
        tscaf::RightOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = tscaf::RightOperand;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Pair<
        tscaf::Heap,
        tscaf::RightOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = tscaf::RightOperand;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                BoundedNat<tscaf::Heap>,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Pair<
        tscaf::Heap,
        tscaf::RightOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = tscaf::RightOperand;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    >
    for Pair<
        tscaf::Heap,
        tscaf::RightOperand,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, tscaf::F>
    for Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::F;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::F;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    > for Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::F;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Sum,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::F;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::F;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                BoundedNat<tscaf::Heap>,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::F;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > for Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, tscaf::Sum>
    for Pair<tscaf::Heap, tscaf::Sum, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Sum;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                Set<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Nat,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for Pair<tscaf::Heap, tscaf::Sum, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Sum;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > for Pair<tscaf::Heap, tscaf::Sum, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, tscaf::Plus>
    for Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Nat;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, tscaf::Nat>
    for Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Nat;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Nat;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    > for Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Nat;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Sum,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Nat;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Nat;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                BoundedNat<tscaf::Heap>,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Nat;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                Set<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Nat,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    > for Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Nat;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > for Pair<tscaf::Heap, tscaf::Nat, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, BoundedNat<tscaf::Heap>>
    for Pair<
        tscaf::Heap,
        BoundedNat<tscaf::Heap>,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = BoundedNat<tscaf::Heap>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    >
    for Pair<
        tscaf::Heap,
        BoundedNat<tscaf::Heap>,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Set<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Nat,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
    >
    for Pair<
        tscaf::Heap,
        Set<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Nat,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = Set<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Nat,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    >
    for Pair<
        tscaf::Heap,
        Set<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Nat,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<tscaf::Heap, tscaf::Plus>
    for Pair<
        tscaf::Heap,
        IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Plus,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Plus,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Plus,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
    >
    for Pair<
        tscaf::Heap,
        IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Plus,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Plus,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Pair<
        tscaf::Heap,
        IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Plus,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Plus,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    >
    for Pair<
        tscaf::Heap,
        IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Plus,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::F,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
    >
    for Pair<
        tscaf::Heap,
        IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::F,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::F,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >,
    >
    for Pair<
        tscaf::Heap,
        IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::F,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::F,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >,
    >
    for Pair<
        tscaf::Heap,
        IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::F,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::F,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >;
    }
    /// @generated by [term_specialized_impl_gen::tuc_impls]
    impl ccf::transitivity::TransitivelyUnitCcf<
        tscaf::Heap,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    >
    for Pair<
        tscaf::Heap,
        IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::F,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >,
        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
    > {
        type Intermediary = Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>;
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (ParseError<tscaf::Heap>, (ParseError<tscaf::Heap>, ())),
    > for tscaf::Plus {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (ParseError<tscaf::Heap>, (ParseError<tscaf::Heap>, ())),
    >
    for Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            ParseError<tscaf::Heap>,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        ),
    > for tscaf::Plus {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            ParseError<tscaf::Heap>,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        ),
    >
    for Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            ParseError<tscaf::Heap>,
            (
                Pair<
                    tscaf::Heap,
                    tscaf::RightOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                (),
            ),
        ),
    > for tscaf::Plus {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            ParseError<tscaf::Heap>,
            (
                Pair<
                    tscaf::Heap,
                    tscaf::RightOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                (),
            ),
        ),
    >
    for Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (ParseError<tscaf::Heap>, ()),
        ),
    > for tscaf::Plus {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (ParseError<tscaf::Heap>, ()),
        ),
    >
    for Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        ),
    > for tscaf::Plus {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        ),
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        ),
    >
    for Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Nat,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        ),
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Pair<
                    tscaf::Heap,
                    tscaf::RightOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                (),
            ),
        ),
    > for tscaf::Plus {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Pair<
                    tscaf::Heap,
                    tscaf::RightOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                (),
            ),
        ),
    >
    for Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Nat,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        ),
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Nat,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Nat,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        ),
    >
    for Either<
        tscaf::Heap,
        Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
        ParseError<tscaf::Heap>,
    > {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Pair<
                tscaf::Heap,
                tscaf::LeftOperand,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            (ParseError<tscaf::Heap>, ()),
        ),
    > for tscaf::Plus {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Pair<
                tscaf::Heap,
                tscaf::LeftOperand,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            (ParseError<tscaf::Heap>, ()),
        ),
    >
    for Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Pair<
                tscaf::Heap,
                tscaf::LeftOperand,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        ),
    > for tscaf::Plus {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Pair<
                tscaf::Heap,
                tscaf::LeftOperand,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        ),
    >
    for Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Pair<
                tscaf::Heap,
                tscaf::LeftOperand,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            (
                Pair<
                    tscaf::Heap,
                    tscaf::RightOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                (),
            ),
        ),
    > for tscaf::Plus {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
    /// @generated by [term_specialized_impl_gen::tac_impls]
    impl ccf::transitivity::TransitivelyAllCcf<
        tscaf::Heap,
        (
            Pair<
                tscaf::Heap,
                tscaf::LeftOperand,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            (
                Pair<
                    tscaf::Heap,
                    tscaf::RightOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                (),
            ),
        ),
    >
    for Pair<tscaf::Heap, tscaf::Plus, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>> {
        type Intermediary = tscaf::Plus;
        type Intermediaries = (
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::LeftOperand,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
            (
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::RightOperand,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
                (),
            ),
        );
    }
}
/// @generated by [term_specialized_impl_gen::gen_ccf_auto_impls]
pub mod ccf_auto_impls {
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Plus
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::LeftOperand
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::RightOperand
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::F
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Sum
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Nat
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::LeftOperand, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_fib::Heap, >, >, >, std_parse_error::ParseError
        < crate ::term_specialized_cst_autoboxed_fib::Heap, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::LeftOperand, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_fib::Heap, >, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_fib::Heap, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_fib::Heap, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, std_parse_error::ParseError <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::RightOperand, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_fib::Heap, >, >, >, std_parse_error::ParseError
        < crate ::term_specialized_cst_autoboxed_fib::Heap, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::RightOperand, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_fib::Heap, >, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Nat, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Nat, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Set <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Nat, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >, >, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Set <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Nat, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >, >, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Set <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Nat, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::BoundedNat
        < crate ::term_specialized_cst_autoboxed_fib::Heap, >, tymetafuncspec_core::Maybe
        < crate ::term_specialized_cst_autoboxed_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_fib::Heap, >, >, >, std_parse_error::ParseError
        < crate ::term_specialized_cst_autoboxed_fib::Heap, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::BoundedNat
        < crate ::term_specialized_cst_autoboxed_fib::Heap, >, tymetafuncspec_core::Maybe
        < crate ::term_specialized_cst_autoboxed_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_fib::Heap, >, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::BoundedNat
        < crate ::term_specialized_cst_autoboxed_fib::Heap, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::IdxBox <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::F, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >, >, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::IdxBox <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::F, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >, >, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::IdxBox <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::F, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::F, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::F, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::IdxBox <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Plus, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >, >, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::IdxBox <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Plus, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >, >, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::IdxBox <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Plus, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Plus, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Plus, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Sum, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate ::term_specialized_cst_autoboxed_fib::Heap,
        >, >
    );
    term::auto_impl_ccf!(
        crate ::term_specialized_cst_autoboxed_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_fib::Heap, crate
        ::term_specialized_cst_autoboxed_fib::Sum, tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_fib::Heap, std_parse_metadata::ParseMetadata <
        crate ::term_specialized_cst_autoboxed_fib::Heap, >, >, >
    );
}
/// @generated by [words::words_inverse_impls]
pub mod words_inverse_impls {
    use tymetafuncspec_core::Set;
    use tymetafuncspec_core::Pair;
    use tymetafuncspec_core::Maybe;
    use tymetafuncspec_core::IdxBox;
    use tymetafuncspec_core::Either;
    use tymetafuncspec_core::BoundedNat;
    use std_parse_metadata::ParseMetadata;
    use std_parse_error::ParseError;
    use crate::words_mod_cst_autoboxed_fib as wmcaf;
    use crate::words_mod_cst_autoboxed_fib::sorts as wmcafs;
    use crate::term_specialized_cst_autoboxed_fib as tscaf;
    impl words::InverseImplements<wmcaf::L, wmcafs::Plus> for tscaf::Heap {
        type ExternBehavioralImplementor = tscaf::Plus;
        type StructuralImplementor = tscaf::Plus;
    }
    impl words::InverseImplements<wmcaf::L, wmcafs::LeftOperand> for tscaf::Heap {
        type ExternBehavioralImplementor = tscaf::LeftOperand;
        type StructuralImplementor = tscaf::LeftOperand;
    }
    impl words::InverseImplements<wmcaf::L, wmcafs::RightOperand> for tscaf::Heap {
        type ExternBehavioralImplementor = tscaf::RightOperand;
        type StructuralImplementor = tscaf::RightOperand;
    }
    impl words::InverseImplements<wmcaf::L, wmcafs::F> for tscaf::Heap {
        type ExternBehavioralImplementor = tscaf::F;
        type StructuralImplementor = tscaf::F;
    }
    impl words::InverseImplements<wmcaf::L, wmcafs::Sum> for tscaf::Heap {
        type ExternBehavioralImplementor = tscaf::Sum;
        type StructuralImplementor = tscaf::Sum;
    }
    impl words::InverseImplements<wmcaf::L, wmcafs::Nat> for tscaf::Heap {
        type ExternBehavioralImplementor = tscaf::Nat;
        type StructuralImplementor = tscaf::Nat;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Either<
            (),
            Pair<(), wmcafs::LeftOperand, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::LeftOperand,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::LeftOperand,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Pair<(), wmcafs::LeftOperand, Maybe<(), ParseMetadata<()>>>,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Pair<
            tscaf::Heap,
            tscaf::LeftOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
        type StructuralImplementor = Pair<
            tscaf::Heap,
            tscaf::LeftOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    impl words::InverseImplements<wmcaf::L, Maybe<(), ParseMetadata<()>>>
    for tscaf::Heap {
        type ExternBehavioralImplementor = Maybe<
            tscaf::Heap,
            ParseMetadata<tscaf::Heap>,
        >;
        type StructuralImplementor = Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>;
    }
    impl words::InverseImplements<wmcaf::L, ParseMetadata<()>> for tscaf::Heap {
        type ExternBehavioralImplementor = ParseMetadata<tscaf::Heap>;
        type StructuralImplementor = ParseMetadata<tscaf::Heap>;
    }
    impl words::InverseImplements<wmcaf::L, ParseError<()>> for tscaf::Heap {
        type ExternBehavioralImplementor = ParseError<tscaf::Heap>;
        type StructuralImplementor = ParseError<tscaf::Heap>;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Either<
            (),
            Pair<(), wmcafs::RightOperand, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::RightOperand,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::RightOperand,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Pair<(), wmcafs::RightOperand, Maybe<(), ParseMetadata<()>>>,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Pair<
            tscaf::Heap,
            tscaf::RightOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
        type StructuralImplementor = Pair<
            tscaf::Heap,
            tscaf::RightOperand,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Either<(), Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Nat,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Pair<
            tscaf::Heap,
            tscaf::Nat,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
        type StructuralImplementor = Pair<
            tscaf::Heap,
            tscaf::Nat,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Either<
            (),
            Pair<
                (),
                Set<
                    (),
                    Either<
                        (),
                        Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                Set<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Nat,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                Set<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Nat,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Pair<
            (),
            Set<
                (),
                Either<
                    (),
                    Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Pair<
            tscaf::Heap,
            Set<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Nat,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
        type StructuralImplementor = Pair<
            tscaf::Heap,
            Set<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Nat,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Set<
            (),
            Either<
                (),
                Pair<(), wmcafs::Nat, Maybe<(), ParseMetadata<()>>>,
                ParseError<()>,
            >,
        >,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Set<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Nat,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >;
        type StructuralImplementor = Set<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Nat,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Either<
            (),
            Pair<(), BoundedNat<()>, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                BoundedNat<tscaf::Heap>,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                BoundedNat<tscaf::Heap>,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Pair<(), BoundedNat<()>, Maybe<(), ParseMetadata<()>>>,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Pair<
            tscaf::Heap,
            BoundedNat<tscaf::Heap>,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
        type StructuralImplementor = Pair<
            tscaf::Heap,
            BoundedNat<tscaf::Heap>,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    impl words::InverseImplements<wmcaf::L, BoundedNat<()>> for tscaf::Heap {
        type ExternBehavioralImplementor = BoundedNat<tscaf::Heap>;
        type StructuralImplementor = BoundedNat<tscaf::Heap>;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Either<
            (),
            Pair<
                (),
                IdxBox<
                    (),
                    Either<
                        (),
                        Pair<(), wmcafs::F, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                IdxBox<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::F,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                IdxBox<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::F,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Pair<
            (),
            IdxBox<
                (),
                Either<
                    (),
                    Pair<(), wmcafs::F, Maybe<(), ParseMetadata<()>>>,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::F,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
        type StructuralImplementor = Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::F,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        IdxBox<
            (),
            Either<(), Pair<(), wmcafs::F, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
        >,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::F,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >;
        type StructuralImplementor = IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::F,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Either<(), Pair<(), wmcafs::F, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscaf::Heap,
            Pair<tscaf::Heap, tscaf::F, Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>>,
            ParseError<tscaf::Heap>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Pair<(), wmcafs::F, Maybe<(), ParseMetadata<()>>>,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Pair<
            tscaf::Heap,
            tscaf::F,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
        type StructuralImplementor = Pair<
            tscaf::Heap,
            tscaf::F,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Either<
            (),
            Pair<
                (),
                IdxBox<
                    (),
                    Either<
                        (),
                        Pair<(), wmcafs::Plus, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                IdxBox<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Plus,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                IdxBox<
                    tscaf::Heap,
                    Either<
                        tscaf::Heap,
                        Pair<
                            tscaf::Heap,
                            tscaf::Plus,
                            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                        >,
                        ParseError<tscaf::Heap>,
                    >,
                >,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Pair<
            (),
            IdxBox<
                (),
                Either<
                    (),
                    Pair<(), wmcafs::Plus, Maybe<(), ParseMetadata<()>>>,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Plus,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
        type StructuralImplementor = Pair<
            tscaf::Heap,
            IdxBox<
                tscaf::Heap,
                Either<
                    tscaf::Heap,
                    Pair<
                        tscaf::Heap,
                        tscaf::Plus,
                        Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                    >,
                    ParseError<tscaf::Heap>,
                >,
            >,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        IdxBox<
            (),
            Either<
                (),
                Pair<(), wmcafs::Plus, Maybe<(), ParseMetadata<()>>>,
                ParseError<()>,
            >,
        >,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Plus,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >;
        type StructuralImplementor = IdxBox<
            tscaf::Heap,
            Either<
                tscaf::Heap,
                Pair<
                    tscaf::Heap,
                    tscaf::Plus,
                    Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
                >,
                ParseError<tscaf::Heap>,
            >,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Either<(), Pair<(), wmcafs::Plus, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Plus,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Pair<(), wmcafs::Plus, Maybe<(), ParseMetadata<()>>>,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Pair<
            tscaf::Heap,
            tscaf::Plus,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
        type StructuralImplementor = Pair<
            tscaf::Heap,
            tscaf::Plus,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Either<(), Pair<(), wmcafs::Sum, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Sum,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscaf::Heap,
            Pair<
                tscaf::Heap,
                tscaf::Sum,
                Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
            >,
            ParseError<tscaf::Heap>,
        >;
    }
    impl words::InverseImplements<
        wmcaf::L,
        Pair<(), wmcafs::Sum, Maybe<(), ParseMetadata<()>>>,
    > for tscaf::Heap {
        type ExternBehavioralImplementor = Pair<
            tscaf::Heap,
            tscaf::Sum,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
        type StructuralImplementor = Pair<
            tscaf::Heap,
            tscaf::Sum,
            Maybe<tscaf::Heap, ParseMetadata<tscaf::Heap>>,
        >;
    }
}
