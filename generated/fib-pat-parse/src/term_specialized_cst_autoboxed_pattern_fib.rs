#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [term_specialized_gen::generate]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::Pair;
use tymetafuncspec_core::Maybe;
use tymetafuncspec_core::IdxBox;
use tymetafuncspec_core::Either;
use tymetafuncspec_core::BoundedNat;
use std_parse_metadata::ParseMetadata;
use std_parse_error::ParseError;
use pattern_tmf::OrVariableZeroOrMore;
use pattern_tmf::OrVariable;
use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set as tscapfhs;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::parse_metadata as tscapfhpm;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::parse_error as tscapfhpe;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair as tscapfhp;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more as tscapfhovzom;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable as tscapfhov;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::nat_lit as tscapfhnl;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::maybe as tscapfhm;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box as tscapfhib;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either as tscapfhe;
/// @generated by [term_specialized_gen::gen_heap]
#[derive(Default)]
pub struct Heap {
    either: tscapfhe::Bak,
    or_variable: tscapfhov::Bak,
    pair: tscapfhp::Bak,
    maybe: tscapfhm::Bak,
    parse_metadata: tscapfhpm::Bak,
    parse_error: tscapfhpe::Bak,
    set: tscapfhs::Bak,
    or_variable_zero_or_more: tscapfhovzom::Bak,
    nat_lit: tscapfhnl::Bak,
    idx_box: tscapfhib::Bak,
}
/// @generated by [term_specialized_gen::gen_heap]
pub mod heap {
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set as tscapfhs;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::parse_metadata as tscapfhpm;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::parse_error as tscapfhpe;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair as tscapfhp;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more as tscapfhovzom;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable as tscapfhov;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::nat_lit as tscapfhnl;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::maybe as tscapfhm;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box as tscapfhib;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either as tscapfhe;
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    #[derive(Default)]
    pub struct Bak {
        pub either: tscapfhe::Bak,
        pub or_variable: tscapfhov::Bak,
        pub pair: tscapfhp::Bak,
        pub maybe: tscapfhm::Bak,
        pub parse_metadata: tscapfhpm::Bak,
        pub parse_error: tscapfhpe::Bak,
        pub set: tscapfhs::Bak,
        pub or_variable_zero_or_more: tscapfhovzom::Bak,
        pub nat_lit: tscapfhnl::Bak,
        pub idx_box: tscapfhib::Bak,
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod either {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair as tscapfhep;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable_zero_or_more as tscapfheovzom;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable as tscapfheov;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub or_variable: tscapfheov::Bak,
            pub pair: tscapfhep::Bak,
            pub or_variable_zero_or_more: tscapfheovzom::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod or_variable {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either as tscapfheove;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub either: tscapfheove::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod either {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair as tscapfheovep;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub pair: tscapfheovep::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod pair {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set as tscapfheoveps;
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::right_operand as tscapfheovepro;
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::nat as tscapfheovepn;
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::left_operand as tscapfheoveplo;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub left_operand: tscapfheoveplo::Bak,
                        pub right_operand: tscapfheovepro::Bak,
                        pub nat: tscapfheovepn::Bak,
                        pub set: tscapfheoveps::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod left_operand {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::left_operand::maybe as tscapfheoveplom;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tscapfheoveplom::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::left_operand::maybe::parse_metadata as tscapfheoveplompm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tscapfheoveplompm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::left_operand::maybe::parse_metadata::parse_error as tscapfheoveplompmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tscapfheoveplompmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::left_operand::maybe::parse_metadata::parse_error::parse_error as tscapfheoveplompmpepe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tscapfheoveplompmpepe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use tymetafuncspec_core::Pair;
                                        use tymetafuncspec_core::Maybe;
                                        use tymetafuncspec_core::EitherHeapBak;
                                        use tymetafuncspec_core::Either;
                                        use std_parse_metadata::ParseMetadata;
                                        use std_parse_error::ParseError;
                                        use pattern_tmf::OrVariable;
                                        use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                        /// @generated by [term_specialized_gen::gen_heapbak_module]
                                        #[derive(Default)]
                                        pub struct Bak(
                                            pub EitherHeapBak<
                                                tscapf::Heap,
                                                OrVariable<
                                                    tscapf::Heap,
                                                    Either<
                                                        tscapf::Heap,
                                                        Pair<
                                                            tscapf::Heap,
                                                            tscapf::LeftOperand,
                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                        >,
                                                        ParseError<tscapf::Heap>,
                                                    >,
                                                >,
                                                ParseError<tscapf::Heap>,
                                            >,
                                        );
                                    }
                                }
                            }
                        }
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod right_operand {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::right_operand::maybe as tscapfheoveprom;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tscapfheoveprom::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::right_operand::maybe::parse_metadata as tscapfheoveprompm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tscapfheoveprompm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::right_operand::maybe::parse_metadata::parse_error as tscapfheoveprompmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tscapfheoveprompmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::right_operand::maybe::parse_metadata::parse_error::parse_error as tscapfheoveprompmpepe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tscapfheoveprompmpepe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use tymetafuncspec_core::Pair;
                                        use tymetafuncspec_core::Maybe;
                                        use tymetafuncspec_core::EitherHeapBak;
                                        use tymetafuncspec_core::Either;
                                        use std_parse_metadata::ParseMetadata;
                                        use std_parse_error::ParseError;
                                        use pattern_tmf::OrVariable;
                                        use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                        /// @generated by [term_specialized_gen::gen_heapbak_module]
                                        #[derive(Default)]
                                        pub struct Bak(
                                            pub EitherHeapBak<
                                                tscapf::Heap,
                                                OrVariable<
                                                    tscapf::Heap,
                                                    Either<
                                                        tscapf::Heap,
                                                        Pair<
                                                            tscapf::Heap,
                                                            tscapf::RightOperand,
                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                        >,
                                                        ParseError<tscapf::Heap>,
                                                    >,
                                                >,
                                                ParseError<tscapf::Heap>,
                                            >,
                                        );
                                    }
                                }
                            }
                        }
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod nat {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::nat::maybe as tscapfheovepnm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tscapfheovepnm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::nat::maybe::parse_metadata as tscapfheovepnmpm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tscapfheovepnmpm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::nat::maybe::parse_metadata::parse_error as tscapfheovepnmpmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tscapfheovepnmpmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::nat::maybe::parse_metadata::parse_error::parse_error as tscapfheovepnmpmpepe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tscapfheovepnmpmpepe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use tymetafuncspec_core::Pair;
                                        use tymetafuncspec_core::Maybe;
                                        use tymetafuncspec_core::EitherHeapBak;
                                        use tymetafuncspec_core::Either;
                                        use std_parse_metadata::ParseMetadata;
                                        use std_parse_error::ParseError;
                                        use pattern_tmf::OrVariable;
                                        use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                        /// @generated by [term_specialized_gen::gen_heapbak_module]
                                        #[derive(Default)]
                                        pub struct Bak(
                                            pub EitherHeapBak<
                                                tscapf::Heap,
                                                OrVariable<
                                                    tscapf::Heap,
                                                    Either<
                                                        tscapf::Heap,
                                                        Pair<
                                                            tscapf::Heap,
                                                            tscapf::Nat,
                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                        >,
                                                        ParseError<tscapf::Heap>,
                                                    >,
                                                >,
                                                ParseError<tscapf::Heap>,
                                            >,
                                        );
                                    }
                                }
                            }
                        }
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod set {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set::either as tscapfheovepse;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub either: tscapfheovepse::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod either {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set::either::or_variable_zero_or_more as tscapfheovepseovzom;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub or_variable_zero_or_more: tscapfheovepseovzom::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod or_variable_zero_or_more {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set::either::or_variable_zero_or_more::either as tscapfheovepseovzome;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub either: tscapfheovepseovzome::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod either {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair as tscapfheovepseovzomep;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub pair: tscapfheovepseovzomep::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod pair {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat as tscapfheovepseovzomepn;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub nat: tscapfheovepseovzomepn::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod nat {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe as tscapfheovepseovzomepnm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub maybe: tscapfheovepseovzomepnm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod maybe {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfheovepseovzomepnmpm;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_metadata: tscapfheovepseovzomepnmpm::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_metadata {
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfheovepseovzomepnmpmpe;
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    #[derive(Default)]
                                                    pub struct Bak {
                                                        pub parse_error: tscapfheovepseovzomepnmpmpe::Bak,
                                                    }
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    pub mod parse_error {
                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error as tscapfheovepseovzomepnmpmpepe;
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        #[derive(Default)]
                                                        pub struct Bak {
                                                            pub parse_error: tscapfheovepseovzomepnmpmpepe::Bak,
                                                        }
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        pub mod parse_error {
                                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error::maybe as tscapfheovepseovzomepnmpmpepem;
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            #[derive(Default)]
                                                            pub struct Bak {
                                                                pub maybe: tscapfheovepseovzomepnmpmpepem::Bak,
                                                            }
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            pub mod maybe {
                                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error::maybe::parse_metadata as tscapfheovepseovzomepnmpmpepempm;
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                #[derive(Default)]
                                                                pub struct Bak {
                                                                    pub parse_metadata: tscapfheovepseovzomepnmpmpepempm::Bak,
                                                                }
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                pub mod parse_metadata {
                                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error::maybe::parse_metadata::parse_error as tscapfheovepseovzomepnmpmpepempmpe;
                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                    #[derive(Default)]
                                                                    pub struct Bak {
                                                                        pub parse_error: tscapfheovepseovzomepnmpmpepempmpe::Bak,
                                                                    }
                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                    pub mod parse_error {
                                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error::maybe::parse_metadata::parse_error::parse_error as tscapfheovepseovzomepnmpmpepempmpepe;
                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                        #[derive(Default)]
                                                                        pub struct Bak {
                                                                            pub parse_error: tscapfheovepseovzomepnmpmpepempmpepe::Bak,
                                                                        }
                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                        pub mod parse_error {
                                                                            use tymetafuncspec_core::Set;
                                                                            use tymetafuncspec_core::Pair;
                                                                            use tymetafuncspec_core::Maybe;
                                                                            use tymetafuncspec_core::EitherHeapBak;
                                                                            use tymetafuncspec_core::Either;
                                                                            use std_parse_metadata::ParseMetadata;
                                                                            use std_parse_error::ParseError;
                                                                            use pattern_tmf::OrVariableZeroOrMore;
                                                                            use pattern_tmf::OrVariable;
                                                                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                                            #[derive(Default)]
                                                                            pub struct Bak(
                                                                                pub EitherHeapBak<
                                                                                    tscapf::Heap,
                                                                                    OrVariable<
                                                                                        tscapf::Heap,
                                                                                        Either<
                                                                                            tscapf::Heap,
                                                                                            Pair<
                                                                                                tscapf::Heap,
                                                                                                Set<
                                                                                                    tscapf::Heap,
                                                                                                    Either<
                                                                                                        tscapf::Heap,
                                                                                                        OrVariableZeroOrMore<
                                                                                                            tscapf::Heap,
                                                                                                            Either<
                                                                                                                tscapf::Heap,
                                                                                                                Pair<
                                                                                                                    tscapf::Heap,
                                                                                                                    tscapf::Nat,
                                                                                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                                >,
                                                                                                                ParseError<tscapf::Heap>,
                                                                                                            >,
                                                                                                        >,
                                                                                                        ParseError<tscapf::Heap>,
                                                                                                    >,
                                                                                                >,
                                                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                            >,
                                                                                            ParseError<tscapf::Heap>,
                                                                                        >,
                                                                                    >,
                                                                                    ParseError<tscapf::Heap>,
                                                                                >,
                                                                            );
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod pair {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set as tscapfheps;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::right_operand as tscapfhepro;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::plus as tscapfhepp;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat_lit as tscapfhepnl;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat as tscapfhepn;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::left_operand as tscapfheplo;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box as tscapfhepib;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::f as tscapfhepf;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub left_operand: tscapfheplo::Bak,
                pub right_operand: tscapfhepro::Bak,
                pub nat: tscapfhepn::Bak,
                pub set: tscapfheps::Bak,
                pub nat_lit: tscapfhepnl::Bak,
                pub idx_box: tscapfhepib::Bak,
                pub f: tscapfhepf::Bak,
                pub plus: tscapfhepp::Bak,
                pub sum: crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::sum::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod left_operand {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::left_operand::maybe as tscapfheplom;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfheplom::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::left_operand::maybe::parse_metadata as tscapfheplompm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfheplompm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::left_operand::maybe::parse_metadata::parse_error as tscapfheplompmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfheplompmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::LeftOperand,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod right_operand {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::right_operand::maybe as tscapfheprom;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfheprom::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::right_operand::maybe::parse_metadata as tscapfheprompm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfheprompm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::right_operand::maybe::parse_metadata::parse_error as tscapfheprompmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfheprompmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::RightOperand,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod nat {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat::maybe as tscapfhepnm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfhepnm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat::maybe::parse_metadata as tscapfhepnmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfhepnmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhepnmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfhepnmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::Nat,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod set {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either as tscapfhepse;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub either: tscapfhepse::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod either {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::or_variable_zero_or_more as tscapfhepseovzom;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub or_variable_zero_or_more: tscapfhepseovzom::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod or_variable_zero_or_more {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::or_variable_zero_or_more::either as tscapfhepseovzome;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub either: tscapfhepseovzome::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod either {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::or_variable_zero_or_more::either::pair as tscapfhepseovzomep;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub pair: tscapfhepseovzomep::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod pair {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::or_variable_zero_or_more::either::pair::nat as tscapfhepseovzomepn;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub nat: tscapfhepseovzomepn::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod nat {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhepseovzomepnm;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tscapfhepseovzomepnm::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhepseovzomepnmpm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tscapfhepseovzomepnmpm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhepseovzomepnmpmpe;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_error: tscapfhepseovzomepnmpmpe::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_error {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error as tscapfhepseovzomepnmpmpepe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tscapfhepseovzomepnmpmpepe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error::maybe as tscapfhepseovzomepnmpmpepem;
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    #[derive(Default)]
                                                    pub struct Bak {
                                                        pub maybe: tscapfhepseovzomepnmpmpepem::Bak,
                                                    }
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    pub mod maybe {
                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error::maybe::parse_metadata as tscapfhepseovzomepnmpmpepempm;
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        #[derive(Default)]
                                                        pub struct Bak {
                                                            pub parse_metadata: tscapfhepseovzomepnmpmpepempm::Bak,
                                                        }
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        pub mod parse_metadata {
                                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error::maybe::parse_metadata::parse_error as tscapfhepseovzomepnmpmpepempmpe;
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            #[derive(Default)]
                                                            pub struct Bak {
                                                                pub parse_error: tscapfhepseovzomepnmpmpepempmpe::Bak,
                                                            }
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            pub mod parse_error {
                                                                use tymetafuncspec_core::Set;
                                                                use tymetafuncspec_core::Pair;
                                                                use tymetafuncspec_core::Maybe;
                                                                use tymetafuncspec_core::EitherHeapBak;
                                                                use tymetafuncspec_core::Either;
                                                                use std_parse_metadata::ParseMetadata;
                                                                use std_parse_error::ParseError;
                                                                use pattern_tmf::OrVariableZeroOrMore;
                                                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                                #[derive(Default)]
                                                                pub struct Bak(
                                                                    pub EitherHeapBak<
                                                                        tscapf::Heap,
                                                                        Pair<
                                                                            tscapf::Heap,
                                                                            Set<
                                                                                tscapf::Heap,
                                                                                Either<
                                                                                    tscapf::Heap,
                                                                                    OrVariableZeroOrMore<
                                                                                        tscapf::Heap,
                                                                                        Either<
                                                                                            tscapf::Heap,
                                                                                            Pair<
                                                                                                tscapf::Heap,
                                                                                                tscapf::Nat,
                                                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                            >,
                                                                                            ParseError<tscapf::Heap>,
                                                                                        >,
                                                                                    >,
                                                                                    ParseError<tscapf::Heap>,
                                                                                >,
                                                                            >,
                                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                        >,
                                                                        ParseError<tscapf::Heap>,
                                                                    >,
                                                                );
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod nat_lit {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat_lit::maybe as tscapfhepnlm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfhepnlm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat_lit::maybe::parse_metadata as tscapfhepnlmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfhepnlmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat_lit::maybe::parse_metadata::parse_error as tscapfhepnlmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfhepnlmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use tymetafuncspec_core::BoundedNat;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        BoundedNat<tscapf::Heap>,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod idx_box {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either as tscapfhepibe;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub either: tscapfhepibe::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod either {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair as tscapfhepibep;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub pair: tscapfhepibep::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod pair {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus as tscapfhepibepp;
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f as tscapfhepibepf;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub f: tscapfhepibepf::Bak,
                            pub plus: tscapfhepibepp::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod f {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f::maybe as tscapfhepibepfm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tscapfhepibepfm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata as tscapfhepibepfmpm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tscapfhepibepfmpm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error as tscapfhepibepfmpmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tscapfhepibepfmpmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe as tscapfhepibepfmpmpem;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tscapfhepibepfmpmpem::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhepibepfmpmpempm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tscapfhepibepfmpmpempm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhepibepfmpmpempmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tscapfhepibepfmpmpempmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use tymetafuncspec_core::Pair;
                                                    use tymetafuncspec_core::Maybe;
                                                    use tymetafuncspec_core::IdxBox;
                                                    use tymetafuncspec_core::EitherHeapBak;
                                                    use tymetafuncspec_core::Either;
                                                    use std_parse_metadata::ParseMetadata;
                                                    use std_parse_error::ParseError;
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                    #[derive(Default)]
                                                    pub struct Bak(
                                                        pub EitherHeapBak<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                IdxBox<
                                                                    tscapf::Heap,
                                                                    Either<
                                                                        tscapf::Heap,
                                                                        Pair<
                                                                            tscapf::Heap,
                                                                            tscapf::F,
                                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                        >,
                                                                        ParseError<tscapf::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod plus {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus::maybe as tscapfhepibeppm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tscapfhepibeppm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata as tscapfhepibeppmpm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tscapfhepibeppmpm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error as tscapfhepibeppmpmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tscapfhepibeppmpmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe as tscapfhepibeppmpmpem;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tscapfhepibeppmpmpem::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhepibeppmpmpempm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tscapfhepibeppmpmpempm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhepibeppmpmpempmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tscapfhepibeppmpmpempmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use tymetafuncspec_core::Pair;
                                                    use tymetafuncspec_core::Maybe;
                                                    use tymetafuncspec_core::IdxBox;
                                                    use tymetafuncspec_core::EitherHeapBak;
                                                    use tymetafuncspec_core::Either;
                                                    use std_parse_metadata::ParseMetadata;
                                                    use std_parse_error::ParseError;
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                    #[derive(Default)]
                                                    pub struct Bak(
                                                        pub EitherHeapBak<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                IdxBox<
                                                                    tscapf::Heap,
                                                                    Either<
                                                                        tscapf::Heap,
                                                                        Pair<
                                                                            tscapf::Heap,
                                                                            tscapf::Plus,
                                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                        >,
                                                                        ParseError<tscapf::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod f {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::f::maybe as tscapfhepfm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfhepfm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::f::maybe::parse_metadata as tscapfhepfmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfhepfmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::f::maybe::parse_metadata::parse_error as tscapfhepfmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfhepfmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::F,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod plus {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::plus::maybe as tscapfheppm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfheppm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::plus::maybe::parse_metadata as tscapfheppmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfheppmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::plus::maybe::parse_metadata::parse_error as tscapfheppmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfheppmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::Plus,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod sum {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::sum::maybe as tscapfhepsm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfhepsm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::sum::maybe::parse_metadata as tscapfhepsmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfhepsmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::sum::maybe::parse_metadata::parse_error as tscapfhepsmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfhepsmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::Sum,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod or_variable_zero_or_more {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable_zero_or_more::either as tscapfheovzome;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub either: tscapfheovzome::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod either {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable_zero_or_more::either::pair as tscapfheovzomep;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub pair: tscapfheovzomep::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod pair {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable_zero_or_more::either::pair::nat as tscapfheovzomepn;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub nat: tscapfheovzomepn::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod nat {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable_zero_or_more::either::pair::nat::maybe as tscapfheovzomepnm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tscapfheovzomepnm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfheovzomepnmpm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tscapfheovzomepnmpm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfheovzomepnmpmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tscapfheovzomepnmpmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error as tscapfheovzomepnmpmpepe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tscapfheovzomepnmpmpepe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use tymetafuncspec_core::Pair;
                                        use tymetafuncspec_core::Maybe;
                                        use tymetafuncspec_core::EitherHeapBak;
                                        use tymetafuncspec_core::Either;
                                        use std_parse_metadata::ParseMetadata;
                                        use std_parse_error::ParseError;
                                        use pattern_tmf::OrVariableZeroOrMore;
                                        use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                        /// @generated by [term_specialized_gen::gen_heapbak_module]
                                        #[derive(Default)]
                                        pub struct Bak(
                                            pub EitherHeapBak<
                                                tscapf::Heap,
                                                OrVariableZeroOrMore<
                                                    tscapf::Heap,
                                                    Either<
                                                        tscapf::Heap,
                                                        Pair<
                                                            tscapf::Heap,
                                                            tscapf::Nat,
                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                        >,
                                                        ParseError<tscapf::Heap>,
                                                    >,
                                                >,
                                                ParseError<tscapf::Heap>,
                                            >,
                                        );
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod or_variable {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either as tscapfhove;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub either: tscapfhove::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod either {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair as tscapfhovep;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub pair: tscapfhovep::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod pair {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set as tscapfhoveps;
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::right_operand as tscapfhovepro;
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::nat as tscapfhovepn;
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::left_operand as tscapfhoveplo;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub left_operand: tscapfhoveplo::Bak,
                    pub right_operand: tscapfhovepro::Bak,
                    pub nat: tscapfhovepn::Bak,
                    pub set: tscapfhoveps::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod left_operand {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::left_operand::maybe as tscapfhoveplom;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tscapfhoveplom::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::left_operand::maybe::parse_metadata as tscapfhoveplompm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tscapfhoveplompm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::left_operand::maybe::parse_metadata::parse_error as tscapfhoveplompmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tscapfhoveplompmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use pattern_tmf::OrVariableHeapBak;
                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub OrVariableHeapBak<
                                        tscapf::Heap,
                                        Either<
                                            tscapf::Heap,
                                            Pair<
                                                tscapf::Heap,
                                                tscapf::LeftOperand,
                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                            >,
                                            ParseError<tscapf::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod right_operand {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::right_operand::maybe as tscapfhoveprom;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tscapfhoveprom::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::right_operand::maybe::parse_metadata as tscapfhoveprompm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tscapfhoveprompm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::right_operand::maybe::parse_metadata::parse_error as tscapfhoveprompmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tscapfhoveprompmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use pattern_tmf::OrVariableHeapBak;
                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub OrVariableHeapBak<
                                        tscapf::Heap,
                                        Either<
                                            tscapf::Heap,
                                            Pair<
                                                tscapf::Heap,
                                                tscapf::RightOperand,
                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                            >,
                                            ParseError<tscapf::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod nat {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::nat::maybe as tscapfhovepnm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tscapfhovepnm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::nat::maybe::parse_metadata as tscapfhovepnmpm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tscapfhovepnmpm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhovepnmpmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tscapfhovepnmpmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use pattern_tmf::OrVariableHeapBak;
                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub OrVariableHeapBak<
                                        tscapf::Heap,
                                        Either<
                                            tscapf::Heap,
                                            Pair<
                                                tscapf::Heap,
                                                tscapf::Nat,
                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                            >,
                                            ParseError<tscapf::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod set {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either as tscapfhovepse;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub either: tscapfhovepse::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod either {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::or_variable_zero_or_more as tscapfhovepseovzom;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub or_variable_zero_or_more: tscapfhovepseovzom::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod or_variable_zero_or_more {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::or_variable_zero_or_more::either as tscapfhovepseovzome;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub either: tscapfhovepseovzome::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod either {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair as tscapfhovepseovzomep;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub pair: tscapfhovepseovzomep::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod pair {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat as tscapfhovepseovzomepn;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub nat: tscapfhovepseovzomepn::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod nat {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhovepseovzomepnm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tscapfhovepseovzomepnm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhovepseovzomepnmpm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tscapfhovepseovzomepnmpm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhovepseovzomepnmpmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tscapfhovepseovzomepnmpmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error as tscapfhovepseovzomepnmpmpepe;
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    #[derive(Default)]
                                                    pub struct Bak {
                                                        pub parse_error: tscapfhovepseovzomepnmpmpepe::Bak,
                                                    }
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    pub mod parse_error {
                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error::maybe as tscapfhovepseovzomepnmpmpepem;
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        #[derive(Default)]
                                                        pub struct Bak {
                                                            pub maybe: tscapfhovepseovzomepnmpmpepem::Bak,
                                                        }
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        pub mod maybe {
                                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error::maybe::parse_metadata as tscapfhovepseovzomepnmpmpepempm;
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            #[derive(Default)]
                                                            pub struct Bak {
                                                                pub parse_metadata: tscapfhovepseovzomepnmpmpepempm::Bak,
                                                            }
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            pub mod parse_metadata {
                                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error::maybe::parse_metadata::parse_error as tscapfhovepseovzomepnmpmpepempmpe;
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                #[derive(Default)]
                                                                pub struct Bak {
                                                                    pub parse_error: tscapfhovepseovzomepnmpmpepempmpe::Bak,
                                                                }
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                pub mod parse_error {
                                                                    use tymetafuncspec_core::Set;
                                                                    use tymetafuncspec_core::Pair;
                                                                    use tymetafuncspec_core::Maybe;
                                                                    use tymetafuncspec_core::Either;
                                                                    use std_parse_metadata::ParseMetadata;
                                                                    use std_parse_error::ParseError;
                                                                    use pattern_tmf::OrVariableZeroOrMore;
                                                                    use pattern_tmf::OrVariableHeapBak;
                                                                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                                    #[derive(Default)]
                                                                    pub struct Bak(
                                                                        pub OrVariableHeapBak<
                                                                            tscapf::Heap,
                                                                            Either<
                                                                                tscapf::Heap,
                                                                                Pair<
                                                                                    tscapf::Heap,
                                                                                    Set<
                                                                                        tscapf::Heap,
                                                                                        Either<
                                                                                            tscapf::Heap,
                                                                                            OrVariableZeroOrMore<
                                                                                                tscapf::Heap,
                                                                                                Either<
                                                                                                    tscapf::Heap,
                                                                                                    Pair<
                                                                                                        tscapf::Heap,
                                                                                                        tscapf::Nat,
                                                                                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                    >,
                                                                                                    ParseError<tscapf::Heap>,
                                                                                                >,
                                                                                            >,
                                                                                            ParseError<tscapf::Heap>,
                                                                                        >,
                                                                                    >,
                                                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                >,
                                                                                ParseError<tscapf::Heap>,
                                                                            >,
                                                                        >,
                                                                    );
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod pair {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set as tscapfhps;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::right_operand as tscapfhpro;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::plus as tscapfhpp;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::nat_lit as tscapfhpnl;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::nat as tscapfhpn;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::left_operand as tscapfhplo;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box as tscapfhpib;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::f as tscapfhpf;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub left_operand: tscapfhplo::Bak,
            pub right_operand: tscapfhpro::Bak,
            pub nat: tscapfhpn::Bak,
            pub set: tscapfhps::Bak,
            pub nat_lit: tscapfhpnl::Bak,
            pub idx_box: tscapfhpib::Bak,
            pub f: tscapfhpf::Bak,
            pub plus: tscapfhpp::Bak,
            pub sum: crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::sum::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod left_operand {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::left_operand::maybe as tscapfhplom;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhplom::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::left_operand::maybe::parse_metadata as tscapfhplompm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhplompm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            tscapf::LeftOperand,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod right_operand {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::right_operand::maybe as tscapfhprom;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhprom::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::right_operand::maybe::parse_metadata as tscapfhprompm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhprompm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            tscapf::RightOperand,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod nat {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::nat::maybe as tscapfhpnm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhpnm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::nat::maybe::parse_metadata as tscapfhpnmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhpnmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            tscapf::Nat,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod set {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either as tscapfhpse;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub either: tscapfhpse::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod either {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::or_variable_zero_or_more as tscapfhpseovzom;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub or_variable_zero_or_more: tscapfhpseovzom::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod or_variable_zero_or_more {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::or_variable_zero_or_more::either as tscapfhpseovzome;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub either: tscapfhpseovzome::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod either {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::or_variable_zero_or_more::either::pair as tscapfhpseovzomep;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub pair: tscapfhpseovzomep::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod pair {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::or_variable_zero_or_more::either::pair::nat as tscapfhpseovzomepn;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub nat: tscapfhpseovzomepn::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod nat {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhpseovzomepnm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub maybe: tscapfhpseovzomepnm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod maybe {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhpseovzomepnmpm;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_metadata: tscapfhpseovzomepnmpm::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_metadata {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhpseovzomepnmpmpe;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_error: tscapfhpseovzomepnmpmpe::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_error {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error as tscapfhpseovzomepnmpmpepe;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_error: tscapfhpseovzomepnmpmpepe::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_error {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error::maybe as tscapfhpseovzomepnmpmpepem;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub maybe: tscapfhpseovzomepnmpmpepem::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod maybe {
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error::maybe::parse_metadata as tscapfhpseovzomepnmpmpepempm;
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    #[derive(Default)]
                                                    pub struct Bak {
                                                        pub parse_metadata: tscapfhpseovzomepnmpmpepempm::Bak,
                                                    }
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    pub mod parse_metadata {
                                                        use tymetafuncspec_core::Set;
                                                        use tymetafuncspec_core::PairHeapBak;
                                                        use tymetafuncspec_core::Pair;
                                                        use tymetafuncspec_core::Maybe;
                                                        use tymetafuncspec_core::Either;
                                                        use std_parse_metadata::ParseMetadata;
                                                        use std_parse_error::ParseError;
                                                        use pattern_tmf::OrVariableZeroOrMore;
                                                        use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                        /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                        #[derive(Default)]
                                                        pub struct Bak(
                                                            pub PairHeapBak<
                                                                tscapf::Heap,
                                                                Set<
                                                                    tscapf::Heap,
                                                                    Either<
                                                                        tscapf::Heap,
                                                                        OrVariableZeroOrMore<
                                                                            tscapf::Heap,
                                                                            Either<
                                                                                tscapf::Heap,
                                                                                Pair<
                                                                                    tscapf::Heap,
                                                                                    tscapf::Nat,
                                                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                >,
                                                                                ParseError<tscapf::Heap>,
                                                                            >,
                                                                        >,
                                                                        ParseError<tscapf::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                        );
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod nat_lit {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::nat_lit::maybe as tscapfhpnlm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhpnlm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::nat_lit::maybe::parse_metadata as tscapfhpnlmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhpnlmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use tymetafuncspec_core::BoundedNat;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            BoundedNat<tscapf::Heap>,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod idx_box {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either as tscapfhpibe;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub either: tscapfhpibe::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod either {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair as tscapfhpibep;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub pair: tscapfhpibep::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod pair {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::plus as tscapfhpibepp;
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::f as tscapfhpibepf;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub f: tscapfhpibepf::Bak,
                        pub plus: tscapfhpibepp::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod f {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::f::maybe as tscapfhpibepfm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tscapfhpibepfm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::f::maybe::parse_metadata as tscapfhpibepfmpm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tscapfhpibepfmpm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error as tscapfhpibepfmpmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tscapfhpibepfmpmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe as tscapfhpibepfmpmpem;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tscapfhpibepfmpmpem::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhpibepfmpmpempm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tscapfhpibepfmpmpempm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use tymetafuncspec_core::PairHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::IdxBox;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub PairHeapBak<
                                                    tscapf::Heap,
                                                    IdxBox<
                                                        tscapf::Heap,
                                                        Either<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                tscapf::F,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    >,
                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod plus {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::plus::maybe as tscapfhpibeppm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tscapfhpibeppm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata as tscapfhpibeppmpm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tscapfhpibeppmpm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error as tscapfhpibeppmpmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tscapfhpibeppmpmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe as tscapfhpibeppmpmpem;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tscapfhpibeppmpmpem::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhpibeppmpmpempm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tscapfhpibeppmpmpempm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use tymetafuncspec_core::PairHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::IdxBox;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub PairHeapBak<
                                                    tscapf::Heap,
                                                    IdxBox<
                                                        tscapf::Heap,
                                                        Either<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                tscapf::Plus,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    >,
                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod f {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::f::maybe as tscapfhpfm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhpfm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::f::maybe::parse_metadata as tscapfhpfmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhpfmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            tscapf::F,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod plus {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::plus::maybe as tscapfhppm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhppm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::plus::maybe::parse_metadata as tscapfhppmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhppmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            tscapf::Plus,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod sum {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::sum::maybe as tscapfhpsm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhpsm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::sum::maybe::parse_metadata as tscapfhpsmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhpsmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            tscapf::Sum,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod maybe {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::maybe::parse_metadata as tscapfhmpm;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub parse_metadata: tscapfhmpm::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod parse_metadata {
            use tymetafuncspec_core::MaybeHeapBak;
            use std_parse_metadata::ParseMetadata;
            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
            /// @generated by [term_specialized_gen::gen_heapbak_module]
            #[derive(Default)]
            pub struct Bak(pub MaybeHeapBak<tscapf::Heap, ParseMetadata<tscapf::Heap>>);
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod parse_metadata {
        use std_parse_metadata::ParseMetadataBak;
        use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub ParseMetadataBak<tscapf::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod parse_error {
        use std_parse_error::ParseErrorBak;
        use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub ParseErrorBak<tscapf::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod set {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either as tscapfhse;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub either: tscapfhse::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod either {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::or_variable_zero_or_more as tscapfhseovzom;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub or_variable_zero_or_more: tscapfhseovzom::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod or_variable_zero_or_more {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::or_variable_zero_or_more::either as tscapfhseovzome;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub either: tscapfhseovzome::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod either {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::or_variable_zero_or_more::either::pair as tscapfhseovzomep;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub pair: tscapfhseovzomep::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod pair {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::or_variable_zero_or_more::either::pair::nat as tscapfhseovzomepn;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub nat: tscapfhseovzomepn::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod nat {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhseovzomepnm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tscapfhseovzomepnm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhseovzomepnmpm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tscapfhseovzomepnmpm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhseovzomepnmpmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tscapfhseovzomepnmpmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::parse_error as tscapfhseovzomepnmpmpepe;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_error: tscapfhseovzomepnmpmpepe::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_error {
                                            use tymetafuncspec_core::SetHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use pattern_tmf::OrVariableZeroOrMore;
                                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub SetHeapBak<
                                                    tscapf::Heap,
                                                    Either<
                                                        tscapf::Heap,
                                                        OrVariableZeroOrMore<
                                                            tscapf::Heap,
                                                            Either<
                                                                tscapf::Heap,
                                                                Pair<
                                                                    tscapf::Heap,
                                                                    tscapf::Nat,
                                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                >,
                                                                ParseError<tscapf::Heap>,
                                                            >,
                                                        >,
                                                        ParseError<tscapf::Heap>,
                                                    >,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod or_variable_zero_or_more {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more::either as tscapfhovzome;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub either: tscapfhovzome::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod either {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more::either::pair as tscapfhovzomep;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub pair: tscapfhovzomep::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod pair {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more::either::pair::nat as tscapfhovzomepn;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub nat: tscapfhovzomepn::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod nat {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhovzomepnm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tscapfhovzomepnm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhovzomepnmpm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tscapfhovzomepnmpm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhovzomepnmpmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tscapfhovzomepnmpmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use pattern_tmf::OrVariableZeroOrMoreHeapBak;
                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub OrVariableZeroOrMoreHeapBak<
                                        tscapf::Heap,
                                        Either<
                                            tscapf::Heap,
                                            Pair<
                                                tscapf::Heap,
                                                tscapf::Nat,
                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                            >,
                                            ParseError<tscapf::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod nat_lit {
        use tymetafuncspec_core::BoundedNatHeapBak;
        use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub BoundedNatHeapBak<tscapf::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod idx_box {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either as tscapfhibe;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub either: tscapfhibe::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod either {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair as tscapfhibep;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub pair: tscapfhibep::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod pair {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::plus as tscapfhibepp;
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::f as tscapfhibepf;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub f: tscapfhibepf::Bak,
                    pub plus: tscapfhibepp::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod f {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::f::maybe as tscapfhibepfm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tscapfhibepfm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::f::maybe::parse_metadata as tscapfhibepfmpm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tscapfhibepfmpm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::f::maybe::parse_metadata::parse_error as tscapfhibepfmpmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tscapfhibepfmpmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::IdxBoxHeapBak;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub IdxBoxHeapBak<
                                        tscapf::Heap,
                                        Either<
                                            tscapf::Heap,
                                            Pair<
                                                tscapf::Heap,
                                                tscapf::F,
                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                            >,
                                            ParseError<tscapf::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod plus {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::plus::maybe as tscapfhibeppm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tscapfhibeppm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::plus::maybe::parse_metadata as tscapfhibeppmpm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tscapfhibeppmpm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::plus::maybe::parse_metadata::parse_error as tscapfhibeppmpmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tscapfhibeppmpmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::IdxBoxHeapBak;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub IdxBoxHeapBak<
                                        tscapf::Heap,
                                        Either<
                                            tscapf::Heap,
                                            Pair<
                                                tscapf::Heap,
                                                tscapf::Plus,
                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                            >,
                                            ParseError<tscapf::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
            }
        }
    }
}
/// @generated by [term_specialized_gen::gen_heap]
pub mod superheap {
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, pattern_tmf::OrVariable <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::LeftOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either or_variable
        either pair left_operand maybe parse_metadata parse_error parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        pattern_tmf::OrVariableHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::LeftOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; or_variable either
        pair left_operand maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::LeftOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair left_operand
        maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::LeftOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair left_operand
        maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::MaybeHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        std_parse_metadata::ParseMetadataBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >; parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        std_parse_error::ParseErrorBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >; parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, pattern_tmf::OrVariable <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::RightOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either or_variable
        either pair right_operand maybe parse_metadata parse_error parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        pattern_tmf::OrVariableHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::RightOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; or_variable either
        pair right_operand maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::RightOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair
        right_operand maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::RightOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair right_operand
        maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, pattern_tmf::OrVariable <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either or_variable
        either pair nat maybe parse_metadata parse_error parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        pattern_tmf::OrVariableHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; or_variable either
        pair nat maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair nat maybe
        parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair nat maybe
        parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, pattern_tmf::OrVariable <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Set < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either or_variable
        either pair set either or_variable_zero_or_more either pair nat maybe
        parse_metadata parse_error parse_error maybe parse_metadata parse_error
        parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        pattern_tmf::OrVariableHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Set <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; or_variable either
        pair set either or_variable_zero_or_more either pair nat maybe parse_metadata
        parse_error parse_error maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Set < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair set either
        or_variable_zero_or_more either pair nat maybe parse_metadata parse_error
        parse_error maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Set <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair set either
        or_variable_zero_or_more either pair nat maybe parse_metadata parse_error
        parse_error maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::SetHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; set either
        or_variable_zero_or_more either pair nat maybe parse_metadata parse_error
        parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either
        or_variable_zero_or_more either pair nat maybe parse_metadata parse_error
        parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        pattern_tmf::OrVariableZeroOrMoreHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >;
        or_variable_zero_or_more either pair nat maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::BoundedNat < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, tymetafuncspec_core::Maybe
        < crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair nat_lit
        maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::BoundedNat < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, tymetafuncspec_core::Maybe
        < crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair nat_lit maybe
        parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::BoundedNatHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >; nat_lit
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::IdxBox < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::F, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair idx_box
        either pair f maybe parse_metadata parse_error maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::IdxBox <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::F, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair idx_box either
        pair f maybe parse_metadata parse_error maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::IdxBoxHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::F, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; idx_box either pair f
        maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::F, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair f maybe
        parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::F, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair f maybe
        parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::IdxBox < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Plus, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair idx_box
        either pair plus maybe parse_metadata parse_error maybe parse_metadata
        parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::IdxBox <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Plus, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair idx_box either
        pair plus maybe parse_metadata parse_error maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::IdxBoxHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Plus, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; idx_box either pair
        plus maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Plus, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair plus maybe
        parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Plus, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair plus maybe
        parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Sum, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair sum maybe
        parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Sum, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair sum maybe
        parse_metadata
    );
}
#[derive(Clone, Copy)]
pub struct Plus {
    pub left_operand: Either<
        tscapf::Heap,
        OrVariable<
            tscapf::Heap,
            Either<
                tscapf::Heap,
                Pair<
                    tscapf::Heap,
                    tscapf::LeftOperand,
                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                >,
                ParseError<tscapf::Heap>,
            >,
        >,
        ParseError<tscapf::Heap>,
    >,
    pub right_operand: Either<
        tscapf::Heap,
        OrVariable<
            tscapf::Heap,
            Either<
                tscapf::Heap,
                Pair<
                    tscapf::Heap,
                    tscapf::RightOperand,
                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                >,
                ParseError<tscapf::Heap>,
            >,
        >,
        ParseError<tscapf::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub struct LeftOperand {
    pub nat: Either<
        tscapf::Heap,
        OrVariable<
            tscapf::Heap,
            Either<
                tscapf::Heap,
                Pair<
                    tscapf::Heap,
                    tscapf::Nat,
                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                >,
                ParseError<tscapf::Heap>,
            >,
        >,
        ParseError<tscapf::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub struct RightOperand {
    pub nat: Either<
        tscapf::Heap,
        OrVariable<
            tscapf::Heap,
            Either<
                tscapf::Heap,
                Pair<
                    tscapf::Heap,
                    tscapf::Nat,
                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                >,
                ParseError<tscapf::Heap>,
            >,
        >,
        ParseError<tscapf::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub struct F {
    pub nat: Either<
        tscapf::Heap,
        OrVariable<
            tscapf::Heap,
            Either<
                tscapf::Heap,
                Pair<
                    tscapf::Heap,
                    tscapf::Nat,
                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                >,
                ParseError<tscapf::Heap>,
            >,
        >,
        ParseError<tscapf::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub struct Sum {
    pub set: Either<
        tscapf::Heap,
        OrVariable<
            tscapf::Heap,
            Either<
                tscapf::Heap,
                Pair<
                    tscapf::Heap,
                    Set<
                        tscapf::Heap,
                        Either<
                            tscapf::Heap,
                            OrVariableZeroOrMore<
                                tscapf::Heap,
                                Either<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::Nat,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            >,
                            ParseError<tscapf::Heap>,
                        >,
                    >,
                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                >,
                ParseError<tscapf::Heap>,
            >,
        >,
        ParseError<tscapf::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub enum Nat {
    NatLit(
        Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                BoundedNat<tscapf::Heap>,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >,
    ),
    F(
        Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                IdxBox<
                    tscapf::Heap,
                    Either<
                        tscapf::Heap,
                        Pair<
                            tscapf::Heap,
                            tscapf::F,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                        ParseError<tscapf::Heap>,
                    >,
                >,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >,
    ),
    Plus(
        Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                IdxBox<
                    tscapf::Heap,
                    Either<
                        tscapf::Heap,
                        Pair<
                            tscapf::Heap,
                            tscapf::Plus,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                        ParseError<tscapf::Heap>,
                    >,
                >,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >,
    ),
    Sum(
        Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                tscapf::Sum,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >,
    ),
}
/// @generated by [term_specialized_gen::gen_heaped_impls]
pub mod heaped {
    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tscapf::Plus {
        type Heap = tscapf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tscapf::LeftOperand {
        type Heap = tscapf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tscapf::RightOperand {
        type Heap = tscapf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tscapf::F {
        type Heap = tscapf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tscapf::Sum {
        type Heap = tscapf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tscapf::Nat {
        type Heap = tscapf::Heap;
    }
}
