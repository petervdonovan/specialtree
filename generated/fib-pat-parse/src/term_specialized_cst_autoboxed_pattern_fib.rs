#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [term_specialized_gen::generate]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::Pair;
use tymetafuncspec_core::Maybe;
use tymetafuncspec_core::IdxBox;
use tymetafuncspec_core::Either;
use tymetafuncspec_core::BoundedNat;
use std_parse_metadata::ParseMetadata;
use std_parse_error::ParseError;
use pattern_tmf::OrVariableZeroOrMore;
use pattern_tmf::OrVariable;
use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set as tscapfhs;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::parse_metadata as tscapfhpm;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::parse_error as tscapfhpe;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair as tscapfhp;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more as tscapfhovzom;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable as tscapfhov;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::nat_lit as tscapfhnl;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::maybe as tscapfhm;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box as tscapfhib;
use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either as tscapfhe;
/// @generated by [term_specialized_gen::gen_heap]
#[derive(Default)]
pub struct Heap {
    either: tscapfhe::Bak,
    pair: tscapfhp::Bak,
    or_variable: tscapfhov::Bak,
    maybe: tscapfhm::Bak,
    parse_metadata: tscapfhpm::Bak,
    parse_error: tscapfhpe::Bak,
    set: tscapfhs::Bak,
    or_variable_zero_or_more: tscapfhovzom::Bak,
    nat_lit: tscapfhnl::Bak,
    idx_box: tscapfhib::Bak,
}
/// @generated by [term_specialized_gen::gen_heap]
pub mod heap {
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set as tscapfhs;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::parse_metadata as tscapfhpm;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::parse_error as tscapfhpe;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair as tscapfhp;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more as tscapfhovzom;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable as tscapfhov;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::nat_lit as tscapfhnl;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::maybe as tscapfhm;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box as tscapfhib;
    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either as tscapfhe;
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    #[derive(Default)]
    pub struct Bak {
        pub either: tscapfhe::Bak,
        pub pair: tscapfhp::Bak,
        pub or_variable: tscapfhov::Bak,
        pub maybe: tscapfhm::Bak,
        pub parse_metadata: tscapfhpm::Bak,
        pub parse_error: tscapfhpe::Bak,
        pub set: tscapfhs::Bak,
        pub or_variable_zero_or_more: tscapfhovzom::Bak,
        pub nat_lit: tscapfhnl::Bak,
        pub idx_box: tscapfhib::Bak,
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod either {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair as tscapfhep;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub pair: tscapfhep::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod pair {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set as tscapfheps;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::right_operand as tscapfhepro;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::plus as tscapfhepp;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable_zero_or_more as tscapfhepovzom;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable as tscapfhepov;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat_lit as tscapfhepnl;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat as tscapfhepn;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::left_operand as tscapfheplo;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box as tscapfhepib;
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::f as tscapfhepf;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub or_variable: tscapfhepov::Bak,
                pub left_operand: tscapfheplo::Bak,
                pub right_operand: tscapfhepro::Bak,
                pub nat: tscapfhepn::Bak,
                pub set: tscapfheps::Bak,
                pub or_variable_zero_or_more: tscapfhepovzom::Bak,
                pub nat_lit: tscapfhepnl::Bak,
                pub idx_box: tscapfhepib::Bak,
                pub f: tscapfhepf::Bak,
                pub plus: tscapfhepp::Bak,
                pub sum: crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::sum::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod or_variable {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either as tscapfhepove;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub either: tscapfhepove::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod either {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair as tscapfhepovep;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub pair: tscapfhepovep::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod pair {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set as tscapfhepoveps;
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::right_operand as tscapfhepovepro;
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::nat as tscapfhepovepn;
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::left_operand as tscapfhepoveplo;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub left_operand: tscapfhepoveplo::Bak,
                            pub right_operand: tscapfhepovepro::Bak,
                            pub nat: tscapfhepovepn::Bak,
                            pub set: tscapfhepoveps::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod left_operand {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::left_operand::maybe as tscapfhepoveplom;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tscapfhepoveplom::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::left_operand::maybe::parse_metadata as tscapfhepoveplompm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tscapfhepoveplompm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::left_operand::maybe::parse_metadata::parse_error as tscapfhepoveplompmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tscapfhepoveplompmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::left_operand::maybe::parse_metadata::parse_error::maybe as tscapfhepoveplompmpem;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tscapfhepoveplompmpem::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::left_operand::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhepoveplompmpempm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tscapfhepoveplompmpempm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::left_operand::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhepoveplompmpempmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tscapfhepoveplompmpempmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use tymetafuncspec_core::Pair;
                                                    use tymetafuncspec_core::Maybe;
                                                    use tymetafuncspec_core::EitherHeapBak;
                                                    use tymetafuncspec_core::Either;
                                                    use std_parse_metadata::ParseMetadata;
                                                    use std_parse_error::ParseError;
                                                    use pattern_tmf::OrVariable;
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                    #[derive(Default)]
                                                    pub struct Bak(
                                                        pub EitherHeapBak<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                OrVariable<
                                                                    tscapf::Heap,
                                                                    Either<
                                                                        tscapf::Heap,
                                                                        Pair<
                                                                            tscapf::Heap,
                                                                            tscapf::LeftOperand,
                                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                        >,
                                                                        ParseError<tscapf::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod right_operand {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::right_operand::maybe as tscapfhepoveprom;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tscapfhepoveprom::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::right_operand::maybe::parse_metadata as tscapfhepoveprompm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tscapfhepoveprompm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::right_operand::maybe::parse_metadata::parse_error as tscapfhepoveprompmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tscapfhepoveprompmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::right_operand::maybe::parse_metadata::parse_error::maybe as tscapfhepoveprompmpem;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tscapfhepoveprompmpem::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::right_operand::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhepoveprompmpempm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tscapfhepoveprompmpempm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::right_operand::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhepoveprompmpempmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tscapfhepoveprompmpempmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use tymetafuncspec_core::Pair;
                                                    use tymetafuncspec_core::Maybe;
                                                    use tymetafuncspec_core::EitherHeapBak;
                                                    use tymetafuncspec_core::Either;
                                                    use std_parse_metadata::ParseMetadata;
                                                    use std_parse_error::ParseError;
                                                    use pattern_tmf::OrVariable;
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                    #[derive(Default)]
                                                    pub struct Bak(
                                                        pub EitherHeapBak<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                OrVariable<
                                                                    tscapf::Heap,
                                                                    Either<
                                                                        tscapf::Heap,
                                                                        Pair<
                                                                            tscapf::Heap,
                                                                            tscapf::RightOperand,
                                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                        >,
                                                                        ParseError<tscapf::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod nat {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::nat::maybe as tscapfhepovepnm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tscapfhepovepnm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::nat::maybe::parse_metadata as tscapfhepovepnmpm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tscapfhepovepnmpm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhepovepnmpmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tscapfhepovepnmpmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::nat::maybe::parse_metadata::parse_error::maybe as tscapfhepovepnmpmpem;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tscapfhepovepnmpmpem::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhepovepnmpmpempm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tscapfhepovepnmpmpempm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhepovepnmpmpempmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tscapfhepovepnmpmpempmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use tymetafuncspec_core::Pair;
                                                    use tymetafuncspec_core::Maybe;
                                                    use tymetafuncspec_core::EitherHeapBak;
                                                    use tymetafuncspec_core::Either;
                                                    use std_parse_metadata::ParseMetadata;
                                                    use std_parse_error::ParseError;
                                                    use pattern_tmf::OrVariable;
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                    #[derive(Default)]
                                                    pub struct Bak(
                                                        pub EitherHeapBak<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                OrVariable<
                                                                    tscapf::Heap,
                                                                    Either<
                                                                        tscapf::Heap,
                                                                        Pair<
                                                                            tscapf::Heap,
                                                                            tscapf::Nat,
                                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                        >,
                                                                        ParseError<tscapf::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod set {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either as tscapfhepovepse;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub either: tscapfhepovepse::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod either {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair as tscapfhepovepsep;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub pair: tscapfhepovepsep::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod pair {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more as tscapfhepovepsepovzom;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub or_variable_zero_or_more: tscapfhepovepsepovzom::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod or_variable_zero_or_more {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either as tscapfhepovepsepovzome;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub either: tscapfhepovepsepovzome::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod either {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair as tscapfhepovepsepovzomep;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub pair: tscapfhepovepsepovzomep::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod pair {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat as tscapfhepovepsepovzomepn;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub nat: tscapfhepovepsepovzomepn::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod nat {
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhepovepsepovzomepnm;
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    #[derive(Default)]
                                                    pub struct Bak {
                                                        pub maybe: tscapfhepovepsepovzomepnm::Bak,
                                                    }
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    pub mod maybe {
                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhepovepsepovzomepnmpm;
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        #[derive(Default)]
                                                        pub struct Bak {
                                                            pub parse_metadata: tscapfhepovepsepovzomepnmpm::Bak,
                                                        }
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        pub mod parse_metadata {
                                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhepovepsepovzomepnmpmpe;
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            #[derive(Default)]
                                                            pub struct Bak {
                                                                pub parse_error: tscapfhepovepsepovzomepnmpmpe::Bak,
                                                            }
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            pub mod parse_error {
                                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe as tscapfhepovepsepovzomepnmpmpem;
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                #[derive(Default)]
                                                                pub struct Bak {
                                                                    pub maybe: tscapfhepovepsepovzomepnmpmpem::Bak,
                                                                }
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                pub mod maybe {
                                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhepovepsepovzomepnmpmpempm;
                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                    #[derive(Default)]
                                                                    pub struct Bak {
                                                                        pub parse_metadata: tscapfhepovepsepovzomepnmpmpempm::Bak,
                                                                    }
                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                    pub mod parse_metadata {
                                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhepovepsepovzomepnmpmpempmpe;
                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                        #[derive(Default)]
                                                                        pub struct Bak {
                                                                            pub parse_error: tscapfhepovepsepovzomepnmpmpempmpe::Bak,
                                                                        }
                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                        pub mod parse_error {
                                                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe as tscapfhepovepsepovzomepnmpmpempmpem;
                                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                            #[derive(Default)]
                                                                            pub struct Bak {
                                                                                pub maybe: tscapfhepovepsepovzomepnmpmpempmpem::Bak,
                                                                            }
                                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                            pub mod maybe {
                                                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhepovepsepovzomepnmpmpempmpempm;
                                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                #[derive(Default)]
                                                                                pub struct Bak {
                                                                                    pub parse_metadata: tscapfhepovepsepovzomepnmpmpempmpempm::Bak,
                                                                                }
                                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                pub mod parse_metadata {
                                                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhepovepsepovzomepnmpmpempmpempmpe;
                                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                    #[derive(Default)]
                                                                                    pub struct Bak {
                                                                                        pub parse_error: tscapfhepovepsepovzomepnmpmpempmpempmpe::Bak,
                                                                                    }
                                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                    pub mod parse_error {
                                                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe as tscapfhepovepsepovzomepnmpmpempmpempmpem;
                                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                        #[derive(Default)]
                                                                                        pub struct Bak {
                                                                                            pub maybe: tscapfhepovepsepovzomepnmpmpempmpempmpem::Bak,
                                                                                        }
                                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                        pub mod maybe {
                                                                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhepovepsepovzomepnmpmpempmpempmpempm;
                                                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                            #[derive(Default)]
                                                                                            pub struct Bak {
                                                                                                pub parse_metadata: tscapfhepovepsepovzomepnmpmpempmpempmpempm::Bak,
                                                                                            }
                                                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                            pub mod parse_metadata {
                                                                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhepovepsepovzomepnmpmpempmpempmpempmpe;
                                                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                                #[derive(Default)]
                                                                                                pub struct Bak {
                                                                                                    pub parse_error: tscapfhepovepsepovzomepnmpmpempmpempmpempmpe::Bak,
                                                                                                }
                                                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                                pub mod parse_error {
                                                                                                    use tymetafuncspec_core::Set;
                                                                                                    use tymetafuncspec_core::Pair;
                                                                                                    use tymetafuncspec_core::Maybe;
                                                                                                    use tymetafuncspec_core::EitherHeapBak;
                                                                                                    use tymetafuncspec_core::Either;
                                                                                                    use std_parse_metadata::ParseMetadata;
                                                                                                    use std_parse_error::ParseError;
                                                                                                    use pattern_tmf::OrVariableZeroOrMore;
                                                                                                    use pattern_tmf::OrVariable;
                                                                                                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                                                                    #[derive(Default)]
                                                                                                    pub struct Bak(
                                                                                                        pub EitherHeapBak<
                                                                                                            tscapf::Heap,
                                                                                                            Pair<
                                                                                                                tscapf::Heap,
                                                                                                                OrVariable<
                                                                                                                    tscapf::Heap,
                                                                                                                    Either<
                                                                                                                        tscapf::Heap,
                                                                                                                        Pair<
                                                                                                                            tscapf::Heap,
                                                                                                                            Set<
                                                                                                                                tscapf::Heap,
                                                                                                                                Either<
                                                                                                                                    tscapf::Heap,
                                                                                                                                    Pair<
                                                                                                                                        tscapf::Heap,
                                                                                                                                        OrVariableZeroOrMore<
                                                                                                                                            tscapf::Heap,
                                                                                                                                            Either<
                                                                                                                                                tscapf::Heap,
                                                                                                                                                Pair<
                                                                                                                                                    tscapf::Heap,
                                                                                                                                                    tscapf::Nat,
                                                                                                                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                                                                >,
                                                                                                                                                ParseError<tscapf::Heap>,
                                                                                                                                            >,
                                                                                                                                        >,
                                                                                                                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                                                    >,
                                                                                                                                    ParseError<tscapf::Heap>,
                                                                                                                                >,
                                                                                                                            >,
                                                                                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                                        >,
                                                                                                                        ParseError<tscapf::Heap>,
                                                                                                                    >,
                                                                                                                >,
                                                                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                            >,
                                                                                                            ParseError<tscapf::Heap>,
                                                                                                        >,
                                                                                                    );
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod left_operand {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::left_operand::maybe as tscapfheplom;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfheplom::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::left_operand::maybe::parse_metadata as tscapfheplompm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfheplompm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::left_operand::maybe::parse_metadata::parse_error as tscapfheplompmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfheplompmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::LeftOperand,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod right_operand {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::right_operand::maybe as tscapfheprom;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfheprom::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::right_operand::maybe::parse_metadata as tscapfheprompm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfheprompm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::right_operand::maybe::parse_metadata::parse_error as tscapfheprompmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfheprompmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::RightOperand,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod nat {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat::maybe as tscapfhepnm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfhepnm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat::maybe::parse_metadata as tscapfhepnmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfhepnmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhepnmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfhepnmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::Nat,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod set {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either as tscapfhepse;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub either: tscapfhepse::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod either {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair as tscapfhepsep;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub pair: tscapfhepsep::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod pair {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair::or_variable_zero_or_more as tscapfhepsepovzom;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub or_variable_zero_or_more: tscapfhepsepovzom::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod or_variable_zero_or_more {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair::or_variable_zero_or_more::either as tscapfhepsepovzome;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub either: tscapfhepsepovzome::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod either {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair::or_variable_zero_or_more::either::pair as tscapfhepsepovzomep;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub pair: tscapfhepsepovzomep::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod pair {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat as tscapfhepsepovzomepn;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub nat: tscapfhepsepovzomepn::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod nat {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhepsepovzomepnm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tscapfhepsepovzomepnm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhepsepovzomepnmpm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tscapfhepsepovzomepnmpm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhepsepovzomepnmpmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tscapfhepsepovzomepnmpmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe as tscapfhepsepovzomepnmpmpem;
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    #[derive(Default)]
                                                    pub struct Bak {
                                                        pub maybe: tscapfhepsepovzomepnmpmpem::Bak,
                                                    }
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    pub mod maybe {
                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhepsepovzomepnmpmpempm;
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        #[derive(Default)]
                                                        pub struct Bak {
                                                            pub parse_metadata: tscapfhepsepovzomepnmpmpempm::Bak,
                                                        }
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        pub mod parse_metadata {
                                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhepsepovzomepnmpmpempmpe;
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            #[derive(Default)]
                                                            pub struct Bak {
                                                                pub parse_error: tscapfhepsepovzomepnmpmpempmpe::Bak,
                                                            }
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            pub mod parse_error {
                                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe as tscapfhepsepovzomepnmpmpempmpem;
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                #[derive(Default)]
                                                                pub struct Bak {
                                                                    pub maybe: tscapfhepsepovzomepnmpmpempmpem::Bak,
                                                                }
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                pub mod maybe {
                                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhepsepovzomepnmpmpempmpempm;
                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                    #[derive(Default)]
                                                                    pub struct Bak {
                                                                        pub parse_metadata: tscapfhepsepovzomepnmpmpempmpempm::Bak,
                                                                    }
                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                    pub mod parse_metadata {
                                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhepsepovzomepnmpmpempmpempmpe;
                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                        #[derive(Default)]
                                                                        pub struct Bak {
                                                                            pub parse_error: tscapfhepsepovzomepnmpmpempmpempmpe::Bak,
                                                                        }
                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                        pub mod parse_error {
                                                                            use tymetafuncspec_core::Set;
                                                                            use tymetafuncspec_core::Pair;
                                                                            use tymetafuncspec_core::Maybe;
                                                                            use tymetafuncspec_core::EitherHeapBak;
                                                                            use tymetafuncspec_core::Either;
                                                                            use std_parse_metadata::ParseMetadata;
                                                                            use std_parse_error::ParseError;
                                                                            use pattern_tmf::OrVariableZeroOrMore;
                                                                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                                            #[derive(Default)]
                                                                            pub struct Bak(
                                                                                pub EitherHeapBak<
                                                                                    tscapf::Heap,
                                                                                    Pair<
                                                                                        tscapf::Heap,
                                                                                        Set<
                                                                                            tscapf::Heap,
                                                                                            Either<
                                                                                                tscapf::Heap,
                                                                                                Pair<
                                                                                                    tscapf::Heap,
                                                                                                    OrVariableZeroOrMore<
                                                                                                        tscapf::Heap,
                                                                                                        Either<
                                                                                                            tscapf::Heap,
                                                                                                            Pair<
                                                                                                                tscapf::Heap,
                                                                                                                tscapf::Nat,
                                                                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                            >,
                                                                                                            ParseError<tscapf::Heap>,
                                                                                                        >,
                                                                                                    >,
                                                                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                >,
                                                                                                ParseError<tscapf::Heap>,
                                                                                            >,
                                                                                        >,
                                                                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                    >,
                                                                                    ParseError<tscapf::Heap>,
                                                                                >,
                                                                            );
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod or_variable_zero_or_more {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable_zero_or_more::either as tscapfhepovzome;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub either: tscapfhepovzome::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod either {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable_zero_or_more::either::pair as tscapfhepovzomep;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub pair: tscapfhepovzomep::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod pair {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable_zero_or_more::either::pair::nat as tscapfhepovzomepn;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub nat: tscapfhepovzomepn::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod nat {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhepovzomepnm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tscapfhepovzomepnm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhepovzomepnmpm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tscapfhepovzomepnmpm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhepovzomepnmpmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tscapfhepovzomepnmpmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe as tscapfhepovzomepnmpmpem;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tscapfhepovzomepnmpmpem::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhepovzomepnmpmpempm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tscapfhepovzomepnmpmpempm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhepovzomepnmpmpempmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tscapfhepovzomepnmpmpempmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use tymetafuncspec_core::Pair;
                                                    use tymetafuncspec_core::Maybe;
                                                    use tymetafuncspec_core::EitherHeapBak;
                                                    use tymetafuncspec_core::Either;
                                                    use std_parse_metadata::ParseMetadata;
                                                    use std_parse_error::ParseError;
                                                    use pattern_tmf::OrVariableZeroOrMore;
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                    #[derive(Default)]
                                                    pub struct Bak(
                                                        pub EitherHeapBak<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                OrVariableZeroOrMore<
                                                                    tscapf::Heap,
                                                                    Either<
                                                                        tscapf::Heap,
                                                                        Pair<
                                                                            tscapf::Heap,
                                                                            tscapf::Nat,
                                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                        >,
                                                                        ParseError<tscapf::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod nat_lit {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat_lit::maybe as tscapfhepnlm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfhepnlm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat_lit::maybe::parse_metadata as tscapfhepnlmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfhepnlmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::nat_lit::maybe::parse_metadata::parse_error as tscapfhepnlmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfhepnlmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use tymetafuncspec_core::BoundedNat;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        BoundedNat<tscapf::Heap>,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod idx_box {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either as tscapfhepibe;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub either: tscapfhepibe::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod either {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair as tscapfhepibep;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub pair: tscapfhepibep::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod pair {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus as tscapfhepibepp;
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f as tscapfhepibepf;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub f: tscapfhepibepf::Bak,
                            pub plus: tscapfhepibepp::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod f {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f::maybe as tscapfhepibepfm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tscapfhepibepfm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata as tscapfhepibepfmpm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tscapfhepibepfmpm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error as tscapfhepibepfmpmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tscapfhepibepfmpmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe as tscapfhepibepfmpmpem;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tscapfhepibepfmpmpem::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhepibepfmpmpempm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tscapfhepibepfmpmpempm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhepibepfmpmpempmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tscapfhepibepfmpmpempmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use tymetafuncspec_core::Pair;
                                                    use tymetafuncspec_core::Maybe;
                                                    use tymetafuncspec_core::IdxBox;
                                                    use tymetafuncspec_core::EitherHeapBak;
                                                    use tymetafuncspec_core::Either;
                                                    use std_parse_metadata::ParseMetadata;
                                                    use std_parse_error::ParseError;
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                    #[derive(Default)]
                                                    pub struct Bak(
                                                        pub EitherHeapBak<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                IdxBox<
                                                                    tscapf::Heap,
                                                                    Either<
                                                                        tscapf::Heap,
                                                                        Pair<
                                                                            tscapf::Heap,
                                                                            tscapf::F,
                                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                        >,
                                                                        ParseError<tscapf::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod plus {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus::maybe as tscapfhepibeppm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub maybe: tscapfhepibeppm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod maybe {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata as tscapfhepibeppmpm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_metadata: tscapfhepibeppmpm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_metadata {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error as tscapfhepibeppmpmpe;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_error: tscapfhepibeppmpmpe::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_error {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe as tscapfhepibeppmpmpem;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub maybe: tscapfhepibeppmpmpem::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod maybe {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhepibeppmpmpempm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_metadata: tscapfhepibeppmpmpempm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_metadata {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhepibeppmpmpempmpe;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_error: tscapfhepibeppmpmpempmpe::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_error {
                                                    use tymetafuncspec_core::Pair;
                                                    use tymetafuncspec_core::Maybe;
                                                    use tymetafuncspec_core::IdxBox;
                                                    use tymetafuncspec_core::EitherHeapBak;
                                                    use tymetafuncspec_core::Either;
                                                    use std_parse_metadata::ParseMetadata;
                                                    use std_parse_error::ParseError;
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                    #[derive(Default)]
                                                    pub struct Bak(
                                                        pub EitherHeapBak<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                IdxBox<
                                                                    tscapf::Heap,
                                                                    Either<
                                                                        tscapf::Heap,
                                                                        Pair<
                                                                            tscapf::Heap,
                                                                            tscapf::Plus,
                                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                        >,
                                                                        ParseError<tscapf::Heap>,
                                                                    >,
                                                                >,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod f {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::f::maybe as tscapfhepfm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfhepfm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::f::maybe::parse_metadata as tscapfhepfmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfhepfmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::f::maybe::parse_metadata::parse_error as tscapfhepfmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfhepfmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::F,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod plus {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::plus::maybe as tscapfheppm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfheppm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::plus::maybe::parse_metadata as tscapfheppmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfheppmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::plus::maybe::parse_metadata::parse_error as tscapfheppmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfheppmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::Plus,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod sum {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::sum::maybe as tscapfhepsm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub maybe: tscapfhepsm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod maybe {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::sum::maybe::parse_metadata as tscapfhepsmpm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub parse_metadata: tscapfhepsmpm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod parse_metadata {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::either::pair::sum::maybe::parse_metadata::parse_error as tscapfhepsmpmpe;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_error: tscapfhepsmpmpe::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_error {
                            use tymetafuncspec_core::Pair;
                            use tymetafuncspec_core::Maybe;
                            use tymetafuncspec_core::EitherHeapBak;
                            use std_parse_metadata::ParseMetadata;
                            use std_parse_error::ParseError;
                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                            #[derive(Default)]
                            pub struct Bak(
                                pub EitherHeapBak<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::Sum,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            );
                        }
                    }
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod pair {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set as tscapfhps;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::right_operand as tscapfhpro;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::plus as tscapfhpp;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable_zero_or_more as tscapfhpovzom;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable as tscapfhpov;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::nat_lit as tscapfhpnl;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::nat as tscapfhpn;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::left_operand as tscapfhplo;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box as tscapfhpib;
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::f as tscapfhpf;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub or_variable: tscapfhpov::Bak,
            pub left_operand: tscapfhplo::Bak,
            pub right_operand: tscapfhpro::Bak,
            pub nat: tscapfhpn::Bak,
            pub set: tscapfhps::Bak,
            pub or_variable_zero_or_more: tscapfhpovzom::Bak,
            pub nat_lit: tscapfhpnl::Bak,
            pub idx_box: tscapfhpib::Bak,
            pub f: tscapfhpf::Bak,
            pub plus: tscapfhpp::Bak,
            pub sum: crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::sum::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod or_variable {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either as tscapfhpove;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub either: tscapfhpove::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod either {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair as tscapfhpovep;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub pair: tscapfhpovep::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod pair {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set as tscapfhpoveps;
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::right_operand as tscapfhpovepro;
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::nat as tscapfhpovepn;
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::left_operand as tscapfhpoveplo;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub left_operand: tscapfhpoveplo::Bak,
                        pub right_operand: tscapfhpovepro::Bak,
                        pub nat: tscapfhpovepn::Bak,
                        pub set: tscapfhpoveps::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod left_operand {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::left_operand::maybe as tscapfhpoveplom;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tscapfhpoveplom::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::left_operand::maybe::parse_metadata as tscapfhpoveplompm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tscapfhpoveplompm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::left_operand::maybe::parse_metadata::parse_error as tscapfhpoveplompmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tscapfhpoveplompmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::left_operand::maybe::parse_metadata::parse_error::maybe as tscapfhpoveplompmpem;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tscapfhpoveplompmpem::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::left_operand::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhpoveplompmpempm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tscapfhpoveplompmpempm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use tymetafuncspec_core::PairHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use pattern_tmf::OrVariable;
                                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub PairHeapBak<
                                                    tscapf::Heap,
                                                    OrVariable<
                                                        tscapf::Heap,
                                                        Either<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                tscapf::LeftOperand,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    >,
                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod right_operand {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::right_operand::maybe as tscapfhpoveprom;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tscapfhpoveprom::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::right_operand::maybe::parse_metadata as tscapfhpoveprompm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tscapfhpoveprompm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::right_operand::maybe::parse_metadata::parse_error as tscapfhpoveprompmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tscapfhpoveprompmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::right_operand::maybe::parse_metadata::parse_error::maybe as tscapfhpoveprompmpem;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tscapfhpoveprompmpem::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::right_operand::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhpoveprompmpempm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tscapfhpoveprompmpempm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use tymetafuncspec_core::PairHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use pattern_tmf::OrVariable;
                                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub PairHeapBak<
                                                    tscapf::Heap,
                                                    OrVariable<
                                                        tscapf::Heap,
                                                        Either<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                tscapf::RightOperand,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    >,
                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod nat {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::nat::maybe as tscapfhpovepnm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tscapfhpovepnm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::nat::maybe::parse_metadata as tscapfhpovepnmpm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tscapfhpovepnmpm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhpovepnmpmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tscapfhpovepnmpmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::nat::maybe::parse_metadata::parse_error::maybe as tscapfhpovepnmpmpem;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tscapfhpovepnmpmpem::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhpovepnmpmpempm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tscapfhpovepnmpmpempm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use tymetafuncspec_core::PairHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use pattern_tmf::OrVariable;
                                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub PairHeapBak<
                                                    tscapf::Heap,
                                                    OrVariable<
                                                        tscapf::Heap,
                                                        Either<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                tscapf::Nat,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    >,
                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod set {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either as tscapfhpovepse;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub either: tscapfhpovepse::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod either {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair as tscapfhpovepsep;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub pair: tscapfhpovepsep::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod pair {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more as tscapfhpovepsepovzom;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub or_variable_zero_or_more: tscapfhpovepsepovzom::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod or_variable_zero_or_more {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either as tscapfhpovepsepovzome;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub either: tscapfhpovepsepovzome::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod either {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair as tscapfhpovepsepovzomep;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub pair: tscapfhpovepsepovzomep::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod pair {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat as tscapfhpovepsepovzomepn;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub nat: tscapfhpovepsepovzomepn::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod nat {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhpovepsepovzomepnm;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub maybe: tscapfhpovepsepovzomepnm::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod maybe {
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhpovepsepovzomepnmpm;
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    #[derive(Default)]
                                                    pub struct Bak {
                                                        pub parse_metadata: tscapfhpovepsepovzomepnmpm::Bak,
                                                    }
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    pub mod parse_metadata {
                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhpovepsepovzomepnmpmpe;
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        #[derive(Default)]
                                                        pub struct Bak {
                                                            pub parse_error: tscapfhpovepsepovzomepnmpmpe::Bak,
                                                        }
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        pub mod parse_error {
                                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe as tscapfhpovepsepovzomepnmpmpem;
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            #[derive(Default)]
                                                            pub struct Bak {
                                                                pub maybe: tscapfhpovepsepovzomepnmpmpem::Bak,
                                                            }
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            pub mod maybe {
                                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhpovepsepovzomepnmpmpempm;
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                #[derive(Default)]
                                                                pub struct Bak {
                                                                    pub parse_metadata: tscapfhpovepsepovzomepnmpmpempm::Bak,
                                                                }
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                pub mod parse_metadata {
                                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhpovepsepovzomepnmpmpempmpe;
                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                    #[derive(Default)]
                                                                    pub struct Bak {
                                                                        pub parse_error: tscapfhpovepsepovzomepnmpmpempmpe::Bak,
                                                                    }
                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                    pub mod parse_error {
                                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe as tscapfhpovepsepovzomepnmpmpempmpem;
                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                        #[derive(Default)]
                                                                        pub struct Bak {
                                                                            pub maybe: tscapfhpovepsepovzomepnmpmpempmpem::Bak,
                                                                        }
                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                        pub mod maybe {
                                                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhpovepsepovzomepnmpmpempmpempm;
                                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                            #[derive(Default)]
                                                                            pub struct Bak {
                                                                                pub parse_metadata: tscapfhpovepsepovzomepnmpmpempmpempm::Bak,
                                                                            }
                                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                            pub mod parse_metadata {
                                                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhpovepsepovzomepnmpmpempmpempmpe;
                                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                #[derive(Default)]
                                                                                pub struct Bak {
                                                                                    pub parse_error: tscapfhpovepsepovzomepnmpmpempmpempmpe::Bak,
                                                                                }
                                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                pub mod parse_error {
                                                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe as tscapfhpovepsepovzomepnmpmpempmpempmpem;
                                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                    #[derive(Default)]
                                                                                    pub struct Bak {
                                                                                        pub maybe: tscapfhpovepsepovzomepnmpmpempmpempmpem::Bak,
                                                                                    }
                                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                    pub mod maybe {
                                                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhpovepsepovzomepnmpmpempmpempmpempm;
                                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                        #[derive(Default)]
                                                                                        pub struct Bak {
                                                                                            pub parse_metadata: tscapfhpovepsepovzomepnmpmpempmpempmpempm::Bak,
                                                                                        }
                                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                                        pub mod parse_metadata {
                                                                                            use tymetafuncspec_core::Set;
                                                                                            use tymetafuncspec_core::PairHeapBak;
                                                                                            use tymetafuncspec_core::Pair;
                                                                                            use tymetafuncspec_core::Maybe;
                                                                                            use tymetafuncspec_core::Either;
                                                                                            use std_parse_metadata::ParseMetadata;
                                                                                            use std_parse_error::ParseError;
                                                                                            use pattern_tmf::OrVariableZeroOrMore;
                                                                                            use pattern_tmf::OrVariable;
                                                                                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                                                            #[derive(Default)]
                                                                                            pub struct Bak(
                                                                                                pub PairHeapBak<
                                                                                                    tscapf::Heap,
                                                                                                    OrVariable<
                                                                                                        tscapf::Heap,
                                                                                                        Either<
                                                                                                            tscapf::Heap,
                                                                                                            Pair<
                                                                                                                tscapf::Heap,
                                                                                                                Set<
                                                                                                                    tscapf::Heap,
                                                                                                                    Either<
                                                                                                                        tscapf::Heap,
                                                                                                                        Pair<
                                                                                                                            tscapf::Heap,
                                                                                                                            OrVariableZeroOrMore<
                                                                                                                                tscapf::Heap,
                                                                                                                                Either<
                                                                                                                                    tscapf::Heap,
                                                                                                                                    Pair<
                                                                                                                                        tscapf::Heap,
                                                                                                                                        tscapf::Nat,
                                                                                                                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                                                    >,
                                                                                                                                    ParseError<tscapf::Heap>,
                                                                                                                                >,
                                                                                                                            >,
                                                                                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                                        >,
                                                                                                                        ParseError<tscapf::Heap>,
                                                                                                                    >,
                                                                                                                >,
                                                                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                            >,
                                                                                                            ParseError<tscapf::Heap>,
                                                                                                        >,
                                                                                                    >,
                                                                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                >,
                                                                                            );
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod left_operand {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::left_operand::maybe as tscapfhplom;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhplom::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::left_operand::maybe::parse_metadata as tscapfhplompm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhplompm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            tscapf::LeftOperand,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod right_operand {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::right_operand::maybe as tscapfhprom;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhprom::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::right_operand::maybe::parse_metadata as tscapfhprompm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhprompm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            tscapf::RightOperand,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod nat {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::nat::maybe as tscapfhpnm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhpnm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::nat::maybe::parse_metadata as tscapfhpnmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhpnmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            tscapf::Nat,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod set {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either as tscapfhpse;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub either: tscapfhpse::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod either {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::pair as tscapfhpsep;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub pair: tscapfhpsep::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod pair {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::pair::or_variable_zero_or_more as tscapfhpsepovzom;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub or_variable_zero_or_more: tscapfhpsepovzom::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod or_variable_zero_or_more {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::pair::or_variable_zero_or_more::either as tscapfhpsepovzome;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub either: tscapfhpsepovzome::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod either {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::pair::or_variable_zero_or_more::either::pair as tscapfhpsepovzomep;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub pair: tscapfhpsepovzomep::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod pair {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat as tscapfhpsepovzomepn;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub nat: tscapfhpsepovzomepn::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod nat {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhpsepovzomepnm;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tscapfhpsepovzomepnm::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhpsepovzomepnmpm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tscapfhpsepovzomepnmpm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhpsepovzomepnmpmpe;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub parse_error: tscapfhpsepovzomepnmpmpe::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod parse_error {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe as tscapfhpsepovzomepnmpmpem;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub maybe: tscapfhpsepovzomepnmpmpem::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod maybe {
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhpsepovzomepnmpmpempm;
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    #[derive(Default)]
                                                    pub struct Bak {
                                                        pub parse_metadata: tscapfhpsepovzomepnmpmpempm::Bak,
                                                    }
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    pub mod parse_metadata {
                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhpsepovzomepnmpmpempmpe;
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        #[derive(Default)]
                                                        pub struct Bak {
                                                            pub parse_error: tscapfhpsepovzomepnmpmpempmpe::Bak,
                                                        }
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        pub mod parse_error {
                                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe as tscapfhpsepovzomepnmpmpempmpem;
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            #[derive(Default)]
                                                            pub struct Bak {
                                                                pub maybe: tscapfhpsepovzomepnmpmpempmpem::Bak,
                                                            }
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            pub mod maybe {
                                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhpsepovzomepnmpmpempmpempm;
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                #[derive(Default)]
                                                                pub struct Bak {
                                                                    pub parse_metadata: tscapfhpsepovzomepnmpmpempmpempm::Bak,
                                                                }
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                pub mod parse_metadata {
                                                                    use tymetafuncspec_core::Set;
                                                                    use tymetafuncspec_core::PairHeapBak;
                                                                    use tymetafuncspec_core::Pair;
                                                                    use tymetafuncspec_core::Maybe;
                                                                    use tymetafuncspec_core::Either;
                                                                    use std_parse_metadata::ParseMetadata;
                                                                    use std_parse_error::ParseError;
                                                                    use pattern_tmf::OrVariableZeroOrMore;
                                                                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                                    #[derive(Default)]
                                                                    pub struct Bak(
                                                                        pub PairHeapBak<
                                                                            tscapf::Heap,
                                                                            Set<
                                                                                tscapf::Heap,
                                                                                Either<
                                                                                    tscapf::Heap,
                                                                                    Pair<
                                                                                        tscapf::Heap,
                                                                                        OrVariableZeroOrMore<
                                                                                            tscapf::Heap,
                                                                                            Either<
                                                                                                tscapf::Heap,
                                                                                                Pair<
                                                                                                    tscapf::Heap,
                                                                                                    tscapf::Nat,
                                                                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                >,
                                                                                                ParseError<tscapf::Heap>,
                                                                                            >,
                                                                                        >,
                                                                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                    >,
                                                                                    ParseError<tscapf::Heap>,
                                                                                >,
                                                                            >,
                                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                        >,
                                                                    );
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod or_variable_zero_or_more {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable_zero_or_more::either as tscapfhpovzome;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub either: tscapfhpovzome::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod either {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable_zero_or_more::either::pair as tscapfhpovzomep;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub pair: tscapfhpovzomep::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod pair {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable_zero_or_more::either::pair::nat as tscapfhpovzomepn;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub nat: tscapfhpovzomepn::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod nat {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhpovzomepnm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tscapfhpovzomepnm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhpovzomepnmpm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tscapfhpovzomepnmpm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhpovzomepnmpmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tscapfhpovzomepnmpmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe as tscapfhpovzomepnmpmpem;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tscapfhpovzomepnmpmpem::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhpovzomepnmpmpempm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tscapfhpovzomepnmpmpempm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use tymetafuncspec_core::PairHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use pattern_tmf::OrVariableZeroOrMore;
                                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub PairHeapBak<
                                                    tscapf::Heap,
                                                    OrVariableZeroOrMore<
                                                        tscapf::Heap,
                                                        Either<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                tscapf::Nat,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    >,
                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod nat_lit {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::nat_lit::maybe as tscapfhpnlm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhpnlm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::nat_lit::maybe::parse_metadata as tscapfhpnlmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhpnlmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use tymetafuncspec_core::BoundedNat;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            BoundedNat<tscapf::Heap>,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod idx_box {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either as tscapfhpibe;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub either: tscapfhpibe::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod either {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair as tscapfhpibep;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub pair: tscapfhpibep::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod pair {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::plus as tscapfhpibepp;
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::f as tscapfhpibepf;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub f: tscapfhpibepf::Bak,
                        pub plus: tscapfhpibepp::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod f {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::f::maybe as tscapfhpibepfm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tscapfhpibepfm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::f::maybe::parse_metadata as tscapfhpibepfmpm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tscapfhpibepfmpm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error as tscapfhpibepfmpmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tscapfhpibepfmpmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe as tscapfhpibepfmpmpem;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tscapfhpibepfmpmpem::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::f::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhpibepfmpmpempm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tscapfhpibepfmpmpempm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use tymetafuncspec_core::PairHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::IdxBox;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub PairHeapBak<
                                                    tscapf::Heap,
                                                    IdxBox<
                                                        tscapf::Heap,
                                                        Either<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                tscapf::F,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    >,
                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod plus {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::plus::maybe as tscapfhpibeppm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub maybe: tscapfhpibeppm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod maybe {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata as tscapfhpibeppmpm;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_metadata: tscapfhpibeppmpm::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_metadata {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error as tscapfhpibeppmpmpe;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub parse_error: tscapfhpibeppmpmpe::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod parse_error {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe as tscapfhpibeppmpmpem;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub maybe: tscapfhpibeppmpmpem::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod maybe {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::idx_box::either::pair::plus::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhpibeppmpmpempm;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_metadata: tscapfhpibeppmpmpempm::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_metadata {
                                            use tymetafuncspec_core::PairHeapBak;
                                            use tymetafuncspec_core::Pair;
                                            use tymetafuncspec_core::Maybe;
                                            use tymetafuncspec_core::IdxBox;
                                            use tymetafuncspec_core::Either;
                                            use std_parse_metadata::ParseMetadata;
                                            use std_parse_error::ParseError;
                                            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                            /// @generated by [term_specialized_gen::gen_heapbak_module]
                                            #[derive(Default)]
                                            pub struct Bak(
                                                pub PairHeapBak<
                                                    tscapf::Heap,
                                                    IdxBox<
                                                        tscapf::Heap,
                                                        Either<
                                                            tscapf::Heap,
                                                            Pair<
                                                                tscapf::Heap,
                                                                tscapf::Plus,
                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                            >,
                                                            ParseError<tscapf::Heap>,
                                                        >,
                                                    >,
                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                >,
                                            );
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod f {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::f::maybe as tscapfhpfm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhpfm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::f::maybe::parse_metadata as tscapfhpfmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhpfmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            tscapf::F,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod plus {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::plus::maybe as tscapfhppm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhppm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::plus::maybe::parse_metadata as tscapfhppmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhppmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            tscapf::Plus,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod sum {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::sum::maybe as tscapfhpsm;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub maybe: tscapfhpsm::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod maybe {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::pair::sum::maybe::parse_metadata as tscapfhpsmpm;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub parse_metadata: tscapfhpsmpm::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod parse_metadata {
                    use tymetafuncspec_core::PairHeapBak;
                    use tymetafuncspec_core::Maybe;
                    use std_parse_metadata::ParseMetadata;
                    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                    /// @generated by [term_specialized_gen::gen_heapbak_module]
                    #[derive(Default)]
                    pub struct Bak(
                        pub PairHeapBak<
                            tscapf::Heap,
                            tscapf::Sum,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                    );
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod or_variable {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either as tscapfhove;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub either: tscapfhove::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod either {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair as tscapfhovep;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub pair: tscapfhovep::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod pair {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set as tscapfhoveps;
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::right_operand as tscapfhovepro;
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::nat as tscapfhovepn;
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::left_operand as tscapfhoveplo;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub left_operand: tscapfhoveplo::Bak,
                    pub right_operand: tscapfhovepro::Bak,
                    pub nat: tscapfhovepn::Bak,
                    pub set: tscapfhoveps::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod left_operand {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::left_operand::maybe as tscapfhoveplom;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tscapfhoveplom::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::left_operand::maybe::parse_metadata as tscapfhoveplompm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tscapfhoveplompm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::left_operand::maybe::parse_metadata::parse_error as tscapfhoveplompmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tscapfhoveplompmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use pattern_tmf::OrVariableHeapBak;
                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub OrVariableHeapBak<
                                        tscapf::Heap,
                                        Either<
                                            tscapf::Heap,
                                            Pair<
                                                tscapf::Heap,
                                                tscapf::LeftOperand,
                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                            >,
                                            ParseError<tscapf::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod right_operand {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::right_operand::maybe as tscapfhoveprom;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tscapfhoveprom::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::right_operand::maybe::parse_metadata as tscapfhoveprompm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tscapfhoveprompm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::right_operand::maybe::parse_metadata::parse_error as tscapfhoveprompmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tscapfhoveprompmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use pattern_tmf::OrVariableHeapBak;
                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub OrVariableHeapBak<
                                        tscapf::Heap,
                                        Either<
                                            tscapf::Heap,
                                            Pair<
                                                tscapf::Heap,
                                                tscapf::RightOperand,
                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                            >,
                                            ParseError<tscapf::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod nat {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::nat::maybe as tscapfhovepnm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tscapfhovepnm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::nat::maybe::parse_metadata as tscapfhovepnmpm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tscapfhovepnmpm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhovepnmpmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tscapfhovepnmpmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use pattern_tmf::OrVariableHeapBak;
                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub OrVariableHeapBak<
                                        tscapf::Heap,
                                        Either<
                                            tscapf::Heap,
                                            Pair<
                                                tscapf::Heap,
                                                tscapf::Nat,
                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                            >,
                                            ParseError<tscapf::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod set {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either as tscapfhovepse;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub either: tscapfhovepse::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod either {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair as tscapfhovepsep;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub pair: tscapfhovepsep::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod pair {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair::or_variable_zero_or_more as tscapfhovepsepovzom;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub or_variable_zero_or_more: tscapfhovepsepovzom::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod or_variable_zero_or_more {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either as tscapfhovepsepovzome;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub either: tscapfhovepsepovzome::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod either {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair as tscapfhovepsepovzomep;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub pair: tscapfhovepsepovzomep::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod pair {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat as tscapfhovepsepovzomepn;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub nat: tscapfhovepsepovzomepn::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod nat {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhovepsepovzomepnm;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub maybe: tscapfhovepsepovzomepnm::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod maybe {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhovepsepovzomepnmpm;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_metadata: tscapfhovepsepovzomepnmpm::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_metadata {
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhovepsepovzomepnmpmpe;
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    #[derive(Default)]
                                                    pub struct Bak {
                                                        pub parse_error: tscapfhovepsepovzomepnmpmpe::Bak,
                                                    }
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    pub mod parse_error {
                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe as tscapfhovepsepovzomepnmpmpem;
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        #[derive(Default)]
                                                        pub struct Bak {
                                                            pub maybe: tscapfhovepsepovzomepnmpmpem::Bak,
                                                        }
                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                        pub mod maybe {
                                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhovepsepovzomepnmpmpempm;
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            #[derive(Default)]
                                                            pub struct Bak {
                                                                pub parse_metadata: tscapfhovepsepovzomepnmpmpempm::Bak,
                                                            }
                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                            pub mod parse_metadata {
                                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhovepsepovzomepnmpmpempmpe;
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                #[derive(Default)]
                                                                pub struct Bak {
                                                                    pub parse_error: tscapfhovepsepovzomepnmpmpempmpe::Bak,
                                                                }
                                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                pub mod parse_error {
                                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe as tscapfhovepsepovzomepnmpmpempmpem;
                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                    #[derive(Default)]
                                                                    pub struct Bak {
                                                                        pub maybe: tscapfhovepsepovzomepnmpmpempmpem::Bak,
                                                                    }
                                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                    pub mod maybe {
                                                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhovepsepovzomepnmpmpempmpempm;
                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                        #[derive(Default)]
                                                                        pub struct Bak {
                                                                            pub parse_metadata: tscapfhovepsepovzomepnmpmpempmpempm::Bak,
                                                                        }
                                                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                        pub mod parse_metadata {
                                                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable::either::pair::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhovepsepovzomepnmpmpempmpempmpe;
                                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                            #[derive(Default)]
                                                                            pub struct Bak {
                                                                                pub parse_error: tscapfhovepsepovzomepnmpmpempmpempmpe::Bak,
                                                                            }
                                                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                                            pub mod parse_error {
                                                                                use tymetafuncspec_core::Set;
                                                                                use tymetafuncspec_core::Pair;
                                                                                use tymetafuncspec_core::Maybe;
                                                                                use tymetafuncspec_core::Either;
                                                                                use std_parse_metadata::ParseMetadata;
                                                                                use std_parse_error::ParseError;
                                                                                use pattern_tmf::OrVariableZeroOrMore;
                                                                                use pattern_tmf::OrVariableHeapBak;
                                                                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                                                #[derive(Default)]
                                                                                pub struct Bak(
                                                                                    pub OrVariableHeapBak<
                                                                                        tscapf::Heap,
                                                                                        Either<
                                                                                            tscapf::Heap,
                                                                                            Pair<
                                                                                                tscapf::Heap,
                                                                                                Set<
                                                                                                    tscapf::Heap,
                                                                                                    Either<
                                                                                                        tscapf::Heap,
                                                                                                        Pair<
                                                                                                            tscapf::Heap,
                                                                                                            OrVariableZeroOrMore<
                                                                                                                tscapf::Heap,
                                                                                                                Either<
                                                                                                                    tscapf::Heap,
                                                                                                                    Pair<
                                                                                                                        tscapf::Heap,
                                                                                                                        tscapf::Nat,
                                                                                                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                                    >,
                                                                                                                    ParseError<tscapf::Heap>,
                                                                                                                >,
                                                                                                            >,
                                                                                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                                        >,
                                                                                                        ParseError<tscapf::Heap>,
                                                                                                    >,
                                                                                                >,
                                                                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                            >,
                                                                                            ParseError<tscapf::Heap>,
                                                                                        >,
                                                                                    >,
                                                                                );
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod maybe {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::maybe::parse_metadata as tscapfhmpm;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub parse_metadata: tscapfhmpm::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod parse_metadata {
            use tymetafuncspec_core::MaybeHeapBak;
            use std_parse_metadata::ParseMetadata;
            use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
            /// @generated by [term_specialized_gen::gen_heapbak_module]
            #[derive(Default)]
            pub struct Bak(pub MaybeHeapBak<tscapf::Heap, ParseMetadata<tscapf::Heap>>);
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod parse_metadata {
        use std_parse_metadata::ParseMetadataBak;
        use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub ParseMetadataBak<tscapf::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod parse_error {
        use std_parse_error::ParseErrorBak;
        use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub ParseErrorBak<tscapf::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod set {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either as tscapfhse;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub either: tscapfhse::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod either {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::pair as tscapfhsep;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub pair: tscapfhsep::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod pair {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::pair::or_variable_zero_or_more as tscapfhsepovzom;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub or_variable_zero_or_more: tscapfhsepovzom::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod or_variable_zero_or_more {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::pair::or_variable_zero_or_more::either as tscapfhsepovzome;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub either: tscapfhsepovzome::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod either {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::pair::or_variable_zero_or_more::either::pair as tscapfhsepovzomep;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub pair: tscapfhsepovzomep::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod pair {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::pair::or_variable_zero_or_more::either::pair::nat as tscapfhsepovzomepn;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub nat: tscapfhsepovzomepn::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod nat {
                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhsepovzomepnm;
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                #[derive(Default)]
                                pub struct Bak {
                                    pub maybe: tscapfhsepovzomepnm::Bak,
                                }
                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                pub mod maybe {
                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhsepovzomepnmpm;
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    #[derive(Default)]
                                    pub struct Bak {
                                        pub parse_metadata: tscapfhsepovzomepnmpm::Bak,
                                    }
                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                    pub mod parse_metadata {
                                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhsepovzomepnmpmpe;
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        #[derive(Default)]
                                        pub struct Bak {
                                            pub parse_error: tscapfhsepovzomepnmpmpe::Bak,
                                        }
                                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                        pub mod parse_error {
                                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe as tscapfhsepovzomepnmpmpem;
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            #[derive(Default)]
                                            pub struct Bak {
                                                pub maybe: tscapfhsepovzomepnmpmpem::Bak,
                                            }
                                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                            pub mod maybe {
                                                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata as tscapfhsepovzomepnmpmpempm;
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                #[derive(Default)]
                                                pub struct Bak {
                                                    pub parse_metadata: tscapfhsepovzomepnmpmpempm::Bak,
                                                }
                                                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                pub mod parse_metadata {
                                                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::set::either::pair::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error::maybe::parse_metadata::parse_error as tscapfhsepovzomepnmpmpempmpe;
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    #[derive(Default)]
                                                    pub struct Bak {
                                                        pub parse_error: tscapfhsepovzomepnmpmpempmpe::Bak,
                                                    }
                                                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                                                    pub mod parse_error {
                                                        use tymetafuncspec_core::SetHeapBak;
                                                        use tymetafuncspec_core::Pair;
                                                        use tymetafuncspec_core::Maybe;
                                                        use tymetafuncspec_core::Either;
                                                        use std_parse_metadata::ParseMetadata;
                                                        use std_parse_error::ParseError;
                                                        use pattern_tmf::OrVariableZeroOrMore;
                                                        use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                                        /// @generated by [term_specialized_gen::gen_heapbak_module]
                                                        #[derive(Default)]
                                                        pub struct Bak(
                                                            pub SetHeapBak<
                                                                tscapf::Heap,
                                                                Either<
                                                                    tscapf::Heap,
                                                                    Pair<
                                                                        tscapf::Heap,
                                                                        OrVariableZeroOrMore<
                                                                            tscapf::Heap,
                                                                            Either<
                                                                                tscapf::Heap,
                                                                                Pair<
                                                                                    tscapf::Heap,
                                                                                    tscapf::Nat,
                                                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                                >,
                                                                                ParseError<tscapf::Heap>,
                                                                            >,
                                                                        >,
                                                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                                    >,
                                                                    ParseError<tscapf::Heap>,
                                                                >,
                                                            >,
                                                        );
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod or_variable_zero_or_more {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more::either as tscapfhovzome;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub either: tscapfhovzome::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod either {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more::either::pair as tscapfhovzomep;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub pair: tscapfhovzomep::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod pair {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more::either::pair::nat as tscapfhovzomepn;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub nat: tscapfhovzomepn::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod nat {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more::either::pair::nat::maybe as tscapfhovzomepnm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tscapfhovzomepnm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata as tscapfhovzomepnmpm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tscapfhovzomepnmpm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::or_variable_zero_or_more::either::pair::nat::maybe::parse_metadata::parse_error as tscapfhovzomepnmpmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tscapfhovzomepnmpmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use pattern_tmf::OrVariableZeroOrMoreHeapBak;
                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub OrVariableZeroOrMoreHeapBak<
                                        tscapf::Heap,
                                        Either<
                                            tscapf::Heap,
                                            Pair<
                                                tscapf::Heap,
                                                tscapf::Nat,
                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                            >,
                                            ParseError<tscapf::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
            }
        }
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod nat_lit {
        use tymetafuncspec_core::BoundedNatHeapBak;
        use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
        /// @generated by [term_specialized_gen::gen_heapbak_module]
        #[derive(Default)]
        pub struct Bak(pub BoundedNatHeapBak<tscapf::Heap>);
    }
    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
    pub mod idx_box {
        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either as tscapfhibe;
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        #[derive(Default)]
        pub struct Bak {
            pub either: tscapfhibe::Bak,
        }
        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
        pub mod either {
            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair as tscapfhibep;
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            #[derive(Default)]
            pub struct Bak {
                pub pair: tscapfhibep::Bak,
            }
            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
            pub mod pair {
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::plus as tscapfhibepp;
                use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::f as tscapfhibepf;
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                #[derive(Default)]
                pub struct Bak {
                    pub f: tscapfhibepf::Bak,
                    pub plus: tscapfhibepp::Bak,
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod f {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::f::maybe as tscapfhibepfm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tscapfhibepfm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::f::maybe::parse_metadata as tscapfhibepfmpm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tscapfhibepfmpm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::f::maybe::parse_metadata::parse_error as tscapfhibepfmpmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tscapfhibepfmpmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::IdxBoxHeapBak;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub IdxBoxHeapBak<
                                        tscapf::Heap,
                                        Either<
                                            tscapf::Heap,
                                            Pair<
                                                tscapf::Heap,
                                                tscapf::F,
                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                            >,
                                            ParseError<tscapf::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
                /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                pub mod plus {
                    use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::plus::maybe as tscapfhibeppm;
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    #[derive(Default)]
                    pub struct Bak {
                        pub maybe: tscapfhibeppm::Bak,
                    }
                    /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                    pub mod maybe {
                        use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::plus::maybe::parse_metadata as tscapfhibeppmpm;
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        #[derive(Default)]
                        pub struct Bak {
                            pub parse_metadata: tscapfhibeppmpm::Bak,
                        }
                        /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                        pub mod parse_metadata {
                            use crate::term_specialized_cst_autoboxed_pattern_fib::heap::idx_box::either::pair::plus::maybe::parse_metadata::parse_error as tscapfhibeppmpmpe;
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            #[derive(Default)]
                            pub struct Bak {
                                pub parse_error: tscapfhibeppmpmpe::Bak,
                            }
                            /// @generated by [term_specialized_gen::gen_modules_with_prefix]
                            pub mod parse_error {
                                use tymetafuncspec_core::Pair;
                                use tymetafuncspec_core::Maybe;
                                use tymetafuncspec_core::IdxBoxHeapBak;
                                use tymetafuncspec_core::Either;
                                use std_parse_metadata::ParseMetadata;
                                use std_parse_error::ParseError;
                                use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
                                /// @generated by [term_specialized_gen::gen_heapbak_module]
                                #[derive(Default)]
                                pub struct Bak(
                                    pub IdxBoxHeapBak<
                                        tscapf::Heap,
                                        Either<
                                            tscapf::Heap,
                                            Pair<
                                                tscapf::Heap,
                                                tscapf::Plus,
                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                            >,
                                            ParseError<tscapf::Heap>,
                                        >,
                                    >,
                                );
                            }
                        }
                    }
                }
            }
        }
    }
}
/// @generated by [term_specialized_gen::gen_heap]
pub mod superheap {
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, pattern_tmf::OrVariable
        < crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::LeftOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair or_variable
        either pair left_operand maybe parse_metadata parse_error maybe parse_metadata
        parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, pattern_tmf::OrVariable <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::LeftOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair or_variable
        either pair left_operand maybe parse_metadata parse_error maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        pattern_tmf::OrVariableHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::LeftOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; or_variable either
        pair left_operand maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::LeftOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair left_operand
        maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::LeftOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair left_operand
        maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::MaybeHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        std_parse_metadata::ParseMetadataBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >; parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        std_parse_error::ParseErrorBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >; parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, pattern_tmf::OrVariable
        < crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::RightOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair or_variable
        either pair right_operand maybe parse_metadata parse_error maybe parse_metadata
        parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, pattern_tmf::OrVariable <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::RightOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair or_variable
        either pair right_operand maybe parse_metadata parse_error maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        pattern_tmf::OrVariableHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::RightOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; or_variable either
        pair right_operand maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::RightOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair
        right_operand maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::RightOperand,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair right_operand
        maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, pattern_tmf::OrVariable
        < crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair or_variable
        either pair nat maybe parse_metadata parse_error maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, pattern_tmf::OrVariable <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair or_variable
        either pair nat maybe parse_metadata parse_error maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        pattern_tmf::OrVariableHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; or_variable either
        pair nat maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair nat maybe
        parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair nat maybe
        parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, pattern_tmf::OrVariable
        < crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Set < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair or_variable
        either pair set either pair or_variable_zero_or_more either pair nat maybe
        parse_metadata parse_error maybe parse_metadata parse_error maybe parse_metadata
        parse_error maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, pattern_tmf::OrVariable <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Set < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair or_variable
        either pair set either pair or_variable_zero_or_more either pair nat maybe
        parse_metadata parse_error maybe parse_metadata parse_error maybe parse_metadata
        parse_error maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        pattern_tmf::OrVariableHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Set <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; or_variable either
        pair set either pair or_variable_zero_or_more either pair nat maybe
        parse_metadata parse_error maybe parse_metadata parse_error maybe parse_metadata
        parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Set < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair set either
        pair or_variable_zero_or_more either pair nat maybe parse_metadata parse_error
        maybe parse_metadata parse_error maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Set <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair set either pair
        or_variable_zero_or_more either pair nat maybe parse_metadata parse_error maybe
        parse_metadata parse_error maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::SetHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; set either pair
        or_variable_zero_or_more either pair nat maybe parse_metadata parse_error maybe
        parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair
        or_variable_zero_or_more either pair nat maybe parse_metadata parse_error maybe
        parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        pattern_tmf::OrVariableZeroOrMore < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair
        or_variable_zero_or_more either pair nat maybe parse_metadata parse_error maybe
        parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        pattern_tmf::OrVariableZeroOrMoreHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Nat, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >;
        or_variable_zero_or_more either pair nat maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::BoundedNat < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, tymetafuncspec_core::Maybe
        < crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair nat_lit
        maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::BoundedNat < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, tymetafuncspec_core::Maybe
        < crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair nat_lit maybe
        parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::BoundedNatHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >; nat_lit
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::IdxBox < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::F, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair idx_box
        either pair f maybe parse_metadata parse_error maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::IdxBox <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::F, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair idx_box either
        pair f maybe parse_metadata parse_error maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::IdxBoxHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::F, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; idx_box either pair f
        maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::F, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair f maybe
        parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::F, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair f maybe
        parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::IdxBox < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Plus, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair idx_box
        either pair plus maybe parse_metadata parse_error maybe parse_metadata
        parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::IdxBox <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Either < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Plus, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        tymetafuncspec_core::Maybe < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair idx_box either
        pair plus maybe parse_metadata parse_error maybe parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::IdxBoxHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Either <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        tymetafuncspec_core::Pair < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Plus, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; idx_box either pair
        plus maybe parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Plus, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair plus maybe
        parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Plus, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair plus maybe
        parse_metadata
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::EitherHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, tymetafuncspec_core::Pair <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Sum, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, >, >,
        std_parse_error::ParseError < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, > >; either pair sum maybe
        parse_metadata parse_error
    );
    term::impl_superheap!(
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap;
        tymetafuncspec_core::PairHeapBak < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, crate
        ::term_specialized_cst_autoboxed_pattern_fib::Sum, tymetafuncspec_core::Maybe <
        crate ::term_specialized_cst_autoboxed_pattern_fib::Heap,
        std_parse_metadata::ParseMetadata < crate
        ::term_specialized_cst_autoboxed_pattern_fib::Heap, >, > >; pair sum maybe
        parse_metadata
    );
}
#[derive(Clone, Copy)]
pub struct Plus {
    pub left_operand: Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            OrVariable<
                tscapf::Heap,
                Either<
                    tscapf::Heap,
                    Pair<
                        tscapf::Heap,
                        tscapf::LeftOperand,
                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                    >,
                    ParseError<tscapf::Heap>,
                >,
            >,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    >,
    pub right_operand: Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            OrVariable<
                tscapf::Heap,
                Either<
                    tscapf::Heap,
                    Pair<
                        tscapf::Heap,
                        tscapf::RightOperand,
                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                    >,
                    ParseError<tscapf::Heap>,
                >,
            >,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub struct LeftOperand {
    pub nat: Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            OrVariable<
                tscapf::Heap,
                Either<
                    tscapf::Heap,
                    Pair<
                        tscapf::Heap,
                        tscapf::Nat,
                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                    >,
                    ParseError<tscapf::Heap>,
                >,
            >,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub struct RightOperand {
    pub nat: Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            OrVariable<
                tscapf::Heap,
                Either<
                    tscapf::Heap,
                    Pair<
                        tscapf::Heap,
                        tscapf::Nat,
                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                    >,
                    ParseError<tscapf::Heap>,
                >,
            >,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub struct F {
    pub nat: Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            OrVariable<
                tscapf::Heap,
                Either<
                    tscapf::Heap,
                    Pair<
                        tscapf::Heap,
                        tscapf::Nat,
                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                    >,
                    ParseError<tscapf::Heap>,
                >,
            >,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub struct Sum {
    pub set: Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            OrVariable<
                tscapf::Heap,
                Either<
                    tscapf::Heap,
                    Pair<
                        tscapf::Heap,
                        Set<
                            tscapf::Heap,
                            Either<
                                tscapf::Heap,
                                Pair<
                                    tscapf::Heap,
                                    OrVariableZeroOrMore<
                                        tscapf::Heap,
                                        Either<
                                            tscapf::Heap,
                                            Pair<
                                                tscapf::Heap,
                                                tscapf::Nat,
                                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                            >,
                                            ParseError<tscapf::Heap>,
                                        >,
                                    >,
                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                >,
                                ParseError<tscapf::Heap>,
                            >,
                        >,
                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                    >,
                    ParseError<tscapf::Heap>,
                >,
            >,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    >,
}
#[derive(Clone, Copy)]
pub enum Nat {
    NatLit(
        Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                BoundedNat<tscapf::Heap>,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >,
    ),
    F(
        Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                IdxBox<
                    tscapf::Heap,
                    Either<
                        tscapf::Heap,
                        Pair<
                            tscapf::Heap,
                            tscapf::F,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                        ParseError<tscapf::Heap>,
                    >,
                >,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >,
    ),
    Plus(
        Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                IdxBox<
                    tscapf::Heap,
                    Either<
                        tscapf::Heap,
                        Pair<
                            tscapf::Heap,
                            tscapf::Plus,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                        ParseError<tscapf::Heap>,
                    >,
                >,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >,
    ),
    Sum(
        Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                tscapf::Sum,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >,
    ),
}
/// @generated by [term_specialized_gen::gen_heaped_impls]
pub mod heaped {
    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tscapf::Plus {
        type Heap = tscapf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tscapf::LeftOperand {
        type Heap = tscapf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tscapf::RightOperand {
        type Heap = tscapf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tscapf::F {
        type Heap = tscapf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tscapf::Sum {
        type Heap = tscapf::Heap;
    }
    /// @generated by [term_specialized_gen::gen_heaped_impls::heaped_impl]
    impl term::Heaped for tscapf::Nat {
        type Heap = tscapf::Heap;
    }
}
