#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [words::words_impls]
use tymetafuncspec_core::Set;
use tymetafuncspec_core::Pair;
use tymetafuncspec_core::Maybe;
use tymetafuncspec_core::Either;
use tymetafuncspec_core::BoundedNat;
use std_parse_metadata::ParseMetadata;
use std_parse_error::ParseError;
use pattern_tmf::OrVariableZeroOrMore;
use pattern_tmf::OrVariable;
use pattern_tmf::NamedPattern;
use file_tmf::File;
use fib_pat::words_mod_file_pattern_fib::sorts::Sum;
use fib_pat::words_mod_file_pattern_fib::sorts::RightOperand;
use fib_pat::words_mod_file_pattern_fib::sorts::Plus;
use fib_pat::words_mod_file_pattern_fib::sorts::Nat;
use fib_pat::words_mod_file_pattern_fib::sorts::LeftOperand;
use fib_pat::words_mod_file_pattern_fib::sorts::FileItem;
use fib_pat::words_mod_file_pattern_fib::sorts::F;
use fib_pat::words_mod_file_pattern_fib::L;
use crate::term_specialized_cst_autoboxed_file_pattern_fib as tscafpf;
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        tscafpf::Plus,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = Plus;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        tscafpf::LeftOperand,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = LeftOperand;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        tscafpf::RightOperand,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = RightOperand;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<tscafpf::Heap, tscafpf::F, Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>>,
    ParseError<tscafpf::Heap>,
> {
    type LWord = F;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        tscafpf::Sum,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = Sum;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        tscafpf::Nat,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = Nat;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        tscafpf::FileItem,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = FileItem;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        OrVariable<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::LeftOperand,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = OrVariable<(), LeftOperand>;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        OrVariable<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::RightOperand,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = OrVariable<(), RightOperand>;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        OrVariable<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::Nat,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = OrVariable<(), Nat>;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        OrVariable<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    Set<
                        tscafpf::Heap,
                        Either<
                            tscafpf::Heap,
                            Pair<
                                tscafpf::Heap,
                                OrVariableZeroOrMore<
                                    tscafpf::Heap,
                                    Either<
                                        tscafpf::Heap,
                                        Pair<
                                            tscafpf::Heap,
                                            tscafpf::Nat,
                                            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                                        >,
                                        ParseError<tscafpf::Heap>,
                                    >,
                                >,
                                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                            >,
                            ParseError<tscafpf::Heap>,
                        >,
                    >,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = OrVariable<(), Set<(), OrVariableZeroOrMore<(), Nat>>>;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        Set<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    OrVariableZeroOrMore<
                        tscafpf::Heap,
                        Either<
                            tscafpf::Heap,
                            Pair<
                                tscafpf::Heap,
                                tscafpf::Nat,
                                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                            >,
                            ParseError<tscafpf::Heap>,
                        >,
                    >,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = Set<(), OrVariableZeroOrMore<(), Nat>>;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        OrVariableZeroOrMore<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::Nat,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = OrVariableZeroOrMore<(), Nat>;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        BoundedNat<tscafpf::Heap>,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = BoundedNat<()>;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        NamedPattern<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::Plus,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = NamedPattern<(), Plus>;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        NamedPattern<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::LeftOperand,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = NamedPattern<(), LeftOperand>;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        NamedPattern<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::RightOperand,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = NamedPattern<(), RightOperand>;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        NamedPattern<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::F,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = NamedPattern<(), F>;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        NamedPattern<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::Sum,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = NamedPattern<(), Sum>;
}
impl words::Implements<tscafpf::Heap, L>
for Either<
    tscafpf::Heap,
    Pair<
        tscafpf::Heap,
        File<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::FileItem,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    >,
    ParseError<tscafpf::Heap>,
> {
    type LWord = File<(), FileItem>;
}
