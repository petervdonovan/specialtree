#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
use crate::term_specialized_cst_autoboxed_file_pattern_fib as tscafpf;
/// @generated by [term_bridge_gen::generate_heap]
impl fib::term_trait_fib::Heap for tscafpf::Heap {}
/// @generated by [words::words_inverse_impls]
pub mod words_inverse_impls {
    use tymetafuncspec_core::Set;
    use tymetafuncspec_core::Pair;
    use tymetafuncspec_core::Maybe;
    use tymetafuncspec_core::Either;
    use tymetafuncspec_core::BoundedNat;
    use std_parse_metadata::ParseMetadata;
    use std_parse_error::ParseError;
    use pattern_tmf::OrVariableZeroOrMore;
    use fib::words_mod_fib::sorts::Sum;
    use fib::words_mod_fib::sorts::RightOperand;
    use fib::words_mod_fib::sorts::Plus;
    use fib::words_mod_fib::sorts::Nat;
    use fib::words_mod_fib::sorts::LeftOperand;
    use fib::words_mod_fib::sorts::F;
    use fib::words_mod_fib::L;
    use crate::term_specialized_cst_autoboxed_file_pattern_fib as tscafpf;
    impl words::InverseImplements<L, Plus> for tscafpf::Heap {
        type ExternBehavioralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                tscafpf::Plus,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                tscafpf::Plus,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl words::InverseImplements<L, LeftOperand> for tscafpf::Heap {
        type ExternBehavioralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                tscafpf::LeftOperand,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                tscafpf::LeftOperand,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl words::InverseImplements<L, RightOperand> for tscafpf::Heap {
        type ExternBehavioralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                tscafpf::RightOperand,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                tscafpf::RightOperand,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl words::InverseImplements<L, F> for tscafpf::Heap {
        type ExternBehavioralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                tscafpf::F,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                tscafpf::F,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl words::InverseImplements<L, Sum> for tscafpf::Heap {
        type ExternBehavioralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                tscafpf::Sum,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                tscafpf::Sum,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl words::InverseImplements<L, Nat> for tscafpf::Heap {
        type ExternBehavioralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                tscafpf::Nat,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
        type StructuralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                tscafpf::Nat,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl words::InverseImplements<L, Set<(), Nat>> for tscafpf::Heap {
        type ExternBehavioralImplementor = Set<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    OrVariableZeroOrMore<
                        tscafpf::Heap,
                        Either<
                            tscafpf::Heap,
                            Pair<
                                tscafpf::Heap,
                                tscafpf::Nat,
                                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                            >,
                            ParseError<tscafpf::Heap>,
                        >,
                    >,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >;
        type StructuralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                Set<
                    tscafpf::Heap,
                    Either<
                        tscafpf::Heap,
                        Pair<
                            tscafpf::Heap,
                            OrVariableZeroOrMore<
                                tscafpf::Heap,
                                Either<
                                    tscafpf::Heap,
                                    Pair<
                                        tscafpf::Heap,
                                        tscafpf::Nat,
                                        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                                    >,
                                    ParseError<tscafpf::Heap>,
                                >,
                            >,
                            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                        >,
                        ParseError<tscafpf::Heap>,
                    >,
                >,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl words::InverseImplements<L, BoundedNat<()>> for tscafpf::Heap {
        type ExternBehavioralImplementor = BoundedNat<tscafpf::Heap>;
        type StructuralImplementor = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                BoundedNat<tscafpf::Heap>,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
}
