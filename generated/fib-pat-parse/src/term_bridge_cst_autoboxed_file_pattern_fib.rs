#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
use tymetafuncspec_core::Pair;
use tymetafuncspec_core::Maybe;
use tymetafuncspec_core::Either;
use std_parse_metadata::ParseMetadata;
use std_parse_error::ParseError;
use crate::term_specialized_cst_autoboxed_file_pattern_fib as tscafpf;
/// @generated by [term_bridge_gen::generate_heap]
impl fib_pat::term_trait_file_pattern_fib::Heap for tscafpf::Heap {
    type Plus = Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::Plus,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    >;
    type LeftOperand = Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::LeftOperand,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    >;
    type RightOperand = Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::RightOperand,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    >;
    type F = Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::F,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    >;
    type Sum = Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::Sum,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    >;
    type Nat = Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::Nat,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    >;
    type FileItem = Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::FileItem,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    >;
}
/// @generated by [term_bridge_gen::generate_owned_impls]
pub mod owned_impls {
    use tymetafuncspec_core::Pair;
    use tymetafuncspec_core::Maybe;
    use tymetafuncspec_core::Either;
    use std_parse_metadata::ParseMetadata;
    use std_parse_error::ParseError;
    use crate::term_specialized_cst_autoboxed_file_pattern_fib as tscafpf;
    impl fib_pat::term_trait_file_pattern_fib::owned::Plus<tscafpf::Heap>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::Plus,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {}
    impl fib_pat::term_trait_file_pattern_fib::owned::LeftOperand<tscafpf::Heap>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::LeftOperand,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {}
    impl fib_pat::term_trait_file_pattern_fib::owned::RightOperand<tscafpf::Heap>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::RightOperand,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {}
    impl fib_pat::term_trait_file_pattern_fib::owned::F<tscafpf::Heap>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::F,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {}
    impl fib_pat::term_trait_file_pattern_fib::owned::Sum<tscafpf::Heap>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::Sum,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {}
    impl fib_pat::term_trait_file_pattern_fib::owned::Nat<tscafpf::Heap>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::Nat,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {}
    impl fib_pat::term_trait_file_pattern_fib::owned::FileItem<tscafpf::Heap>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            tscafpf::FileItem,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {}
}
/// @generated by [term_bridge_gen::bridge_words_impls]
pub mod words_impls {
    use tymetafuncspec_core::Set;
    use tymetafuncspec_core::Pair;
    use tymetafuncspec_core::Maybe;
    use tymetafuncspec_core::IdxBox;
    use tymetafuncspec_core::Either;
    use tymetafuncspec_core::BoundedNat;
    use std_parse_metadata::ParseMetadata;
    use std_parse_error::ParseError;
    use pattern_tmf::OrVariableZeroOrMore;
    use pattern_tmf::OrVariable;
    use file_tmf::File;
    use fib_pat::words_mod_file_pattern_fib::sorts::Sum;
    use fib_pat::words_mod_file_pattern_fib::sorts::RightOperand;
    use fib_pat::words_mod_file_pattern_fib::sorts::Plus;
    use fib_pat::words_mod_file_pattern_fib::sorts::Nat;
    use fib_pat::words_mod_file_pattern_fib::sorts::LeftOperand;
    use fib_pat::words_mod_file_pattern_fib::sorts::FileItem;
    use fib_pat::words_mod_file_pattern_fib::sorts::F;
    use fib_pat::words_mod_file_pattern_fib::L;
    use fib_pat::term_trait_file_pattern_fib::Heap;
    use crate::term_specialized_cst_autoboxed_file_pattern_fib as tscafpf;
    impl words::Implements<tscafpf::Heap, L> for <tscafpf::Heap as Heap>::Plus {
        type LWord = Plus;
    }
    impl words::Implements<tscafpf::Heap, L> for <tscafpf::Heap as Heap>::LeftOperand {
        type LWord = LeftOperand;
    }
    impl words::Implements<tscafpf::Heap, L> for <tscafpf::Heap as Heap>::RightOperand {
        type LWord = RightOperand;
    }
    impl words::Implements<tscafpf::Heap, L> for <tscafpf::Heap as Heap>::F {
        type LWord = F;
    }
    impl words::Implements<tscafpf::Heap, L> for <tscafpf::Heap as Heap>::Sum {
        type LWord = Sum;
    }
    impl words::Implements<tscafpf::Heap, L> for <tscafpf::Heap as Heap>::Nat {
        type LWord = Nat;
    }
    impl words::Implements<tscafpf::Heap, L> for <tscafpf::Heap as Heap>::FileItem {
        type LWord = FileItem;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            OrVariable<
                tscafpf::Heap,
                Either<
                    tscafpf::Heap,
                    Pair<
                        tscafpf::Heap,
                        <tscafpf::Heap as Heap>::LeftOperand,
                        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                    >,
                    ParseError<tscafpf::Heap>,
                >,
            >,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<
                (),
                OrVariable<
                    (),
                    Either<
                        (),
                        Pair<(), LeftOperand, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        OrVariable<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    <tscafpf::Heap as Heap>::LeftOperand,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<
            (),
            OrVariable<
                (),
                Either<
                    (),
                    Pair<(), LeftOperand, Maybe<(), ParseMetadata<()>>>,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for OrVariable<
        tscafpf::Heap,
        Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                <tscafpf::Heap as Heap>::LeftOperand,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >,
    > {
        type LWord = OrVariable<
            (),
            Either<
                (),
                Pair<(), LeftOperand, Maybe<(), ParseMetadata<()>>>,
                ParseError<()>,
            >,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            <tscafpf::Heap as Heap>::LeftOperand,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<(), LeftOperand, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        <tscafpf::Heap as Heap>::LeftOperand,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<(), LeftOperand, Maybe<(), ParseMetadata<()>>>;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>> {
        type LWord = Maybe<(), ParseMetadata<()>>;
    }
    impl words::Implements<tscafpf::Heap, L> for ParseMetadata<tscafpf::Heap> {
        type LWord = ParseMetadata<()>;
    }
    impl words::Implements<tscafpf::Heap, L> for ParseError<tscafpf::Heap> {
        type LWord = ParseError<()>;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            OrVariable<
                tscafpf::Heap,
                Either<
                    tscafpf::Heap,
                    Pair<
                        tscafpf::Heap,
                        <tscafpf::Heap as Heap>::RightOperand,
                        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                    >,
                    ParseError<tscafpf::Heap>,
                >,
            >,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<
                (),
                OrVariable<
                    (),
                    Either<
                        (),
                        Pair<(), RightOperand, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        OrVariable<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    <tscafpf::Heap as Heap>::RightOperand,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<
            (),
            OrVariable<
                (),
                Either<
                    (),
                    Pair<(), RightOperand, Maybe<(), ParseMetadata<()>>>,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for OrVariable<
        tscafpf::Heap,
        Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                <tscafpf::Heap as Heap>::RightOperand,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >,
    > {
        type LWord = OrVariable<
            (),
            Either<
                (),
                Pair<(), RightOperand, Maybe<(), ParseMetadata<()>>>,
                ParseError<()>,
            >,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            <tscafpf::Heap as Heap>::RightOperand,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<(), RightOperand, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        <tscafpf::Heap as Heap>::RightOperand,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<(), RightOperand, Maybe<(), ParseMetadata<()>>>;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            OrVariable<
                tscafpf::Heap,
                Either<
                    tscafpf::Heap,
                    Pair<
                        tscafpf::Heap,
                        <tscafpf::Heap as Heap>::Nat,
                        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                    >,
                    ParseError<tscafpf::Heap>,
                >,
            >,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<
                (),
                OrVariable<
                    (),
                    Either<
                        (),
                        Pair<(), Nat, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        OrVariable<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    <tscafpf::Heap as Heap>::Nat,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<
            (),
            OrVariable<
                (),
                Either<(), Pair<(), Nat, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
            >,
            Maybe<(), ParseMetadata<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for OrVariable<
        tscafpf::Heap,
        Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                <tscafpf::Heap as Heap>::Nat,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >,
    > {
        type LWord = OrVariable<
            (),
            Either<(), Pair<(), Nat, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            <tscafpf::Heap as Heap>::Nat,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<(), Nat, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        <tscafpf::Heap as Heap>::Nat,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<(), Nat, Maybe<(), ParseMetadata<()>>>;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            OrVariable<
                tscafpf::Heap,
                Either<
                    tscafpf::Heap,
                    Pair<
                        tscafpf::Heap,
                        Set<
                            tscafpf::Heap,
                            Either<
                                tscafpf::Heap,
                                Pair<
                                    tscafpf::Heap,
                                    OrVariableZeroOrMore<
                                        tscafpf::Heap,
                                        Either<
                                            tscafpf::Heap,
                                            Pair<
                                                tscafpf::Heap,
                                                <tscafpf::Heap as Heap>::Nat,
                                                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                                            >,
                                            ParseError<tscafpf::Heap>,
                                        >,
                                    >,
                                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                                >,
                                ParseError<tscafpf::Heap>,
                            >,
                        >,
                        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                    >,
                    ParseError<tscafpf::Heap>,
                >,
            >,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<
                (),
                OrVariable<
                    (),
                    Either<
                        (),
                        Pair<
                            (),
                            Set<
                                (),
                                Either<
                                    (),
                                    Pair<
                                        (),
                                        OrVariableZeroOrMore<
                                            (),
                                            Either<
                                                (),
                                                Pair<(), Nat, Maybe<(), ParseMetadata<()>>>,
                                                ParseError<()>,
                                            >,
                                        >,
                                        Maybe<(), ParseMetadata<()>>,
                                    >,
                                    ParseError<()>,
                                >,
                            >,
                            Maybe<(), ParseMetadata<()>>,
                        >,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        OrVariable<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    Set<
                        tscafpf::Heap,
                        Either<
                            tscafpf::Heap,
                            Pair<
                                tscafpf::Heap,
                                OrVariableZeroOrMore<
                                    tscafpf::Heap,
                                    Either<
                                        tscafpf::Heap,
                                        Pair<
                                            tscafpf::Heap,
                                            <tscafpf::Heap as Heap>::Nat,
                                            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                                        >,
                                        ParseError<tscafpf::Heap>,
                                    >,
                                >,
                                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                            >,
                            ParseError<tscafpf::Heap>,
                        >,
                    >,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<
            (),
            OrVariable<
                (),
                Either<
                    (),
                    Pair<
                        (),
                        Set<
                            (),
                            Either<
                                (),
                                Pair<
                                    (),
                                    OrVariableZeroOrMore<
                                        (),
                                        Either<
                                            (),
                                            Pair<(), Nat, Maybe<(), ParseMetadata<()>>>,
                                            ParseError<()>,
                                        >,
                                    >,
                                    Maybe<(), ParseMetadata<()>>,
                                >,
                                ParseError<()>,
                            >,
                        >,
                        Maybe<(), ParseMetadata<()>>,
                    >,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for OrVariable<
        tscafpf::Heap,
        Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                Set<
                    tscafpf::Heap,
                    Either<
                        tscafpf::Heap,
                        Pair<
                            tscafpf::Heap,
                            OrVariableZeroOrMore<
                                tscafpf::Heap,
                                Either<
                                    tscafpf::Heap,
                                    Pair<
                                        tscafpf::Heap,
                                        <tscafpf::Heap as Heap>::Nat,
                                        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                                    >,
                                    ParseError<tscafpf::Heap>,
                                >,
                            >,
                            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                        >,
                        ParseError<tscafpf::Heap>,
                    >,
                >,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >,
    > {
        type LWord = OrVariable<
            (),
            Either<
                (),
                Pair<
                    (),
                    Set<
                        (),
                        Either<
                            (),
                            Pair<
                                (),
                                OrVariableZeroOrMore<
                                    (),
                                    Either<
                                        (),
                                        Pair<(), Nat, Maybe<(), ParseMetadata<()>>>,
                                        ParseError<()>,
                                    >,
                                >,
                                Maybe<(), ParseMetadata<()>>,
                            >,
                            ParseError<()>,
                        >,
                    >,
                    Maybe<(), ParseMetadata<()>>,
                >,
                ParseError<()>,
            >,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            Set<
                tscafpf::Heap,
                Either<
                    tscafpf::Heap,
                    Pair<
                        tscafpf::Heap,
                        OrVariableZeroOrMore<
                            tscafpf::Heap,
                            Either<
                                tscafpf::Heap,
                                Pair<
                                    tscafpf::Heap,
                                    <tscafpf::Heap as Heap>::Nat,
                                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                                >,
                                ParseError<tscafpf::Heap>,
                            >,
                        >,
                        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                    >,
                    ParseError<tscafpf::Heap>,
                >,
            >,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<
                (),
                Set<
                    (),
                    Either<
                        (),
                        Pair<
                            (),
                            OrVariableZeroOrMore<
                                (),
                                Either<
                                    (),
                                    Pair<(), Nat, Maybe<(), ParseMetadata<()>>>,
                                    ParseError<()>,
                                >,
                            >,
                            Maybe<(), ParseMetadata<()>>,
                        >,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        Set<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    OrVariableZeroOrMore<
                        tscafpf::Heap,
                        Either<
                            tscafpf::Heap,
                            Pair<
                                tscafpf::Heap,
                                <tscafpf::Heap as Heap>::Nat,
                                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                            >,
                            ParseError<tscafpf::Heap>,
                        >,
                    >,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<
            (),
            Set<
                (),
                Either<
                    (),
                    Pair<
                        (),
                        OrVariableZeroOrMore<
                            (),
                            Either<
                                (),
                                Pair<(), Nat, Maybe<(), ParseMetadata<()>>>,
                                ParseError<()>,
                            >,
                        >,
                        Maybe<(), ParseMetadata<()>>,
                    >,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Set<
        tscafpf::Heap,
        Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                OrVariableZeroOrMore<
                    tscafpf::Heap,
                    Either<
                        tscafpf::Heap,
                        Pair<
                            tscafpf::Heap,
                            <tscafpf::Heap as Heap>::Nat,
                            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                        >,
                        ParseError<tscafpf::Heap>,
                    >,
                >,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >,
    > {
        type LWord = Set<
            (),
            Either<
                (),
                Pair<
                    (),
                    OrVariableZeroOrMore<
                        (),
                        Either<
                            (),
                            Pair<(), Nat, Maybe<(), ParseMetadata<()>>>,
                            ParseError<()>,
                        >,
                    >,
                    Maybe<(), ParseMetadata<()>>,
                >,
                ParseError<()>,
            >,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            OrVariableZeroOrMore<
                tscafpf::Heap,
                Either<
                    tscafpf::Heap,
                    Pair<
                        tscafpf::Heap,
                        <tscafpf::Heap as Heap>::Nat,
                        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                    >,
                    ParseError<tscafpf::Heap>,
                >,
            >,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<
                (),
                OrVariableZeroOrMore<
                    (),
                    Either<
                        (),
                        Pair<(), Nat, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        OrVariableZeroOrMore<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    <tscafpf::Heap as Heap>::Nat,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<
            (),
            OrVariableZeroOrMore<
                (),
                Either<(), Pair<(), Nat, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
            >,
            Maybe<(), ParseMetadata<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for OrVariableZeroOrMore<
        tscafpf::Heap,
        Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                <tscafpf::Heap as Heap>::Nat,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >,
    > {
        type LWord = OrVariableZeroOrMore<
            (),
            Either<(), Pair<(), Nat, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            BoundedNat<tscafpf::Heap>,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<(), BoundedNat<()>, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        BoundedNat<tscafpf::Heap>,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<(), BoundedNat<()>, Maybe<(), ParseMetadata<()>>>;
    }
    impl words::Implements<tscafpf::Heap, L> for BoundedNat<tscafpf::Heap> {
        type LWord = BoundedNat<()>;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            IdxBox<
                tscafpf::Heap,
                Either<
                    tscafpf::Heap,
                    Pair<
                        tscafpf::Heap,
                        <tscafpf::Heap as Heap>::F,
                        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                    >,
                    ParseError<tscafpf::Heap>,
                >,
            >,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<
                (),
                IdxBox<
                    (),
                    Either<(), Pair<(), F, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        IdxBox<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    <tscafpf::Heap as Heap>::F,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<
            (),
            IdxBox<
                (),
                Either<(), Pair<(), F, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
            >,
            Maybe<(), ParseMetadata<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for IdxBox<
        tscafpf::Heap,
        Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                <tscafpf::Heap as Heap>::F,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >,
    > {
        type LWord = IdxBox<
            (),
            Either<(), Pair<(), F, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            <tscafpf::Heap as Heap>::F,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<(), F, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        <tscafpf::Heap as Heap>::F,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<(), F, Maybe<(), ParseMetadata<()>>>;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            IdxBox<
                tscafpf::Heap,
                Either<
                    tscafpf::Heap,
                    Pair<
                        tscafpf::Heap,
                        <tscafpf::Heap as Heap>::Plus,
                        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                    >,
                    ParseError<tscafpf::Heap>,
                >,
            >,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<
                (),
                IdxBox<
                    (),
                    Either<
                        (),
                        Pair<(), Plus, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        IdxBox<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    <tscafpf::Heap as Heap>::Plus,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<
            (),
            IdxBox<
                (),
                Either<(), Pair<(), Plus, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
            >,
            Maybe<(), ParseMetadata<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for IdxBox<
        tscafpf::Heap,
        Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                <tscafpf::Heap as Heap>::Plus,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >,
    > {
        type LWord = IdxBox<
            (),
            Either<(), Pair<(), Plus, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            <tscafpf::Heap as Heap>::Plus,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<(), Plus, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        <tscafpf::Heap as Heap>::Plus,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<(), Plus, Maybe<(), ParseMetadata<()>>>;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            <tscafpf::Heap as Heap>::Sum,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<(), Sum, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        <tscafpf::Heap as Heap>::Sum,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<(), Sum, Maybe<(), ParseMetadata<()>>>;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            File<
                tscafpf::Heap,
                Either<
                    tscafpf::Heap,
                    Pair<
                        tscafpf::Heap,
                        <tscafpf::Heap as Heap>::FileItem,
                        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                    >,
                    ParseError<tscafpf::Heap>,
                >,
            >,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<
                (),
                File<
                    (),
                    Either<
                        (),
                        Pair<(), FileItem, Maybe<(), ParseMetadata<()>>>,
                        ParseError<()>,
                    >,
                >,
                Maybe<(), ParseMetadata<()>>,
            >,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        File<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    <tscafpf::Heap as Heap>::FileItem,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<
            (),
            File<
                (),
                Either<
                    (),
                    Pair<(), FileItem, Maybe<(), ParseMetadata<()>>>,
                    ParseError<()>,
                >,
            >,
            Maybe<(), ParseMetadata<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for File<
        tscafpf::Heap,
        Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                <tscafpf::Heap as Heap>::FileItem,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >,
    > {
        type LWord = File<
            (),
            Either<(), Pair<(), FileItem, Maybe<(), ParseMetadata<()>>>, ParseError<()>>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Either<
        tscafpf::Heap,
        Pair<
            tscafpf::Heap,
            <tscafpf::Heap as Heap>::FileItem,
            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
        >,
        ParseError<tscafpf::Heap>,
    > {
        type LWord = Either<
            (),
            Pair<(), FileItem, Maybe<(), ParseMetadata<()>>>,
            ParseError<()>,
        >;
    }
    impl words::Implements<tscafpf::Heap, L>
    for Pair<
        tscafpf::Heap,
        <tscafpf::Heap as Heap>::FileItem,
        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
    > {
        type LWord = Pair<(), FileItem, Maybe<(), ParseMetadata<()>>>;
    }
}
/// @generated by [term_bridge_gen::generate_maps_tmf_impls]
pub mod maps_tmf_impls {
    use tymetafuncspec_core::Set;
    use tymetafuncspec_core::Pair;
    use tymetafuncspec_core::Maybe;
    use tymetafuncspec_core::Either;
    use tymetafuncspec_core::BoundedNat;
    use std_parse_metadata::ParseMetadata;
    use std_parse_error::ParseError;
    use pattern_tmf::OrVariableZeroOrMore;
    use pattern_tmf::OrVariable;
    use file_tmf::File;
    use fib_pat::words_mod_file_pattern_fib::L;
    use fib_pat::term_trait_file_pattern_fib::Heap;
    use crate::term_specialized_cst_autoboxed_file_pattern_fib as tscafpf;
    impl term::MapsTmf<
        L,
        OrVariable<tscafpf::Heap, <tscafpf::Heap as Heap>::LeftOperand>,
    > for tscafpf::Heap {
        type TmfFrom = OrVariable<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::LeftOperand,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >;
        type TmfTo = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                OrVariable<
                    tscafpf::Heap,
                    Either<
                        tscafpf::Heap,
                        Pair<
                            tscafpf::Heap,
                            tscafpf::LeftOperand,
                            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                        >,
                        ParseError<tscafpf::Heap>,
                    >,
                >,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl term::MapsTmf<
        L,
        OrVariable<tscafpf::Heap, <tscafpf::Heap as Heap>::RightOperand>,
    > for tscafpf::Heap {
        type TmfFrom = OrVariable<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::RightOperand,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >;
        type TmfTo = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                OrVariable<
                    tscafpf::Heap,
                    Either<
                        tscafpf::Heap,
                        Pair<
                            tscafpf::Heap,
                            tscafpf::RightOperand,
                            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                        >,
                        ParseError<tscafpf::Heap>,
                    >,
                >,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl term::MapsTmf<L, OrVariable<tscafpf::Heap, <tscafpf::Heap as Heap>::Nat>>
    for tscafpf::Heap {
        type TmfFrom = OrVariable<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::Nat,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >;
        type TmfTo = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                OrVariable<
                    tscafpf::Heap,
                    Either<
                        tscafpf::Heap,
                        Pair<
                            tscafpf::Heap,
                            tscafpf::Nat,
                            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                        >,
                        ParseError<tscafpf::Heap>,
                    >,
                >,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl term::MapsTmf<
        L,
        OrVariable<
            tscafpf::Heap,
            Set<
                tscafpf::Heap,
                OrVariableZeroOrMore<tscafpf::Heap, <tscafpf::Heap as Heap>::Nat>,
            >,
        >,
    > for tscafpf::Heap {
        type TmfFrom = OrVariable<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    Set<
                        tscafpf::Heap,
                        Either<
                            tscafpf::Heap,
                            Pair<
                                tscafpf::Heap,
                                OrVariableZeroOrMore<
                                    tscafpf::Heap,
                                    Either<
                                        tscafpf::Heap,
                                        Pair<
                                            tscafpf::Heap,
                                            tscafpf::Nat,
                                            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                                        >,
                                        ParseError<tscafpf::Heap>,
                                    >,
                                >,
                                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                            >,
                            ParseError<tscafpf::Heap>,
                        >,
                    >,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >;
        type TmfTo = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                OrVariable<
                    tscafpf::Heap,
                    Either<
                        tscafpf::Heap,
                        Pair<
                            tscafpf::Heap,
                            Set<
                                tscafpf::Heap,
                                Either<
                                    tscafpf::Heap,
                                    Pair<
                                        tscafpf::Heap,
                                        OrVariableZeroOrMore<
                                            tscafpf::Heap,
                                            Either<
                                                tscafpf::Heap,
                                                Pair<
                                                    tscafpf::Heap,
                                                    tscafpf::Nat,
                                                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                                                >,
                                                ParseError<tscafpf::Heap>,
                                            >,
                                        >,
                                        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                                    >,
                                    ParseError<tscafpf::Heap>,
                                >,
                            >,
                            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                        >,
                        ParseError<tscafpf::Heap>,
                    >,
                >,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl term::MapsTmf<
        L,
        Set<
            tscafpf::Heap,
            OrVariableZeroOrMore<tscafpf::Heap, <tscafpf::Heap as Heap>::Nat>,
        >,
    > for tscafpf::Heap {
        type TmfFrom = Set<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    OrVariableZeroOrMore<
                        tscafpf::Heap,
                        Either<
                            tscafpf::Heap,
                            Pair<
                                tscafpf::Heap,
                                tscafpf::Nat,
                                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                            >,
                            ParseError<tscafpf::Heap>,
                        >,
                    >,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >;
        type TmfTo = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                Set<
                    tscafpf::Heap,
                    Either<
                        tscafpf::Heap,
                        Pair<
                            tscafpf::Heap,
                            OrVariableZeroOrMore<
                                tscafpf::Heap,
                                Either<
                                    tscafpf::Heap,
                                    Pair<
                                        tscafpf::Heap,
                                        tscafpf::Nat,
                                        Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                                    >,
                                    ParseError<tscafpf::Heap>,
                                >,
                            >,
                            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                        >,
                        ParseError<tscafpf::Heap>,
                    >,
                >,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl term::MapsTmf<
        L,
        OrVariableZeroOrMore<tscafpf::Heap, <tscafpf::Heap as Heap>::Nat>,
    > for tscafpf::Heap {
        type TmfFrom = OrVariableZeroOrMore<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::Nat,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >;
        type TmfTo = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                OrVariableZeroOrMore<
                    tscafpf::Heap,
                    Either<
                        tscafpf::Heap,
                        Pair<
                            tscafpf::Heap,
                            tscafpf::Nat,
                            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                        >,
                        ParseError<tscafpf::Heap>,
                    >,
                >,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl term::MapsTmf<L, BoundedNat<tscafpf::Heap>> for tscafpf::Heap {
        type TmfFrom = BoundedNat<tscafpf::Heap>;
        type TmfTo = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                BoundedNat<tscafpf::Heap>,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
    impl term::MapsTmf<L, File<tscafpf::Heap, <tscafpf::Heap as Heap>::FileItem>>
    for tscafpf::Heap {
        type TmfFrom = File<
            tscafpf::Heap,
            Either<
                tscafpf::Heap,
                Pair<
                    tscafpf::Heap,
                    tscafpf::FileItem,
                    Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                >,
                ParseError<tscafpf::Heap>,
            >,
        >;
        type TmfTo = Either<
            tscafpf::Heap,
            Pair<
                tscafpf::Heap,
                File<
                    tscafpf::Heap,
                    Either<
                        tscafpf::Heap,
                        Pair<
                            tscafpf::Heap,
                            tscafpf::FileItem,
                            Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
                        >,
                        ParseError<tscafpf::Heap>,
                    >,
                >,
                Maybe<tscafpf::Heap, ParseMetadata<tscafpf::Heap>>,
            >,
            ParseError<tscafpf::Heap>,
        >;
    }
}
