#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
use tymetafuncspec_core::Pair;
use tymetafuncspec_core::Maybe;
use tymetafuncspec_core::Either;
use std_parse_metadata::ParseMetadata;
use std_parse_error::ParseError;
use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
/// @generated by [term_bridge_gen::generate_heap]
impl fib_pat::term_trait_pattern_fib::Heap for tscapf::Heap {
    type Plus = Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            tscapf::Plus,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    >;
    type LeftOperand = Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            tscapf::LeftOperand,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    >;
    type RightOperand = Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            tscapf::RightOperand,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    >;
    type F = Either<
        tscapf::Heap,
        Pair<tscapf::Heap, tscapf::F, Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>>,
        ParseError<tscapf::Heap>,
    >;
    type Sum = Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            tscapf::Sum,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    >;
    type Nat = Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            tscapf::Nat,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    >;
}
/// @generated by [term_bridge_gen::generate_owned_impls]
pub mod owned_impls {
    use tymetafuncspec_core::Pair;
    use tymetafuncspec_core::Maybe;
    use tymetafuncspec_core::Either;
    use std_parse_metadata::ParseMetadata;
    use std_parse_error::ParseError;
    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
    impl fib_pat::term_trait_pattern_fib::owned::Plus<tscapf::Heap>
    for Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            tscapf::Plus,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    > {}
    impl fib_pat::term_trait_pattern_fib::owned::LeftOperand<tscapf::Heap>
    for Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            tscapf::LeftOperand,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    > {}
    impl fib_pat::term_trait_pattern_fib::owned::RightOperand<tscapf::Heap>
    for Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            tscapf::RightOperand,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    > {}
    impl fib_pat::term_trait_pattern_fib::owned::F<tscapf::Heap>
    for Either<
        tscapf::Heap,
        Pair<tscapf::Heap, tscapf::F, Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>>,
        ParseError<tscapf::Heap>,
    > {}
    impl fib_pat::term_trait_pattern_fib::owned::Sum<tscapf::Heap>
    for Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            tscapf::Sum,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    > {}
    impl fib_pat::term_trait_pattern_fib::owned::Nat<tscapf::Heap>
    for Either<
        tscapf::Heap,
        Pair<
            tscapf::Heap,
            tscapf::Nat,
            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
        >,
        ParseError<tscapf::Heap>,
    > {}
}
/// @generated by [term_bridge_gen::bridge_words_impls]
pub mod words_impls {
    use fib_pat::words_mod_pattern_fib::sorts::Sum;
    use fib_pat::words_mod_pattern_fib::sorts::RightOperand;
    use fib_pat::words_mod_pattern_fib::sorts::Plus;
    use fib_pat::words_mod_pattern_fib::sorts::Nat;
    use fib_pat::words_mod_pattern_fib::sorts::LeftOperand;
    use fib_pat::words_mod_pattern_fib::sorts::F;
    use fib_pat::words_mod_pattern_fib::L;
    use fib_pat::term_trait_pattern_fib::Heap;
    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
    impl words::Implements<tscapf::Heap, L> for <tscapf::Heap as Heap>::Plus {
        type LWord = Plus;
    }
    impl words::Implements<tscapf::Heap, L> for <tscapf::Heap as Heap>::LeftOperand {
        type LWord = LeftOperand;
    }
    impl words::Implements<tscapf::Heap, L> for <tscapf::Heap as Heap>::RightOperand {
        type LWord = RightOperand;
    }
    impl words::Implements<tscapf::Heap, L> for <tscapf::Heap as Heap>::F {
        type LWord = F;
    }
    impl words::Implements<tscapf::Heap, L> for <tscapf::Heap as Heap>::Sum {
        type LWord = Sum;
    }
    impl words::Implements<tscapf::Heap, L> for <tscapf::Heap as Heap>::Nat {
        type LWord = Nat;
    }
}
/// @generated by [term_bridge_gen::generate_maps_tmf_impls]
pub mod maps_tmf_impls {
    use tymetafuncspec_core::Set;
    use tymetafuncspec_core::Pair;
    use tymetafuncspec_core::Maybe;
    use tymetafuncspec_core::Either;
    use tymetafuncspec_core::BoundedNat;
    use std_parse_metadata::ParseMetadata;
    use std_parse_error::ParseError;
    use pattern_tmf::OrVariableZeroOrMore;
    use pattern_tmf::OrVariable;
    use fib_pat::words_mod_pattern_fib::L;
    use fib_pat::term_trait_pattern_fib::Heap;
    use crate::term_specialized_cst_autoboxed_pattern_fib as tscapf;
    impl term::MapsTmf<L, OrVariable<tscapf::Heap, <tscapf::Heap as Heap>::LeftOperand>>
    for tscapf::Heap {
        type TmfFrom = OrVariable<
            tscapf::Heap,
            Either<
                tscapf::Heap,
                Pair<
                    tscapf::Heap,
                    tscapf::LeftOperand,
                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                >,
                ParseError<tscapf::Heap>,
            >,
        >;
        type TmfTo = Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                OrVariable<
                    tscapf::Heap,
                    Either<
                        tscapf::Heap,
                        Pair<
                            tscapf::Heap,
                            tscapf::LeftOperand,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                        ParseError<tscapf::Heap>,
                    >,
                >,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >;
    }
    impl term::MapsTmf<L, OrVariable<tscapf::Heap, <tscapf::Heap as Heap>::RightOperand>>
    for tscapf::Heap {
        type TmfFrom = OrVariable<
            tscapf::Heap,
            Either<
                tscapf::Heap,
                Pair<
                    tscapf::Heap,
                    tscapf::RightOperand,
                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                >,
                ParseError<tscapf::Heap>,
            >,
        >;
        type TmfTo = Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                OrVariable<
                    tscapf::Heap,
                    Either<
                        tscapf::Heap,
                        Pair<
                            tscapf::Heap,
                            tscapf::RightOperand,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                        ParseError<tscapf::Heap>,
                    >,
                >,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >;
    }
    impl term::MapsTmf<L, OrVariable<tscapf::Heap, <tscapf::Heap as Heap>::Nat>>
    for tscapf::Heap {
        type TmfFrom = OrVariable<
            tscapf::Heap,
            Either<
                tscapf::Heap,
                Pair<
                    tscapf::Heap,
                    tscapf::Nat,
                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                >,
                ParseError<tscapf::Heap>,
            >,
        >;
        type TmfTo = Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                OrVariable<
                    tscapf::Heap,
                    Either<
                        tscapf::Heap,
                        Pair<
                            tscapf::Heap,
                            tscapf::Nat,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                        ParseError<tscapf::Heap>,
                    >,
                >,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >;
    }
    impl term::MapsTmf<
        L,
        OrVariable<
            tscapf::Heap,
            Set<
                tscapf::Heap,
                OrVariableZeroOrMore<tscapf::Heap, <tscapf::Heap as Heap>::Nat>,
            >,
        >,
    > for tscapf::Heap {
        type TmfFrom = OrVariable<
            tscapf::Heap,
            Either<
                tscapf::Heap,
                Pair<
                    tscapf::Heap,
                    Set<
                        tscapf::Heap,
                        Either<
                            tscapf::Heap,
                            Pair<
                                tscapf::Heap,
                                OrVariableZeroOrMore<
                                    tscapf::Heap,
                                    Either<
                                        tscapf::Heap,
                                        Pair<
                                            tscapf::Heap,
                                            tscapf::Nat,
                                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                        >,
                                        ParseError<tscapf::Heap>,
                                    >,
                                >,
                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                            >,
                            ParseError<tscapf::Heap>,
                        >,
                    >,
                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                >,
                ParseError<tscapf::Heap>,
            >,
        >;
        type TmfTo = Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                OrVariable<
                    tscapf::Heap,
                    Either<
                        tscapf::Heap,
                        Pair<
                            tscapf::Heap,
                            Set<
                                tscapf::Heap,
                                Either<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        OrVariableZeroOrMore<
                                            tscapf::Heap,
                                            Either<
                                                tscapf::Heap,
                                                Pair<
                                                    tscapf::Heap,
                                                    tscapf::Nat,
                                                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                                >,
                                                ParseError<tscapf::Heap>,
                                            >,
                                        >,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            >,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                        ParseError<tscapf::Heap>,
                    >,
                >,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >;
    }
    impl term::MapsTmf<
        L,
        Set<
            tscapf::Heap,
            OrVariableZeroOrMore<tscapf::Heap, <tscapf::Heap as Heap>::Nat>,
        >,
    > for tscapf::Heap {
        type TmfFrom = Set<
            tscapf::Heap,
            Either<
                tscapf::Heap,
                Pair<
                    tscapf::Heap,
                    OrVariableZeroOrMore<
                        tscapf::Heap,
                        Either<
                            tscapf::Heap,
                            Pair<
                                tscapf::Heap,
                                tscapf::Nat,
                                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                            >,
                            ParseError<tscapf::Heap>,
                        >,
                    >,
                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                >,
                ParseError<tscapf::Heap>,
            >,
        >;
        type TmfTo = Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                Set<
                    tscapf::Heap,
                    Either<
                        tscapf::Heap,
                        Pair<
                            tscapf::Heap,
                            OrVariableZeroOrMore<
                                tscapf::Heap,
                                Either<
                                    tscapf::Heap,
                                    Pair<
                                        tscapf::Heap,
                                        tscapf::Nat,
                                        Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                                    >,
                                    ParseError<tscapf::Heap>,
                                >,
                            >,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                        ParseError<tscapf::Heap>,
                    >,
                >,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >;
    }
    impl term::MapsTmf<
        L,
        OrVariableZeroOrMore<tscapf::Heap, <tscapf::Heap as Heap>::Nat>,
    > for tscapf::Heap {
        type TmfFrom = OrVariableZeroOrMore<
            tscapf::Heap,
            Either<
                tscapf::Heap,
                Pair<
                    tscapf::Heap,
                    tscapf::Nat,
                    Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                >,
                ParseError<tscapf::Heap>,
            >,
        >;
        type TmfTo = Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                OrVariableZeroOrMore<
                    tscapf::Heap,
                    Either<
                        tscapf::Heap,
                        Pair<
                            tscapf::Heap,
                            tscapf::Nat,
                            Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
                        >,
                        ParseError<tscapf::Heap>,
                    >,
                >,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >;
    }
    impl term::MapsTmf<L, BoundedNat<tscapf::Heap>> for tscapf::Heap {
        type TmfFrom = BoundedNat<tscapf::Heap>;
        type TmfTo = Either<
            tscapf::Heap,
            Pair<
                tscapf::Heap,
                BoundedNat<tscapf::Heap>,
                Maybe<tscapf::Heap, ParseMetadata<tscapf::Heap>>,
            >,
            ParseError<tscapf::Heap>,
        >;
    }
}
