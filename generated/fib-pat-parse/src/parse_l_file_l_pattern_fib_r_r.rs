#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [parse_gen::generate]
use words::AdtLike;
use parse_adt::cstfy::Cstfy;
use parse_adt::Parser;
use fib_pat::l_words_mod_r_l_file_l_pattern_fib_r_r::sorts::Sum;
use fib_pat::l_words_mod_r_l_file_l_pattern_fib_r_r::sorts::Right_operand;
use fib_pat::l_words_mod_r_l_file_l_pattern_fib_r_r::sorts::Plus;
use fib_pat::l_words_mod_r_l_file_l_pattern_fib_r_r::sorts::Nat;
use fib_pat::l_words_mod_r_l_file_l_pattern_fib_r_r::sorts::Left_operand;
use fib_pat::l_words_mod_r_l_file_l_pattern_fib_r_r::sorts::FileItem;
use fib_pat::l_words_mod_r_l_file_l_pattern_fib_r_r::sorts::F;
use fib_pat::l_words_mod_r_l_file_l_pattern_fib_r_r::L;
use crate::l_term_specialized_r_l_cst_l_autoboxed_l_file_l_pattern_fib_r_r_r_r as ltsrlclalflpfrrrr;
/// @generated by [parse_gen::generate_parse]
pub fn f(
    source: &str,
) -> (ltsrlclalflpfrrrr::Heap, Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::F>) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::l_term_specialized_r_l_cst_l_autoboxed_l_file_l_pattern_fib_r_r_r_r::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        F,
        L,
        Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::F>,
        ltsrlclalflpfrrrr::Heap,
        AdtLike,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
/// @generated by [parse_gen::generate_parse]
pub fn left_operand(
    source: &str,
) -> (
    ltsrlclalflpfrrrr::Heap,
    Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::Left_operand>,
) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::l_term_specialized_r_l_cst_l_autoboxed_l_file_l_pattern_fib_r_r_r_r::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        Left_operand,
        L,
        Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::Left_operand>,
        ltsrlclalflpfrrrr::Heap,
        AdtLike,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
/// @generated by [parse_gen::generate_parse]
pub fn plus(
    source: &str,
) -> (ltsrlclalflpfrrrr::Heap, Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::Plus>) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::l_term_specialized_r_l_cst_l_autoboxed_l_file_l_pattern_fib_r_r_r_r::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        Plus,
        L,
        Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::Plus>,
        ltsrlclalflpfrrrr::Heap,
        AdtLike,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
/// @generated by [parse_gen::generate_parse]
pub fn right_operand(
    source: &str,
) -> (
    ltsrlclalflpfrrrr::Heap,
    Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::Right_operand>,
) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::l_term_specialized_r_l_cst_l_autoboxed_l_file_l_pattern_fib_r_r_r_r::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        Right_operand,
        L,
        Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::Right_operand>,
        ltsrlclalflpfrrrr::Heap,
        AdtLike,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
/// @generated by [parse_gen::generate_parse]
pub fn sum(
    source: &str,
) -> (ltsrlclalflpfrrrr::Heap, Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::Sum>) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::l_term_specialized_r_l_cst_l_autoboxed_l_file_l_pattern_fib_r_r_r_r::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        Sum,
        L,
        Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::Sum>,
        ltsrlclalflpfrrrr::Heap,
        AdtLike,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
/// @generated by [parse_gen::generate_parse]
pub fn nat(
    source: &str,
) -> (ltsrlclalflpfrrrr::Heap, Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::Nat>) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::l_term_specialized_r_l_cst_l_autoboxed_l_file_l_pattern_fib_r_r_r_r::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        Nat,
        L,
        Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::Nat>,
        ltsrlclalflpfrrrr::Heap,
        AdtLike,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
/// @generated by [parse_gen::generate_parse]
pub fn file_item(
    source: &str,
) -> (
    ltsrlclalflpfrrrr::Heap,
    Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::FileItem>,
) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::l_term_specialized_r_l_cst_l_autoboxed_l_file_l_pattern_fib_r_r_r_r::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        FileItem,
        L,
        Cstfy<ltsrlclalflpfrrrr::Heap, ltsrlclalflpfrrrr::FileItem>,
        ltsrlclalflpfrrrr::Heap,
        AdtLike,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
