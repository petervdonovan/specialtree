#![feature(custom_inner_attributes)]
#![rustfmt::skip]
#![allow(warnings)]
#![allow(unknown_lints)]
//! @generated by [parse_gen::generate]
use pmsp::AdtMetadata;
use parse_adt::cstfy::Cstfy;
use parse_adt::Parser;
use fib_pat::words_mod_file_pattern_fib::L;
use crate::term_specialized_cst_autoboxed_file_pattern_fib as tscafpf;
/// @generated by [parse_gen::generate_parse]
pub fn plus(source: &str) -> (tscafpf::Heap, Cstfy<tscafpf::Heap, tscafpf::Plus>) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::term_specialized_cst_autoboxed_file_pattern_fib::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        AdtMetadata,
        Cstfy<tscafpf::Heap, tscafpf::Plus>,
        tscafpf::Heap,
        L,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
/// @generated by [parse_gen::generate_parse]
pub fn left_operand(
    source: &str,
) -> (tscafpf::Heap, Cstfy<tscafpf::Heap, tscafpf::LeftOperand>) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::term_specialized_cst_autoboxed_file_pattern_fib::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        AdtMetadata,
        Cstfy<tscafpf::Heap, tscafpf::LeftOperand>,
        tscafpf::Heap,
        L,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
/// @generated by [parse_gen::generate_parse]
pub fn right_operand(
    source: &str,
) -> (tscafpf::Heap, Cstfy<tscafpf::Heap, tscafpf::RightOperand>) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::term_specialized_cst_autoboxed_file_pattern_fib::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        AdtMetadata,
        Cstfy<tscafpf::Heap, tscafpf::RightOperand>,
        tscafpf::Heap,
        L,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
/// @generated by [parse_gen::generate_parse]
pub fn f(source: &str) -> (tscafpf::Heap, Cstfy<tscafpf::Heap, tscafpf::F>) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::term_specialized_cst_autoboxed_file_pattern_fib::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        AdtMetadata,
        Cstfy<tscafpf::Heap, tscafpf::F>,
        tscafpf::Heap,
        L,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
/// @generated by [parse_gen::generate_parse]
pub fn sum(source: &str) -> (tscafpf::Heap, Cstfy<tscafpf::Heap, tscafpf::Sum>) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::term_specialized_cst_autoboxed_file_pattern_fib::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        AdtMetadata,
        Cstfy<tscafpf::Heap, tscafpf::Sum>,
        tscafpf::Heap,
        L,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
/// @generated by [parse_gen::generate_parse]
pub fn nat(source: &str) -> (tscafpf::Heap, Cstfy<tscafpf::Heap, tscafpf::Nat>) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::term_specialized_cst_autoboxed_file_pattern_fib::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        AdtMetadata,
        Cstfy<tscafpf::Heap, tscafpf::Nat>,
        tscafpf::Heap,
        L,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
/// @generated by [parse_gen::generate_parse]
pub fn file_item(
    source: &str,
) -> (tscafpf::Heap, Cstfy<tscafpf::Heap, tscafpf::FileItem>) {
    let mut parser = parse_adt::Parser::new(source);
    let mut heap = crate::term_specialized_cst_autoboxed_file_pattern_fib::Heap::default();
    let ret = <Parser<
        '_,
        L,
    > as covisit::Covisit<
        AdtMetadata,
        Cstfy<tscafpf::Heap, tscafpf::FileItem>,
        tscafpf::Heap,
        L,
    >>::covisit(&mut parser, &mut heap);
    (heap, ret)
}
